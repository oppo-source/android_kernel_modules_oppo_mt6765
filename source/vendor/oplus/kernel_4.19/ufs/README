From 769cf5622ea38c34e63eefcbe9992db8c3f58f71 Mon Sep 17 00:00:00 2001
From: Stanley Chu <stanley.chu@mediatek.com>
Date: Thu, 10 Sep 2020 07:16:59 +0800
Subject: [PATCH] [ALPS05320695] scsi: ufs-mtk: Fix VA09 regulator operations

Fix VA09 regulator operations.

Change-Id: Ieccffacd8540b8694db6f308027e56cda9edb155
Signed-off-by: Stanley Chu <stanley.chu@mediatek.com>
CR-Id: ALPS05320695
Feature: UFS Booting

From ed69980eb684936208a08172556ed54b4a99c8d2 Mon Sep 17 00:00:00 2001
From: Stanley Chu <stanley.chu@mediatek.com>
Date: Fri, 04 Sep 2020 09:42:30 +0800
Subject: [PATCH] [ALPS05320695] scsi: ufs-mtk: Fix broken auto-hibern8

Fix broken auto-hibern8 in MediaTek platforms.

Change-Id: I28f0d13afc2474f80cb52bcc99536c1743a1b8fb
Signed-off-by: Stanley Chu <stanley.chu@mediatek.com>
CR-Id: ALPS05320695
Feature: UFS Booting

From c6ac11d3fabd4a1b1eb1f75170eaaa54e21605c8 Mon Sep 17 00:00:00 2001
From: Stanley Chu <stanley.chu@mediatek.com>
Date: Sat, 05 Sep 2020 10:25:30 +0800
Subject: [PATCH] [ALPS05320695] scsi: ufs-mtk: Fix unipro low-power mode flag

Forcibly leave UniPro low-power mode if UIC commands is failed.
This makes hba_enable_delay_us as correct (default) value for
re-enabling the host.

Change-Id: I760c36656d1d379cc48a04e50134124b470679ea
Signed-off-by: Stanley Chu <stanley.chu@mediatek.com>
CR-Id: ALPS05320695
Feature: UFS Booting

From b05cb7cde7736cdae905259f7ef403a44a9caaef Mon Sep 17 00:00:00 2001
From: Stanley Chu <stanley.chu@mediatek.com>
Date: Tue, 08 Sep 2020 11:33:55 +0800
Subject: [PATCH] [ALPS05320695] scsi: ufs-mtk: Fix UFS_DEVICE_QUIRK_HOST_PA_TACTIVATE

Add back UFS_DEVICE_QUIRK_HOST_PA_TACTIVATE for Samsung device.

Change-Id: I7271068b02291744b0f6003b79e7f73650f0b735
Signed-off-by: Stanley Chu <stanley.chu@mediatek.com>
CR-Id: ALPS05320695
Feature: UFS Booting

From 4bae1cceb3c76c61584377981904841b97afbe56 Mon Sep 17 00:00:00 2001
From: Stanley Chu <stanley.chu@mediatek.com>
Date: Sun, 06 Sep 2020 19:27:04 +0800
Subject: [PATCH] [ALPS05320695] scsi: ufs-mtk: Add host reset mechanism

Add UFS host reset mechanism in MediaTek platforms.

Change-Id: If41dc9362a24a6d9b297d5e255c9b07114e500f5
Signed-off-by: Stanley Chu <stanley.chu@mediatek.com>
CR-Id: ALPS05320695
Feature: UFS Booting

commit b0eeee4d76eb3ee1042bd94e1bb485af5fa6c55b
Merge: 3e48f17 2ba8042
Author: zhangjianbin <zhangjianbin@oppo.com>
Date:   Thu Aug 20 10:10:32 2020 +0800

    Merge tag 't-alps-release-r0.mp1-pre2.1' into psw/feature_master/upgrade/mtk_r_mp1_pre2

    t-alps-release-r0.mp1-pre2.1

commit d82e3d04eb7ab4fb49aa0464c6d66b86b7332809
Author: Peter Wang <peter.wang@mediatek.com>
Date:   Fri Aug 14 22:42:34 2020 +0800

    [ALPS05265935] scsi: ufs: add delay when VCC off

    Some device need more delay after SSU and VCC off.

    MTK-Commit-Id: 5be7e10c63b49006b92c373f80a506a9c206b185

    Change-Id: I19d759cd2ed2d2ae0704571be49886cf9687feef
    Signed-off-by: Peter Wang <peter.wang@mediatek.com>
    CR-Id: ALPS05265935
    Feature: UFS Booting

commit e986aba9afbc4388282955f3267423818cc6bb48
Author: Stanley Chu <stanley.chu@mediatek.com>
Date:   Fri Aug 14 22:42:26 2020 +0800

    [ALPS05265935] scsi: ufs-mediatek: Eable H8 during clk-gating

    Disable Auto-Hibern8 and enable capability "Hibern8 during clk-gating"
    in MediaTek platforms.

    MTK-Commit-Id: 9569a0eb835bc577a18dd3d3f80b5bf577f70a57

    Change-Id: I8e96f247b71e11e381ed38eb6132fbe33172469a
    Signed-off-by: Stanley Chu <stanley.chu@mediatek.com>
    CR-Id: ALPS05265935
    Feature: UFS Booting

commit 2ad84ba2dd67827fb4d0058a472bd99b1643e0fd
Author: Peter Wang <peter.wang@mediatek.com>
Date:   Fri Aug 14 22:41:29 2020 +0800

    [ALPS05271748] scsi: ufs: Uninitialized scalar variable patch

    Add default value 0

    MTK-Commit-Id: a55ef5492affe38d850d076015ce0e4a46e9c4bd

    Change-Id: I72d7e1165cb74d76a4d6e0e242f7306878a7956c
    Signed-off-by: Peter Wang <peter.wang@mediatek.com>
    CR-Id: ALPS05271748
    Feature: UFS Booting

commit 491163a2c98f9e3f7bcd6ee1f1397f1b46c2c7de
Author: Qian Zhong <qian.zhong@mediatek.com>
Date:   Fri Aug 14 22:41:17 2020 +0800

    [ALPS05211478] scsi: ufs: Bootup time is too long for emmc project

    timeout is set to 15s instead of 15ms in ufs_mtk_wait_link_state().

    MTK-Commit-Id: dfdec3f0372da7d3f9e4d4a9119b25fb0b94368e

    Change-Id: I3fb9789f144c419114c442f14433ca8bacca296a
    CR-Id: ALPS05211478
    Feature: UFS Booting
    Signed-off-by: Qian Zhong <qian.zhong@mediatek.com>

commit f9fa9cc26ced7904ddc90d384d82ff8b0c93058c
Author: Peter Wang <peter.wang@mediatek.com>
Date:   Fri Aug 14 22:40:46 2020 +0800

    [ALPS05257281] scsi: ufs: fix rpmb error by retry

    Some vendor may have different UAs asc/ascq code.
    Just retry if got UA and ignore different asc/ascq code.

    MTK-Commit-Id: 67f91e90476ddaa2ad11ba076ac4730c8f34a492

    Change-Id: I6356f465018b8f89314267a58d6d53b4b3ca2f38
    Signed-off-by: Peter Wang <peter.wang@mediatek.com>
    CR-Id: ALPS05257281
    Feature: UFS Booting

commit 151cfb560d4811e73be012ac762bc0cc2d7ef112
Author: Stanley Chu <stanley.chu@mediatek.com>
Date:   Fri Aug 14 22:37:12 2020 +0800

    [ALPS05265935] scsi: ufs: Apply DELAY_AFTER_LPM quirk to Micron devices

    Micron UFS devices require DELAY_AFTER_LPM device quirk in
    MediaTek platforms.

    MTK-Commit-Id: 034aeeed8589c9aec56b96ead8d84215a6404df7

    Change-Id: I603a3bae457f090d5bffdbf2f07d3f7f97bbe035
    Signed-off-by: Stanley Chu <stanley.chu@mediatek.com>
    CR-Id: ALPS05265935
    Feature: UFS(Universal Flash Storage)

commit 99f2c1f3f6d1de5b92c4f6316aefbf25cec4a1a7
Author: Stanley Chu <stanley.chu@mediatek.com>
Date:   Fri Aug 14 22:37:11 2020 +0800

    [ALPS05265935] scsi: ufs: Introduce device quirk "DELAY_AFTER_LPM"

    Some UFS devices require delay after VCC power rail is turned-off.
    Introduce a device quirk "DELAY_AFTER_LPM" to add 5ms delays after
    VCC power-off during suspend flow.

    MTK-Commit-Id: efb35b699edb9f5d9ddb35567ba44f99587117d0

    Change-Id: Ia3f5969cafed11e9f0a10cdd2dc769740a6e6894
    Signed-off-by: Stanley Chu <stanley.chu@mediatek.com>
    CR-Id: ALPS05265935
    Feature: UFS Booting

commit 02ed97997935b1204db288844d55daf63386aa2b
Merge: 60e0b2b d9d2998
Author: wanghao-m <wanghao-m@oppo.com>
Date:   Mon Aug 10 11:26:45 2020 +0800

    Merge tag 't-alps-release-r0.mp1-pre1' into psw/feature_master/upgrade/mtk_r_mp1_pre1
    
    t-alps-release-r0.mp1-pre1

commit 41911e7efc28c1c63d62a31d2bba42e950c16755
Author: hexiaosen <hexiaosen@oppo.com>
Date:   Tue Aug 4 12:26:00 2020 +0800

    [BSP.Storage.UFS][1/1]{alm bug:关机振动完成后插入适配器到白色闪电需要23秒}
    
    适用范围：{R/MT6779/all/all}
    准入id：{203603}
    分析：{kernel-4.19 ufs_mtk_wait_link_state误将ns当成us造成ufshcd driver shutdown耗时15s}
    方案：{修正等待超时时间为15ms}
    风险及影响[快/稳/省/功能/安全隐私]：{无}
    测试建议：{关机时间减少大约14s}
    跨组依赖(topic name)：{无}
    
    Change-Id: I2bed323e26539c2e6619438d571410a5825e4a33

commit d9d299824e7d7ea60517ee473e7548025cae1652
Author: Stanley Chu <stanley.chu@mediatek.com>
Date:   Sat Aug 1 00:45:05 2020 +0800

    [ALPS05265935] scsi: ufs: Fix possible infinite loop in ufshcd_hold
    
    In ufshcd_suspend(), after clk-gating is suspended and link is set
    as Hibern8 state, ufshcd_hold() is still possibly invoked before
    ufshcd_suspend() returns. For example, MediaTeks suspend vops may
    issue UIC commands which would call ufshcd_hold() during the command
    issuing flow.
    
    Now if UFSHCD_CAP_HIBERN8_WITH_CLK_GATING capability is enabled,
    then ufshcd_hold() may enter infinite loops because there is no
    clk-ungating work scheduled or pending. In this case, ufshcd_hold()
    shall just bypass, and keep the link as Hibern8 state.
    
    MTK-Commit-Id: 750a21eeaaf2931e0ccef9cc52b3533974d3b3e3
    
    Change-Id: Ibabaa52f2ff16eac799d1f32737ff8045ed768d5
    Signed-off-by: Stanley Chu <stanley.chu@mediatek.com>
    CR-Id: ALPS05265935
    Feature: UFS Booting

commit eca81389eb9e00a303bad35f3c7f2ccc9cbd3476
Merge: 5997eb4 f6a1baa
Author: pswbuild <pswbuild@oppo.com>
Date:   Mon Jul 27 17:59:36 2020 +0800

    Merge remote-tracking branch 'origin/psw/feature_master/upgrade/mtk_r_pre13.new' into r/mtk/master

commit 8f09908c1d12e7f6d81555be18aebbe071d61e2a
Author: hexiaosen <hexiaosen@oppo.com>
Date:   Mon Jul 27 10:38:01 2020 +0800

    [BSP.Storage.UFS][1/1]{新固件升级架构统一高通平台和MTK平台struct ufs_ioctl_query_data格式}
    
    适用范围：{R/MT6779/all/all}
    准入id：{无}
    分析：{高通平台和MTK平台struct ufs_ioctl_query_data格式不一致，导致应用程序ioctl需要按平台区分处理}
    方案：{修改MTK平台struct ufs_ioctl_query_data格式，与高通平台保持一致}
    风险及影响[快/稳/省/功能/安全隐私]：{无}
    测试建议：{无}
    跨组依赖(topic name)：{无}
    
    Change-Id: I6c6737ee8affa480513b5876d8c6d5cff16811e9

commit 65c8e6bda90e3ca417ff234732ff37c378639b7e
Merge: 4d1920e0 d1bc4b6
Author: wanghao-m <wanghao-m@oppo.com>
Date:   Mon Jul 20 16:24:49 2020 +0800

    Merge tag 't-alps-release-r0.bsp-pre13.1' into psw/feature_master/upgrade/mtk_r_pre13
    
    t-alps-release-r0.bsp-pre13.1

commit 52c7f071638e7fc58673669a4261ca8949f5c906
Author: Peter Wang <peter.wang@mediatek.com>
Date:   Thu Jul 16 23:52:35 2020 +0800

    [ALPS05231399] scsi: ufshcd: fix coverity issue
    
    Declare struct scsi_sense_hdr sshdr = {0} to solve
    uninitialized scalar variable.
    
    MTK-Commit-Id: 5b8073244ca1d789aa6b9c2bfa5ad911965727c1
    
    Change-Id: I7c2f7820471db77c3f633892b3e8e2ae2930c4d4
    Signed-off-by: Peter Wang <peter.wang@mediatek.com>
    CR-Id: ALPS05231399
    Feature: UFS Booting

commit d7c6d7dcf652c3e5d2176179d684a35dcc5e674e
Author: Peter Wang <peter.wang@mediatek.com>
Date:   Thu Jul 16 23:51:40 2020 +0800

    [ALPS05228418] scsi: ufs: dump more log when command timeout
    
    Dump host status, err history and command history in kernel log
    when command timeout happen
    
    MTK-Commit-Id: ace429ead46fa4794fd9ca8459337e029550793d
    
    Change-Id: I654e76f61f3cd2a2d4fdf4ada45d07080c3726e2
    Signed-off-by: Peter Wang <peter.wang@mediatek.com>
    CR-Id: ALPS05228418
    Feature: UFS Booting

commit 18c342496a96c8382b6d8e3d556bf1909dada987
Author: Peter Wang <peter.wang@mediatek.com>
Date:   Thu Jul 16 23:51:28 2020 +0800

    [ALPS05228418] scsi: ufs: debug log for command timeout
    
    1. Add cmd abort log.
    2. Add device reset log.
    3. Stop cmd history when aee dump.
    
    MTK-Commit-Id: 2034fa17a3abb97d08452c2a3f02313bf409f201
    
    Change-Id: Ia9778e48fa33cc5bb17bd1c8a6cf519348797f46
    Signed-off-by: Peter Wang <peter.wang@mediatek.com>
    CR-Id: ALPS05228418
    Feature: UFS Booting

commit 4b9d0717b33d10876700b2dd1d443484021420fc
Author: Peter Wang <peter.wang@mediatek.com>
Date:   Thu Jul 16 23:50:40 2020 +0800

    [ALPS05074004] scsi: ufs: rpmb support
    
    rpmb feature support and enable for ufs.
    
    MTK-Commit-Id: 71cec7b842b09de546cdba542c334bfe71a6f3d8
    
    Change-Id: I2ece8447b045421e5038697daec5f2d8e6cf6a7a
    Signed-off-by: Peter Wang <peter.wang@mediatek.com>
    CR-Id: ALPS05074004
    Feature: UFS Booting

commit 9952fa3dd3a7c5686ba02ccb010d64afd50cf4f3
Author: Peter Wang <peter.wang@mediatek.com>
Date:   Thu Jul 16 23:48:25 2020 +0800

    [ALPS05208480] scsi: ufs: block request before shutdown
    
    quiesce device when ufs shutdwon to prevent reqesut come in
    shutdown flow.
    
    MTK-Commit-Id: 2ef692ab7b7afb0e8761c9cf2531c99af4db1d33
    
    Change-Id: I2b564f310826269a0ff6183d418c2906632e4265
    Signed-off-by: Peter Wang <peter.wang@mediatek.com>
    CR-Id: ALPS05208480
    Feature: UFS Booting

commit 3a504e5edcc9a0b911dbaf589e082aa39a4ddee1
Author: Peter Wang <peter.wang@mediatek.com>
Date:   Thu Jul 16 23:48:08 2020 +0800

    [ALPS05208480] scsi: ufs: use pm_runtime_get_sync in shutdown
    
    Use pm_runtime_get_sync when shutdwon to prevent race condition
    when another thread call pm_runtime_get_sync to get runtime pm
    
    MTK-Commit-Id: 4c1736e424427b817a6b86bb60a04b761cf5cc4b
    
    Change-Id: I1803d0b000cc0e658d04a2c024b91580098383c1
    Signed-off-by: Peter Wang <peter.wang@mediatek.com>
    CR-Id: ALPS05208480
    Feature: UFS Booting

commit 93fbe85816049684ae16519f6298c9269e01a206
Author: hexiaosen <hexiaosen@oppo.com>
Date:   Wed Jul 15 20:57:11 2020 +0800

    [BSP.Storage.UFS][1/1]{AOA: OTA压力测试出现部分UFS器件开机不能正常完成初始化导致驱动异常}
    
    适用范围：{R/MT6779/all/all}
    准入id：{2719900}
    分析：{OTA压力测试出现部分UFS器件开机不能正常完成初始化导致驱动异常}
    方案：{开机polling UFS器件初始化的时间能cover住最坏的情况（1.5s,经验值）}
    风险及影响[快/稳/省/功能/安全隐私]：{无}
    测试建议：{能开机，能正常读写}
    跨组依赖(topic name)：{无}
    
    Change-Id: Iaf4252a82d777b8bbc72ba2e2a86d242e80627d9

commit 76ae215399972e7697e3203800351e8848798f9b
Author: hexiaosen <hexiaosen@oppo.com>
Date:   Wed Jul 15 19:47:51 2020 +0800

    [BSP.Storage.UFS][1/1]{AOA: fix race condition during hrtimer active(ufshcd_release/ufshcd_gate_work)}
    
    适用范围：{R/MT6779/all/all}
    准入id：{2753483}
    分析：{fix race condition during hrtimer active(ufshcd_release/ufshcd_gate_work)}
    方案：{fix race condition during hrtimer active(ufshcd_release/ufshcd_gate_work)}
    风险及影响[快/稳/省/功能/安全隐私]：{无}
    测试建议：{手机开机读写功能正常Y}
    跨组依赖(topic name)：{无}
    
    Change-Id: I2eec7e43696db9ba6d90e80a0a864234cac021c9

commit 46e69f33965f5941cc9fe2109592ddc0067843f6
Author: hexiaosen <hexiaosen@oppo.com>
Date:   Wed Jul 15 12:11:07 2020 +0800

    [BSP.Storage.UFS][1/1]{在/proc/devinfo/下面增加ufs，ufs_version两个信息节点}
    
    适用范围：{R/MT6779/all/all}
    准入id：{184821}
    分析：{为user space程序提供ufs物料信息}
    方案：{为user space程序提供ufs物料信息}
    风险及影响[快/稳/省/功能/安全隐私]：{无}
    测试建议：{cat /proc/devinfo/ufs}
    跨组依赖(topic name)：{无}
    
    Change-Id: Ib2f1d0d3fa70158b5554413cc8f69dedd3a12084

commit eeb334759d11921e1e106ec1027eccb33f395515
Author: liudingtong <liudingtong@oppo.com>
Date:   Wed Jul 8 15:45:13 2020 +0800

    [BSP.Security.Basic][1/1]{P95R mtk rpmb kernel patch}
    
    适用范围：{[R]/[MTK]/[coloros7]/[ALL]}
    准入id：{bugid:}
    分析：{无}
    方案：{无}
    风险及影响[快/稳/省/功能/安全隐私]：{无}
    测试建议：{无}
    跨组依赖(topic name)：{无}
    
    Change-Id: I4614ff09f60282c6be47d977db7ac3d88e06c808

commit 9fcdf0e42f41e5beb8e42606cc39de707c533dcf
Author: Peter Wang <peter.wang@mediatek.com>
Date:   Fri Jul 3 14:27:57 2020 +0800

    [ALPS05208480] scsi: ufs: triger KE in isr when clock off
    
    if clock is off in isr, bus will hang, triger KE to dump
    more information. and add more debug log.
    
    MTK-Commit-Id: 649e46f8841a223386d69bab6b902fae6fe7966f
    
    Change-Id: Iba76662cf817c32989cef508b6479c2a8e3af4c1
    Signed-off-by: Peter Wang <peter.wang@mediatek.com>
    CR-Id: ALPS05208480
    Feature: UFS Booting

commit 7fb5028811b9892dd861676ed7e8d02a44152386
Author: Light Hsieh <light.hsieh@mediatek.com>
Date:   Fri Jul 3 14:26:15 2020 +0800

    [ALPS05092516] fs: crypto: specially generate iv with policy v1
    
    1. For MTK F2FS HWFBE projects upgraded from Android Q or before, iv is
    generated differently. These projects use mixure of file logical block
    number (based on block device sector size) and inode number as iv.
    
    2. For MTK EXT4 HWFBE projects upgraded from Android Q or before, iv is
    generated differently. These projects use logical block address as iv.
    We let fs/crypto set dun as 128bit 1s as indication for MMC and
    UFS layer to set iv as logical block address.
    
    3. Dont derive key when inode is for a directory or symbolic link
    
    MTK-Commit-Id: 78d2b1b73121fc77b9ff1509aabc4bab361c0b56
    
    Change-Id: I041fd1887556ddaa62c27932bb3a7b179fc5f5ca
    Signed-off-by: Light Hsieh <light.hsieh@mediatek.com>
    CR-Id: ALPS05092516
    Feature: [Android Default] F2FS File System

commit 01f5e9147d90fbfa5e43f801ca6b6e33612b07ef
Author: Peter Wang <peter.wang@mediatek.com>
Date:   Fri Jul 3 14:26:05 2020 +0800

    [ALPS05074004] scsi: ufs: ioctl support
    
    ioctl query support in ufs driver
    
    MTK-Commit-Id: 49e181fdb223cec552022c998d23aae27974aa5c
    
    Change-Id: Ic18886ef5bdb9b613a38d5cf37d1d9e55b0e9e4c
    Signed-off-by: Peter Wang <peter.wang@mediatek.com>
    CR-Id: ALPS05074004
    Feature: UFS Booting

commit a3640715c3f6d65711f992682fe7a8ac60e96e4e
Author: Stanley Chu <stanley.chu@mediatek.com>
Date:   Fri Jul 3 14:25:39 2020 +0800

    [ALPS05165276] scsi: ufs-mtk: Create kernel API dump for command timeout
    
    Introduce abort_handler vops to allow ufs-mtk to create kernel API
    dump DB for command timeout events.
    
    MTK-Commit-Id: 5d0136e2438e5228cb92f61c13f9b2d91ab227a4
    
    Change-Id: I7386d7c03f78709eb60cbe193d9638bf7278e5b5
    Signed-off-by: Stanley Chu <stanley.chu@mediatek.com>
    CR-Id: ALPS05165276
    Feature: UFS Booting

commit 3ffd21ac70226c70701d0ebbe266241240f506e8
Author: Stanley Chu <stanley.chu@mediatek.com>
Date:   Fri Jul 3 14:22:43 2020 +0800

    [ALPS04362512] ufs-mtk: Provide clk-gating event history
    
    Provide host clk-gating event history in command dump.
    
    MTK-Commit-Id: 706bb61de3b88a489159b44e49f298395b59e0f8
    
    Change-Id: Iac83b8705b07e3c25e972a7ab99d0e146fbc9049
    CR-Id: ALPS04362512
    Feature: UFS Booting
    Signed-off-by: Stanley Chu <stanley.chu@mediatek.com>

commit 3adaeda3511b91a3b0739b7415c0ecb85b35c69d
Author: Stanley Chu <stanley.chu@mediatek.com>
Date:   Fri Jun 19 14:42:30 2020 +0800

    [ALPS04362512] ufs-mtk: Force leaving Auto-Hibern8 before pwr operations
    
    Force leaving Auto-Hibern8 before UIC pwr operations, like
    Hibern8 enter/exit and power mode change.
    
    This is limitation on current MediaTek UFS host.
    
    MTK-Commit-Id: 11468727295a94ffc0f9af6fb8164a2cae7252bd
    
    Change-Id: I56b5e32654fa5dfb755ec8dc41e99e27aa04d078
    CR-Id: ALPS04362512
    Feature: UFS Booting
    Signed-off-by: Stanley Chu <stanley.chu@mediatek.com>

commit 7d6aa51379f1d997464b200fb400f4da716dda05
Author: Stanley Chu <stanley.chu@mediatek.com>
Date:   Fri Jun 19 14:42:24 2020 +0800

    [ALPS04362512] ufs-mtk: Provide host information in command history
    
    Provide host information in command history dump and AEE db files.
    
    MTK-Commit-Id: d9cbb2d02cf6d50c5460c6f26451b47534d91149
    
    Change-Id: Icba2dfcf3a68f8b9f3e1d4e2eb52b361a7e38084
    CR-Id: ALPS04362512
    Feature: UFS Booting
    Signed-off-by: Stanley Chu <stanley.chu@mediatek.com>

commit f19a06b7c897b6f2a079e59f5927f1924622682a
Author: Stanley Chu <stanley.chu@mediatek.com>
Date:   Fri Jun 19 14:42:14 2020 +0800

    [ALPS04362512] ufs-mtk: Update UIC command history
    
    Update UIC command history according the latest upstreamed
    patches.
    
    MTK-Commit-Id: ed9715aceb08ff01cbf296847f3c4ebe1eb9d0c6
    
    Change-Id: Ic71d1f5791ee10a39a611f0fd773c9c9e7421051
    CR-Id: ALPS04362512
    Feature: UFS Booting
    Signed-off-by: Stanley Chu <stanley.chu@mediatek.com>

commit a60ba88eecea7a7d2ab9c198497c750eb9a45fc6
Author: Stanley Chu <stanley.chu@mediatek.com>
Date:   Fri Jun 19 14:42:11 2020 +0800

    [ALPS04362512] ufs-mtk: Provide history for UIC commands
    
    Provide tracepoint hook function for UIC commands, refine
    log format and apply lots of cleanups.
    
    MTK-Commit-Id: 000f42702afcc76e1d09a3d74f2605b3978ea207
    
    Change-Id: I21ad4bd4f09681b0865cbb977a0f7b0194e1d774
    Signed-off-by: Stanley Chu <stanley.chu@mediatek.com>
    CR-Id: ALPS04362512
    Feature: UFS Booting

commit 47a47aae4305ed09bf201596e72ed4232fdee5df
Author: Stanley Chu <stanley.chu@mediatek.com>
Date:   Fri Jun 19 14:42:11 2020 +0800

    [ALPS04362512] scsi: ufs: Add trace event for UIC commands
    
    Use the ftrace infrastructure to conditionally trace UFS UIC command
    events.
    
    New trace event "uic_command" is created, which samples the following
    UFS UIC command data:
    - Device name
    - Optional identification string
    - UIC command opcode
    - UIC command argument1
    - UIC command argument2
    - UIC command argement3
    - UIC command execution result
    
    Usage:
    	echo 1 > /sys/kernel/debug/tracing/events/ufs/enable
    	cat /sys/kernel/debug/tracing/trace_pipe
    
    MTK-Commit-Id: 2f2d4c949e5b117190e431aa23e0afce9d74398d
    
    Change-Id: I873ad4258dd2243b0b151909a71c1d8e494c6229
    Signed-off-by: Stanley Chu <stanley.chu@mediatek.com>
    CR-Id: ALPS04362512
    Feature: UFS Booting

commit 973153a31564ce0869f41e2468f9b587351f865c
Author: Peter Wang <peter.wang@mediatek.com>
Date:   Fri Jun 19 14:42:03 2020 +0800

    [ALPS05179513] scsi: ufs: mediatek: dump tp cmd history
    
    1. dump ufs tp cmd history for debug.
    2. fine tune cmd history.
    
    MTK-Commit-Id: 26eb1900fc158d471672e762b771360b1ff170b5
    
    Change-Id: I865b9d3f18fa634c47b5d874c209b330c28702ac
    Signed-off-by: Peter Wang <peter.wang@mediatek.com>
    CR-Id: ALPS05179513
    Feature: UFS Booting

commit 2c344e242185d1fb8293cce6723ace10c576557e
Merge: 7502f4c d55c69b
Author: skylake.huang <skylake.huang@mediatek.com>
Date:   Fri Jun 5 16:19:44 2020 +0800

    [ALPS05163896] [Do NOT Sync]Merge branch android-4.19 into alps-trunk-r0.basic
    
    [Detail]
    	Parent: 939882a887a0dacc9e6387c254726a9240392c5c
    		Merge 4.19.124 into android-4.19
    	Start: f6884bbd775aabf2c109a14124c1c9f760c07878
    		BACKPORT: FROMLIST: fscrypt: add support for IV_INO_LBLK_32 policies
    	Target: d55c69bbe4a8cdb928f553d27c2fb29e009fb030
    		Merge 4.19.125 into android-4.19
    
    MTK-Commit-Id: ebc43742a3ce3933a0b8f1f316b4ffac56dc757d
    
    Feature: Others
    Change-Id: I13f8c0c8a6b76b646454143d6035ec6d01772f8f
    CR-Id: ALPS05163896
    Signed-off-by: Breeze.Li <breeze.li@mediatek.com>

commit eeb108855f784dc697039c11a20369a56cbd8b66
Author: Stanley Chu <stanley.chu@mediatek.com>
Date:   Fri Jun 5 16:08:32 2020 +0800

    [ALPS04362512] scsi: ufs-mtk: Refine phy power and clk unbalance solution
    
    Refine phy power and ref-clk unbalance solutio as below,
    
    - Promise usage of phy_power_on/off balanced in ufs-medaitek.c instead
      of in phy-mtk-ufs.c
    
    - Remove phy_power_on/off control in suspend/resume vops since
      they can be handled in setup_clock vops only
    
    MTK-Commit-Id: 092ed06d21aa982da371f6ce7961c9ad72cd3667
    
    Change-Id: Idb8dbc9fee3d1c12d82d99bfc5c716a7e1075130
    Signed-off-by: Stanley Chu <stanley.chu@mediatek.com>
    CR-Id: ALPS04362512
    Feature: UFS Booting

commit f76a373d64d724da1340dc4f52d6f1f54d252c17
Author: Stanley Chu <stanley.chu@mediatek.com>
Date:   Fri Jun 5 16:08:18 2020 +0800

    [ALPS04362512] scsi: ufs-mtk: Allow unbound mphy
    
    Not every MediaTek UFS platform needs MPHY specific
    operations thus allow unbound MPHY in this case.
    
    MTK-Commit-Id: 718b01b784060ba665f9a40d2e329dd302e586c0
    
    Change-Id: I1303e3594e17d2377ab7abba1713e8b7bee9fbb8
    Signed-off-by: Stanley Chu <stanley.chu@mediatek.com>
    CR-Id: ALPS04362512
    Feature: UFS Booting

commit fe099b8e66f4065d15f937a6cd8071210b22bd3a
Author: Stanley Chu <stanley.chu@mediatek.com>
Date:   Fri Jun 5 16:08:16 2020 +0800

    [ALPS04362512] scsi: ufs-mtk: Fix unbalanced clock control
    
    Fix unbalanced clock control during clk-gating flow.
    
    MTK-Commit-Id: 5ef9658740e2f013223cf6889353f6097066969b
    
    Change-Id: Ib4e5c9f3ebc87328cbce612ca9dc5b62205388ba
    Signed-off-by: Stanley Chu <stanley.chu@mediatek.com>
    CR-Id: ALPS04362512
    Feature: UFS Booting

commit a319ced45d041ce93fed20a5b3a09eec93365656
Merge: abd3878 939882a
Author: skylake.huang <skylake.huang@mediatek.com>
Date:   Fri Jun 5 16:08:07 2020 +0800

    [ALPS05137997] [Do NOT Sync]Merge branch android-4.19 into alps-trunk-r0.basic
    
    [Detail]
    	Parent: 95bff4cdab87d5dae6940859caf1055cff4e3df8
    		Merge 4.19.116 into android-4.19
    	Start: 1fb5886e2c1ea0d7d33ed122ec2c95870614bac5
    		ANDROID: GKI: ABI update due to recent patches
    	Target: 939882a887a0dacc9e6387c254726a9240392c5c
    		Merge 4.19.124 into android-4.19
    
    MTK-Commit-Id: 1eb635d1528eea1412202bbfc6180ca54a63a6c9
    
    Feature: Others
    Change-Id: I7cb2a66b5a9d66d8c5988e544aefae9248cbefc3
    CR-Id: ALPS05137997
    Signed-off-by: Breeze.Li <breeze.li@mediatek.com>

commit 0037cd72e6e96b4f819e93c993152e22d1fd6dcb
Author: Stanley Chu <stanley.chu@mediatek.com>
Date:   Fri Jun 5 15:55:05 2020 +0800

    [ALPS04362512] scsi: ufs-mtk: Introduce low-power mode for device power
    
    Allow device power supply to enter low-power mode if device will
    do nothing to save more power.
    
    MTK-Commit-Id: 863a73e0d4d334fd3828975e8ecb0f9ce21e2891
    
    Change-Id: Iaf26d5901264a4ef9775a7dd00a97ecfbc68b640
    Signed-off-by: Stanley Chu <stanley.chu@mediatek.com>
    CR-Id: ALPS04362512
    Feature: UFS Booting

commit 043f66e0b45b95728a7b538a19702e791154d2d8
Author: Stanley Chu <stanley.chu@mediatek.com>
Date:   Fri Jun 5 15:55:05 2020 +0800

    [ALPS04362512] scsi: ufs-mtk: Do not gate clocks if link is active
    
    There are some chances that link enters hibern8 lately by auto-hibern8
    scheme during the clock-gating flow. Clocks shall not be gated if link
    is still active otherwise host or device may hang.
    
    Fix this by returning error code to the caller __ufshcd_setup_clocks()
    to skip gating clocks there if link is not confirmed in hibern8
    state yet.
    
    Also allow some waiting time for the hibern8 state transition.
    
    MTK-Commit-Id: 84d66ccec723a223460c8afdf69864064bbcc420
    
    Change-Id: I62fee805072c8a5272bbfcc7f3dfffe855934ba5
    Signed-off-by: Stanley Chu <stanley.chu@mediatek.com>
    CR-Id: ALPS04362512
    Feature: UFS Booting

commit a2fe2f79b20e200e29f1f7034573186643f74f69
Author: Stanley Chu <stanley.chu@mediatek.com>
Date:   Fri Jun 5 15:55:04 2020 +0800

    [ALPS04362512] scsi: ufs-mtk: Fix imprecise waiting time for ref-clk
    
    Currently ref-clk control timeout is implemented by Jiffies. However
    jiffies is not accurate enough thus "false timeout" may happen.
    
    Use more accurate delay mechanism instead, for example, ktime.
    
    MTK-Commit-Id: b607499a894f17e3b2b4e162eef641dbe50658fa
    
    Change-Id: I6d6a0eadf701cf957dd784f550dacfbbcd3320ff
    Signed-off-by: Stanley Chu <stanley.chu@mediatek.com>
    CR-Id: ALPS04362512
    Feature: UFS Booting

commit c873cabe7c912f587a6a3a704c5461f9c9dd845b
Merge: aad0fa1 95bff4c
Author: skylake.huang <skylake.huang@mediatek.com>
Date:   Fri Jun 5 15:54:47 2020 +0800

    [ALPS05148405] [Do NOT Sync]Merge branch android-4.19 into alps-trunk-r0.basic
    
    [Detail]
    	Parent: 83b584a64c65cb8ee6c7f48e3cea4998707e66f3
    		Merge 4.19.102 into android-4.19
    	Start: cbbf80db674d6e81af946309bce19f154f1a6784
    		ANDROID: update abi for 4.19.102
    	Target: 95bff4cdab87d5dae6940859caf1055cff4e3df8
    		Merge 4.19.116 into android-4.19
    
    MTK-Commit-Id: 8c0ef4881315262906a20a48bf60d44641a0ed0f
    
    Feature: Others
    Change-Id: Ibdc6ae0eb836985fc2aaaa473a38660c9af33c90
    CR-Id: ALPS05148405
    Signed-off-by: Breeze.Li <breeze.li@mediatek.com>

commit 1ceb4e7443db4f8a8b28464df08df7674a24bc34
Author: Gaurav Kashyap <gaurkash@codeaurora.org>
Date:   Fri May 22 13:45:18 2020 -0700

    ANDROID: scsi: ufs: Handle clocks when lrbp fails
    
    Release UFS clocks when ufshcd_prepare_lrbp_crypto fails
    for any reason.
    
    Bug: 157284579
    Change-Id: I32128709fb3b653ad5a2aa8d9b680c34a81f667f
    Signed-off-by: Gaurav Kashyap <gaurkash@codeaurora.org>
    Signed-off-by: Eric Biggers <ebiggers@google.com>

commit 5da8f890a91beddfa809a3c39333d59586c30424
Author: Eric Biggers <ebiggers@google.com>
Date:   Wed May 6 14:15:06 2020 -0700

    ANDROID: block: backport the ability to specify max_dun_bytes
    
    Backport a fix from the v7 inline crypto patchset which ensures that the
    block layer knows the number of DUN bytes the inline encryption hardware
    supports, so that hardware isn't used when it shouldn't be.
    
    (This unfortunately means introducing some increasing long argument
    lists; this was all already fixed up in later versions of the patchset.)
    
    To avoid breaking the KMI for drivers, don't add a dun_bytes argument to
    keyslot_manager_create() but rather allow drivers to call
    keyslot_manager_set_max_dun_bytes() to override the default.  Also,
    don't add dun_bytes as a new field in 'struct blk_crypto_key' but rather
    pack it into the existing 'hash' field which is for block layer use.
    
    Bug: 144046242
    Bug: 153512828
    Change-Id: I285f36557fb3eafc5f2f64727ef1740938b59dd7
    Signed-off-by: Eric Biggers <ebiggers@google.com>

commit 4429e0ce2de198d674f5b032ebe78e522d5993b3
Author: Stanley Chu <stanley.chu@mediatek.com>
Date:   Sat May 9 10:13:34 2020 +0800

    [ALPS04362512] scsi: ufs: align to ACK 5.4 driver
    
    Align UFS driver to ACK 5.4 to
    
    1. Include more fixes in new driver
    2. Prepare for GKI in 5.4
    
    MTK-Commit-Id: 7415bc0dce393db3e355ba79dea774e3076fbfcc
    
    CR-Id: ALPS04362512
    Change-Id: I8610b4b22acdccccf1e56679c6c244ac63f59153
    Signed-off-by: Stanley Chu <stanley.chu@mediatek.com>
    Feature: UFS Booting

commit 728578922329c3018d26c99ed836eb45129573df
Author: Greg Kroah-Hartman <gregkh@google.com>
Date:   Wed Apr 22 15:35:41 2020 +0200

    ANDROID: GKI: ufs: add Android ABI padding to some structures
    
    Try to mitigate potential future driver core api changes by adding
    padding to struct ufs_hba_variant_ops, struct
    ufs_hba_crypto_variant_ops, and struct ufs_hba.
    
    Bug: 151154716
    Signed-off-by: Greg Kroah-Hartman <gregkh@google.com>
    Change-Id: Ib881e531d87eae1f7a5ca312bd36086d62ccaf94

commit a1b31aed0452d60b8bd857cb723923104c61d057
Author: Greg Kroah-Hartman <gregkh@google.com>
Date:   Thu Apr 30 11:52:12 2020 +0200

    ANDROID: ufshcd-crypto: fix export symbol type
    
    In commit 4f6a1f4aff2b ("ANDROID: ufshcd-crypto: export cap find API") a
    new symbol was exported, but it should have been set as a _GPL symbol.
    
    Fix this up by properly changing the export type.
    
    Bug: 147209885
    Cc: Barani Muthukumaran <bmuthuku@codeaurora.org>
    Cc: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@google.com>
    Change-Id: Ic0612118ce2ad837fd6ec95ea002a004c5ba4470

commit fd8a9d61cf8140da920b37e63d90627ec69a0c4d
Merge: eaa42a5 8e2406c
Author: Greg Kroah-Hartman <gregkh@google.com>
Date:   Tue Apr 21 10:20:12 2020 +0200

    Merge 4.19.117 into android-4.19
    
    Changes in 4.19.117
    	amd-xgbe: Use __napi_schedule() in BH context
    	hsr: check protocol version in hsr_newlink()
    	net: ipv4: devinet: Fix crash when add/del multicast IP with autojoin
    	net: ipv6: do not consider routes via gateways for anycast address check
    	net: qrtr: send msgs from local of same id as broadcast
    	net: revert default NAPI poll timeout to 2 jiffies
    	net: stmmac: dwmac-sunxi: Provide TX and RX fifo sizes
    	net: dsa: mt7530: fix tagged frames pass-through in VLAN-unaware mode
    	ovl: fix value of i_ino for lower hardlink corner case
    	scsi: ufs: Fix ufshcd_hold() caused scheduling while atomic
    	jbd2: improve comments about freeing data buffers whose page mapping is NULL
    	pwm: pca9685: Fix PWM/GPIO inter-operation
    	ext4: fix incorrect group count in ext4_fill_super error message
    	ext4: fix incorrect inodes per group in error message
    	ASoC: Intel: mrfld: fix incorrect check on p->sink
    	ASoC: Intel: mrfld: return error codes when an error occurs
    	ALSA: usb-audio: Filter error from connector kctl ops, too
    	ALSA: usb-audio: Don't override ignore_ctl_error value from the map
    	ALSA: usb-audio: Don't create jack controls for PCM terminals
    	ALSA: usb-audio: Check mapping at creating connector controls, too
    	keys: Fix proc_keys_next to increase position index
    	tracing: Fix the race between registering 'snapshot' event trigger and triggering 'snapshot' operation
    	btrfs: check commit root generation in should_ignore_root
    	mac80211_hwsim: Use kstrndup() in place of kasprintf()
    	usb: dwc3: gadget: don't enable interrupt when disabling endpoint
    	usb: dwc3: gadget: Don't clear flags before transfer ended
    	drm/amd/powerplay: force the trim of the mclk dpm_levels if OD is enabled
    	ext4: do not zeroout extents beyond i_disksize
    	kvm: x86: Host feature SSBD doesn't imply guest feature SPEC_CTRL_SSBD
    	scsi: target: remove boilerplate code
    	scsi: target: fix hang when multiple threads try to destroy the same iscsi session
    	x86/microcode/AMD: Increase microcode PATCH_MAX_SIZE
    	x86/resctrl: Preserve CDP enable over CPU hotplug
    	x86/resctrl: Fix invalid attempt at removing the default resource group
    	wil6210: check rx_buff_mgmt before accessing it
    	wil6210: ignore HALP ICR if already handled
    	wil6210: add general initialization/size checks
    	wil6210: make sure Rx ring sizes are correlated
    	wil6210: remove reset file from debugfs
    	mm/vmalloc.c: move 'area->pages' after if statement
    	Linux 4.19.117
    
    Signed-off-by: Greg Kroah-Hartman <gregkh@google.com>
    Change-Id: Ib4ab9aa34c22c034887be15902a625ecc5622b35

commit 1d1a9c08b0101a388197e788e5e5ee4e01f34a25
Author: Can Guo <cang@codeaurora.org>
Date:   Mon Feb 10 19:40:48 2020 -0800

    scsi: ufs: Fix ufshcd_hold() caused scheduling while atomic
    
    commit c63d6099a7959ecc919b2549dc6b71f53521f819 upstream.
    
    The async version of ufshcd_hold(async == true), which is only called in
    queuecommand path as for now, is expected to work in atomic context, thus
    it should not sleep or schedule out. When it runs into the condition that
    clocks are ON but link is still in hibern8 state, it should bail out
    without flushing the clock ungate work.
    
    Fixes: f2a785ac2312 ("scsi: ufshcd: Fix race between clk scaling and ungate work")
    Link: https://lore.kernel.org/r/1581392451-28743-6-git-send-email-cang@codeaurora.org
    Reviewed-by: Hongwu Su <hongwus@codeaurora.org>
    Reviewed-by: Asutosh Das <asutoshd@codeaurora.org>
    Reviewed-by: Bean Huo <beanhuo@micron.com>
    Reviewed-by: Stanley Chu <stanley.chu@mediatek.com>
    Signed-off-by: Can Guo <cang@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4445ded17f1e8fac83d05e20f695b74ebe215fbb
Author: Stanley Chu <stanley.chu@mediatek.com>
Date:   Thu Apr 9 10:02:57 2020 +0800

    [ALPS04362512] scsi: ufs-mediatek: fix udelay usage in device_reset
    
    Fix udelay usage in device_reset callback.
    
    MTK-Commit-Id: 868159dc51d56e74c8fc75ae0210e70de9420df3
    
    Change-Id: If8c419f9f5a057c194ce12f2c24da4152dd300e2
    Signed-off-by: Stanley Chu <stanley.chu@mediatek.com>
    CR-Id: ALPS04362512
    Feature: UFS Booting

commit 8f078b1b3aae280f240a75d27457e5e76dd0a92a
Author: Eric Biggers <ebiggers@google.com>
Date:   Fri Apr 3 12:06:11 2020 -0700

    ANDROID: block: require drivers to declare supported crypto key type(s)
    
    We need a way to tell which type of keys the inline crypto hardware
    supports (standard, wrapped, or both), so that fallbacks can be used
    when needed (either blk-crypto-fallback, or fscrypt fs-layer crypto).
    
    We can't simply assume that
    
        keyslot_mgmt_ll_ops::derive_raw_secret == NULL
    
    means only standard keys are supported and that
    
        keyslot_mgmt_ll_ops::derive_raw_secret != NULL
    
    means that only wrapped keys are supported, because device-mapper
    devices always implement this method.  Also, hardware might support both
    types of keys.
    
    Therefore, add a field keyslot_manager::features which contains a
    bitmask of flags which indicate the supported types of keys.  Drivers
    will need to fill this in.  This patch makes the UFS standard crypto
    code set BLK_CRYPTO_FEATURE_STANDARD_KEYS, but UFS variant drivers may
    need to set BLK_CRYPTO_FEATURE_WRAPPED_KEYS instead.
    
    Then, make keyslot_manager_crypto_mode_supported() take the key type
    into account.
    
    Bug: 137270441
    Bug: 151100202
    Test: 'atest vts_kernel_encryption_test' on Pixel 4 with the
          inline crypto patches backported, and also on Cuttlefish.
    Change-Id: Ied846c2767c1fd2f438792dcfd3649157e68b005
    Signed-off-by: Eric Biggers <ebiggers@google.com>

commit f16d635751d130740c5f3952805d325e7c820705
Merge: 7958fc0 83b584a
Author: skylake.huang <skylake.huang@mediatek.com>
Date:   Thu Mar 26 16:14:08 2020 +0800

    [ALPS05031893] [Do NOT Sync]Merge branch android-4.19 into alps-trunk-r0.basic
    
    [Detail]
    	Parent: 8cb4870403d7ef9b8de06c33b2353f21801e55b3
    		Merge 4.19.98 into android-4.19
    	Start: ec7e6a4eefe2860545c8cd6a81574ddfe07ea3c7
    		ANDROID: update abi for 4.19.98
    	Target: 83b584a64c65cb8ee6c7f48e3cea4998707e66f3
    		Merge 4.19.102 into android-4.19
    
    MTK-Commit-Id: 2edd062b49fb92eeff8b36ac8b5909b3d2994148
    
    Feature: Others
    Change-Id: Id4be8c59772ef26f5a3b5d425b5bb4e2ed9a3c32
    CR-Id: ALPS05031893
    Signed-off-by: Breeze.Li <breeze.li@mediatek.com>

commit b4c1402d015cf38f2cb5ef18b009adf64090b65c
Author: Stanley Chu <stanley.chu@mediatek.com>
Date:   Thu Mar 26 15:59:56 2020 +0800

    [ALPS04362512] scsi: ufs: upgrade to ACK 5.4 driver
    
    Upgrade UFS driver to align ACK 5.4 to
    
    1. Include more fixes in new driver
    2. Prepare for GKI in 5.4
    
    Note that the in-house 4.19 codebase is still in 4.19.98,
    and some changes in 5.4 was backported to newer 4.19 kernel.
    For those changes which will be merged to in-house 4.19 codebase
    later are not included in this commit.
    
    MTK-Commit-Id: a32937700d9e83d27a4ce131232b82c46c594145
    
    Change-Id: I6bf9c75f17089229dab5c8caf7394f97365a34a5
    Signed-off-by: Stanley Chu <stanley.chu@mediatek.com>
    CR-Id: ALPS04362512
    Feature: UFS Booting

commit e82128eb81ccdfd2f0bdda02e1f24a30ce9e01c9
Author: Eric Biggers <ebiggers@google.com>
Date:   Thu Mar 19 14:45:18 2020 -0700

    ANDROID: scsi: ufs: add ->map_sg_crypto() variant op
    
    Add a variant op ->map_sg_crypto() which runs at the end of
    ufshcd_map_sg().
    
    This is needed to support inline crypto on nonstandard hardware that
    enables and configures crypto in the PRD entries
    (struct ufshcd_sg_entry) instead of in the UTRD
    (struct utp_transfer_req_desc) which the UFS standard specifies.
    
    Bug: 129991660
    Change-Id: I92bb52d0022d2e9de79a40d9888e84db4a8116b3
    Signed-off-by: Eric Biggers <ebiggers@google.com>

commit 7b9a8d99a2ee23cfd57da10d75d8870b5344c81c
Merge: 7d90da0 8cb4870
Author: skylake.huang <skylake.huang@mediatek.com>
Date:   Wed Mar 11 18:11:01 2020 +0800

    [ALPS04993874] [Do NOT Sync]Merge branch android-4.19 into alps-trunk-r0.basic
    
    [Detail]
    	Parent: b777b6f21148e2c8c3ad908be6c80cdddade1feb
    		Merge 4.19.84 into android-4.19
    	Start: fc5e40ccb8bfb3ad0aea6ef55caaaa14762ff3c0
    		ANDROID: Fix allmodconfig build with CC=clang
    	Target: 8cb4870403d7ef9b8de06c33b2353f21801e55b3
    		Merge 4.19.98 into android-4.19
    
    MTK-Commit-Id: 75dca67052f72d6c1bebb09bf06b97ac98dbfd47
    
    Feature: Others
    Change-Id: I7b0950e537a0153c87e8defc27ef7eacfef50ce5
    CR-Id: ALPS04993874
    Signed-off-by: Breeze.Li <breeze.li@mediatek.com>

commit d10664794f970cdef5583d959d1ab5c3b1ee1713
Merge: ce87007 b777b6f
Author: skylake.huang <skylake.huang@mediatek.com>
Date:   Wed Mar 11 17:58:36 2020 +0800

    [ALPS04892348] [Do NOT Sync]Merge branch android-4.19 into alps-trunk-r0.basic
    
    [Detail]
    	Parent: ef55d5261c0d5fbfc52b1abb1165a3468c2e9536
    		Merge 4.19.79 into android-4.19
    	Start: fe466c3b37ee832a4d003f29bddf18a83b01b00d
    		UPSTREAM: PM / core: Add support to skip power management in device/driver model
    	Target: b777b6f21148e2c8c3ad908be6c80cdddade1feb
    		Merge 4.19.84 into android-4.19
    
    MTK-Commit-Id: 7cbda310e197d38257ce82af5774b1ae7d19e1c1
    
    Feature: Others
    Change-Id: If39e7295077bbf8a1d39191b6030544f75f0efba
    CR-Id: ALPS04892348
    Signed-off-by: Breeze.Li <breeze.li@mediatek.com>

commit c1825407b5dadd47fa283d7683501846f0688acb
Author: Eric Biggers <ebiggers@google.com>
Date:   Mon Feb 24 14:37:12 2020 -0800

    ANDROID: scsi: ufs: allow ufs variants to override sg entry size
    
    Modify the UFSHCD core to allow 'struct ufshcd_sg_entry' to be
    variable-length.  The default is the standard length, but variants can
    override ufs_hba::sg_entry_size with a larger value if there are
    vendor-specific fields following the standard ones.
    
    This is needed to support inline encryption with ufs-exynos (FMP).
    
    Bug: 129991660
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    
    (cherry picked from android-mainline
     commit 8de80df7d7e407369d1f8c2971daf29348d1a643)
    (resolved trivial merge conflict in ufshcd_alloc_host())
    Change-Id: I6ab9458d5c23331013e6b736d6fea378a6b5b86c
    Signed-off-by: Eric Biggers <ebiggers@google.com>

commit 2110145a33c763e7578d65b26f5bec475cb2f2bb
Author: Kiwoong Kim <kwmad.kim@samsung.com>
Date:   Wed Feb 19 10:16:33 2020 +0900

    FROMLIST: ufs: fix a bug on printing PRDT
    
    In some architectures, an unit of PRDTO and PRDTL
    in UFSHCI spec assume bytes, not double word specified
    in the spec. W/o this patch, when the driver executes
    this, kernel panic occurres because of abnormal accesses.
    
    Bug: 149797634
    Link: https://lore.kernel.org/linux-scsi/20200218224307.8017-1-kwmad.kim@samsung.com/
    Signed-off-by: Kiwoong Kim <kwmad.kim@samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@google.com>
    
    (cherry picked from android-mainline
     commit 8ec7bddd873f393ea94a3bc9dde9781e5e0fbfe1)
    Change-Id: I58ffa07535df8011b8d357135b80030833e725f9
    Signed-off-by: Eric Biggers <ebiggers@google.com>

commit 4dc4199770a362868459b54ca887e5ac6022b309
Merge: 1596509 f25804f
Author: Greg Kroah-Hartman <gregkh@google.com>
Date:   Mon Feb 24 09:13:25 2020 +0100

    Merge 4.19.106 into android-4.19
    
    Changes in 4.19.106
    	core: Don't skip generic XDP program execution for cloned SKBs
    	enic: prevent waking up stopped tx queues over watchdog reset
    	net/smc: fix leak of kernel memory to user space
    	net: dsa: tag_qca: Make sure there is headroom for tag
    	net/sched: matchall: add missing validation of TCA_MATCHALL_FLAGS
    	net/sched: flower: add missing validation of TCA_FLOWER_FLAGS
    	Revert "KVM: nVMX: Use correct root level for nested EPT shadow page tables"
    	Revert "KVM: VMX: Add non-canonical check on writes to RTIT address MSRs"
    	KVM: nVMX: Use correct root level for nested EPT shadow page tables
    	drm/gma500: Fixup fbdev stolen size usage evaluation
    	cpu/hotplug, stop_machine: Fix stop_machine vs hotplug order
    	brcmfmac: Fix use after free in brcmf_sdio_readframes()
    	leds: pca963x: Fix open-drain initialization
    	ext4: fix ext4_dax_read/write inode locking sequence for IOCB_NOWAIT
    	ALSA: ctl: allow TLV read operation for callback type of element in locked case
    	gianfar: Fix TX timestamping with a stacked DSA driver
    	pinctrl: sh-pfc: sh7264: Fix CAN function GPIOs
    	pxa168fb: Fix the function used to release some memory in an error handling path
    	media: i2c: mt9v032: fix enum mbus codes and frame sizes
    	powerpc/powernv/iov: Ensure the pdn for VFs always contains a valid PE number
    	gpio: gpio-grgpio: fix possible sleep-in-atomic-context bugs in grgpio_irq_map/unmap()
    	iommu/vt-d: Fix off-by-one in PASID allocation
    	char/random: silence a lockdep splat with printk()
    	media: sti: bdisp: fix a possible sleep-in-atomic-context bug in bdisp_device_run()
    	pinctrl: baytrail: Do not clear IRQ flags on direct-irq enabled pins
    	efi/x86: Map the entire EFI vendor string before copying it
    	MIPS: Loongson: Fix potential NULL dereference in loongson3_platform_init()
    	sparc: Add .exit.data section.
    	uio: fix a sleep-in-atomic-context bug in uio_dmem_genirq_irqcontrol()
    	usb: gadget: udc: fix possible sleep-in-atomic-context bugs in gr_probe()
    	usb: dwc2: Fix IN FIFO allocation
    	clocksource/drivers/bcm2835_timer: Fix memory leak of timer
    	kselftest: Minimise dependency of get_size on C library interfaces
    	jbd2: clear JBD2_ABORT flag before journal_reset to update log tail info when load journal
    	x86/sysfb: Fix check for bad VRAM size
    	pwm: omap-dmtimer: Simplify error handling
    	s390/pci: Fix possible deadlock in recover_store()
    	powerpc/iov: Move VF pdev fixup into pcibios_fixup_iov()
    	tracing: Fix tracing_stat return values in error handling paths
    	tracing: Fix very unlikely race of registering two stat tracers
    	ARM: 8952/1: Disable kmemleak on XIP kernels
    	ext4, jbd2: ensure panic when aborting with zero errno
    	ath10k: Correct the DMA direction for management tx buffers
    	drm/amd/display: Retrain dongles when SINK_COUNT becomes non-zero
    	nbd: add a flush_workqueue in nbd_start_device
    	KVM: s390: ENOTSUPP -> EOPNOTSUPP fixups
    	kconfig: fix broken dependency in randconfig-generated .config
    	clk: qcom: rcg2: Don't crash if our parent can't be found; return an error
    	drm/amdgpu: remove 4 set but not used variable in amdgpu_atombios_get_connector_info_from_object_table
    	drm/amdgpu: Ensure ret is always initialized when using SOC15_WAIT_ON_RREG
    	regulator: rk808: Lower log level on optional GPIOs being not available
    	net/wan/fsl_ucc_hdlc: reject muram offsets above 64K
    	NFC: port100: Convert cpu_to_le16(le16_to_cpu(E1) + E2) to use le16_add_cpu().
    	selinux: fall back to ref-walk if audit is required
    	arm64: dts: allwinner: H6: Add PMU mode
    	arm: dts: allwinner: H3: Add PMU node
    	selinux: ensure we cleanup the internal AVC counters on error in avc_insert()
    	arm64: dts: qcom: msm8996: Disable USB2 PHY suspend by core
    	ARM: dts: imx6: rdu2: Disable WP for USDHC2 and USDHC3
    	ARM: dts: imx6: rdu2: Limit USBH1 to Full Speed
    	PCI: iproc: Apply quirk_paxc_bridge() for module as well as built-in
    	media: cx23885: Add support for AVerMedia CE310B
    	PCI: Add generic quirk for increasing D3hot delay
    	PCI: Increase D3 delay for AMD Ryzen5/7 XHCI controllers
    	media: v4l2-device.h: Explicitly compare grp{id,mask} to zero in v4l2_device macros
    	reiserfs: Fix spurious unlock in reiserfs_fill_super() error handling
    	r8169: check that Realtek PHY driver module is loaded
    	fore200e: Fix incorrect checks of NULL pointer dereference
    	netfilter: nft_tunnel: add the missing ERSPAN_VERSION nla_policy
    	ALSA: usx2y: Adjust indentation in snd_usX2Y_hwdep_dsp_status
    	b43legacy: Fix -Wcast-function-type
    	ipw2x00: Fix -Wcast-function-type
    	iwlegacy: Fix -Wcast-function-type
    	rtlwifi: rtl_pci: Fix -Wcast-function-type
    	orinoco: avoid assertion in case of NULL pointer
    	ACPICA: Disassembler: create buffer fields in ACPI_PARSE_LOAD_PASS1
    	scsi: ufs: Complete pending requests in host reset and restore path
    	scsi: aic7xxx: Adjust indentation in ahc_find_syncrate
    	drm/mediatek: handle events when enabling/disabling crtc
    	ARM: dts: r8a7779: Add device node for ARM global timer
    	selinux: ensure we cleanup the internal AVC counters on error in avc_update()
    	dmaengine: Store module owner in dma_device struct
    	dmaengine: imx-sdma: Fix memory leak
    	crypto: chtls - Fixed memory leak
    	x86/vdso: Provide missing include file
    	PM / devfreq: rk3399_dmc: Add COMPILE_TEST and HAVE_ARM_SMCCC dependency
    	pinctrl: sh-pfc: sh7269: Fix CAN function GPIOs
    	reset: uniphier: Add SCSSI reset control for each channel
    	RDMA/rxe: Fix error type of mmap_offset
    	clk: sunxi-ng: add mux and pll notifiers for A64 CPU clock
    	ALSA: sh: Fix unused variable warnings
    	clk: uniphier: Add SCSSI clock gate for each channel
    	ALSA: sh: Fix compile warning wrt const
    	tools lib api fs: Fix gcc9 stringop-truncation compilation error
    	ACPI: button: Add DMI quirk for Razer Blade Stealth 13 late 2019 lid switch
    	mlx5: work around high stack usage with gcc
    	drm: remove the newline for CRC source name.
    	ARM: dts: stm32: Add power-supply for DSI panel on stm32f469-disco
    	usbip: Fix unsafe unaligned pointer usage
    	udf: Fix free space reporting for metadata and virtual partitions
    	staging: rtl8188: avoid excessive stack usage
    	IB/hfi1: Add software counter for ctxt0 seq drop
    	soc/tegra: fuse: Correct straps' address for older Tegra124 device trees
    	efi/x86: Don't panic or BUG() on non-critical error conditions
    	rcu: Use WRITE_ONCE() for assignments to ->pprev for hlist_nulls
    	Input: edt-ft5x06 - work around first register access error
    	x86/nmi: Remove irq_work from the long duration NMI handler
    	wan: ixp4xx_hss: fix compile-testing on 64-bit
    	ASoC: atmel: fix build error with CONFIG_SND_ATMEL_SOC_DMA=m
    	tty: synclinkmp: Adjust indentation in several functions
    	tty: synclink_gt: Adjust indentation in several functions
    	visorbus: fix uninitialized variable access
    	driver core: platform: Prevent resouce overflow from causing infinite loops
    	driver core: Print device when resources present in really_probe()
    	bpf: Return -EBADRQC for invalid map type in __bpf_tx_xdp_map
    	vme: bridges: reduce stack usage
    	drm/nouveau/secboot/gm20b: initialize pointer in gm20b_secboot_new()
    	drm/nouveau/gr/gk20a,gm200-: add terminators to method lists read from fw
    	drm/nouveau: Fix copy-paste error in nouveau_fence_wait_uevent_handler
    	drm/nouveau/drm/ttm: Remove set but not used variable 'mem'
    	drm/nouveau/fault/gv100-: fix memory leak on module unload
    	drm/vmwgfx: prevent memory leak in vmw_cmdbuf_res_add
    	usb: musb: omap2430: Get rid of musb .set_vbus for omap2430 glue
    	iommu/arm-smmu-v3: Use WRITE_ONCE() when changing validity of an STE
    	f2fs: set I_LINKABLE early to avoid wrong access by vfs
    	f2fs: free sysfs kobject
    	scsi: iscsi: Don't destroy session if there are outstanding connections
    	arm64: fix alternatives with LLVM's integrated assembler
    	drm/amd/display: fixup DML dependencies
    	watchdog/softlockup: Enforce that timestamp is valid on boot
    	f2fs: fix memleak of kobject
    	x86/mm: Fix NX bit clearing issue in kernel_map_pages_in_pgd
    	pwm: omap-dmtimer: Remove PWM chip in .remove before making it unfunctional
    	cmd64x: potential buffer overflow in cmd64x_program_timings()
    	ide: serverworks: potential overflow in svwks_set_pio_mode()
    	pwm: Remove set but not set variable 'pwm'
    	btrfs: fix possible NULL-pointer dereference in integrity checks
    	btrfs: safely advance counter when looking up bio csums
    	btrfs: device stats, log when stats are zeroed
    	module: avoid setting info->name early in case we can fall back to info->mod->name
    	remoteproc: Initialize rproc_class before use
    	irqchip/mbigen: Set driver .suppress_bind_attrs to avoid remove problems
    	ALSA: hda/hdmi - add retry logic to parse_intel_hdmi()
    	kbuild: use -S instead of -E for precise cc-option test in Kconfig
    	x86/decoder: Add TEST opcode to Group3-2
    	s390: adjust -mpacked-stack support check for clang 10
    	s390/ftrace: generate traced function stack frame
    	driver core: platform: fix u32 greater or equal to zero comparison
    	ALSA: hda - Add docking station support for Lenovo Thinkpad T420s
    	drm/nouveau/mmu: fix comptag memory leak
    	powerpc/sriov: Remove VF eeh_dev state when disabling SR-IOV
    	bcache: cached_dev_free needs to put the sb page
    	iommu/vt-d: Remove unnecessary WARN_ON_ONCE()
    	selftests: bpf: Reset global state between reuseport test runs
    	jbd2: switch to use jbd2_journal_abort() when failed to submit the commit record
    	jbd2: make sure ESHUTDOWN to be recorded in the journal superblock
    	ARM: 8951/1: Fix Kexec compilation issue.
    	hostap: Adjust indentation in prism2_hostapd_add_sta
    	iwlegacy: ensure loop counter addr does not wrap and cause an infinite loop
    	cifs: fix NULL dereference in match_prepath
    	bpf: map_seq_next should always increase position index
    	ceph: check availability of mds cluster on mount after wait timeout
    	rbd: work around -Wuninitialized warning
    	irqchip/gic-v3: Only provision redistributors that are enabled in ACPI
    	drm/nouveau/disp/nv50-: prevent oops when no channel method map provided
    	ftrace: fpid_next() should increase position index
    	trigger_next should increase position index
    	radeon: insert 10ms sleep in dce5_crtc_load_lut
    	ocfs2: fix a NULL pointer dereference when call ocfs2_update_inode_fsync_trans()
    	lib/scatterlist.c: adjust indentation in __sg_alloc_table
    	reiserfs: prevent NULL pointer dereference in reiserfs_insert_item()
    	bcache: explicity type cast in bset_bkey_last()
    	irqchip/gic-v3-its: Reference to its_invall_cmd descriptor when building INVALL
    	iwlwifi: mvm: Fix thermal zone registration
    	microblaze: Prevent the overflow of the start
    	brd: check and limit max_part par
    	drm/amdgpu/smu10: fix smu10_get_clock_by_type_with_latency
    	drm/amdgpu/smu10: fix smu10_get_clock_by_type_with_voltage
    	NFS: Fix memory leaks
    	help_next should increase position index
    	cifs: log warning message (once) if out of disk space
    	virtio_balloon: prevent pfn array overflow
    	mlxsw: spectrum_dpipe: Add missing error path
    	drm/amdgpu/display: handle multiple numbers of fclks in dcn_calcs.c (v2)
    	Linux 4.19.106
    
    Signed-off-by: Greg Kroah-Hartman <gregkh@google.com>
    Change-Id: Ia1032b50dd82b42e13973120dcbf94ae7b864648

commit d381d3c5fc77ca5cdf0cb53a14c147d19ba2b5cf
Author: Can Guo <cang@codeaurora.org>
Date:   Mon Nov 25 22:53:33 2019 -0800

    scsi: ufs: Complete pending requests in host reset and restore path
    
    [ Upstream commit 2df74b6985b51e77756e2e8faa16c45ca3ba53c5 ]
    
    In UFS host reset and restore path, before probe, we stop and start the
    host controller once. After host controller is stopped, the pending
    requests, if any, are cleared from the doorbell, but no completion IRQ
    would be raised due to the hba is stopped.  These pending requests shall be
    completed along with the first NOP_OUT command (as it is the first command
    which can raise a transfer completion IRQ) sent during probe.  Since the
    OCSs of these pending requests are not SUCCESS (because they are not yet
    literally finished), their UPIUs shall be dumped. When there are multiple
    pending requests, the UPIU dump can be overwhelming and may lead to
    stability issues because it is in atomic context.  Therefore, before probe,
    complete these pending requests right after host controller is stopped and
    silence the UPIU dump from them.
    
    Link: https://lore.kernel.org/r/1574751214-8321-5-git-send-email-cang@qti.qualcomm.com
    Reviewed-by: Alim Akhtar <alim.akhtar@samsung.com>
    Reviewed-by: Bean Huo <beanhuo@micron.com>
    Tested-by: Bean Huo <beanhuo@micron.com>
    Signed-off-by: Can Guo <cang@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 582a710ae98669738438aae6190a9e11bfcbee0a
Author: Eric Biggers <ebiggers@google.com>
Date:   Thu Feb 13 15:08:24 2020 -0800

    ANDROID: ufs, block: fix crypto power management and move into block layer
    
    The call to pm_runtime_get_sync() in ufshcd_program_key() can deadlock
    because it waits for the UFS controller to be resumed, but it can itself
    be reached while resuming the UFS controller via:
    
    - ufshcd_runtime_resume()
      - ufshcd_resume()
        - ufshcd_reset_and_restore()
          - ufshcd_host_reset_and_restore()
            - ufshcd_hba_enable()
              - ufshcd_hba_execute_hce()
                - ufshcd_hba_start()
                  - ufshcd_crypto_enable()
                    - keyslot_manager_reprogram_all_keys()
                      - ufshcd_crypto_keyslot_program()
                        - ufshcd_program_key()
    
    But pm_runtime_get_sync() *is* needed when evicting a key.  Also, on
    pre-4.20 kernels it's needed when programming a keyslot for a bio since
    the block layer used to resume the device in a different place.
    
    Thus, it's hard for drivers to know what to do in .keyslot_program() and
    .keyslot_evict().  In old kernels it may even be impossible unless we
    were to pass more information down from the keyslot_manager.
    
    There's also another possible deadlock: keyslot programming and eviction
    take ksm->lock for write and then resume the device, which may result in
    ksm->lock being taken again via the above call stack.  To fix this, we
    should resume the device before taking ksm->lock.
    
    Fix these problems by moving to a better design where the block layer
    (namely, the keyslot manager) handles runtime power management instead
    of drivers.  This is analogous to the block layer's existing runtime
    power management support (blk-pm), which handles resuming devices when
    bios are submitted to them so that drivers don't need to handle it.
    
    Test: Tested on coral with:
            echo 5 > /sys/bus/platform/devices/1d84000.ufshc/rpm_lvl
            sleep 30
            touch /data && sync  # hangs before this fix
      Also verified via kvm-xfstests that blk-crypto-fallback continues
      to work both with and without CONFIG_PM=y.
    
    Bug: 137270441
    Bug: 149368295
    Change-Id: I6bc9fb81854afe7edf490d71796ee68a61f7cbc8
    Signed-off-by: Eric Biggers <ebiggers@google.com>

commit 4eee97caec2cf68a7454f642ffba9d7d23670301
Merge: 280cae2 9b15f7f
Author: Greg Kroah-Hartman <gregkh@google.com>
Date:   Wed Feb 19 08:31:05 2020 +0100

    Merge 4.19.104 into android-4.19
    
    Changes in 4.19.104
    	ASoC: pcm: update FE/BE trigger order based on the command
    	hv_sock: Remove the accept port restriction
    	IB/mlx4: Fix memory leak in add_gid error flow
    	RDMA/netlink: Do not always generate an ACK for some netlink operations
    	RDMA/core: Fix locking in ib_uverbs_event_read
    	RDMA/uverbs: Verify MR access flags
    	scsi: ufs: Fix ufshcd_probe_hba() reture value in case ufshcd_scsi_add_wlus() fails
    	PCI/IOV: Fix memory leak in pci_iov_add_virtfn()
    	ath10k: pci: Only dump ATH10K_MEM_REGION_TYPE_IOREG when safe
    	PCI/switchtec: Fix vep_vector_number ioread width
    	PCI: Don't disable bridge BARs when assigning bus resources
    	nfs: NFS_SWAP should depend on SWAP
    	NFS: Revalidate the file size on a fatal write error
    	NFS/pnfs: Fix pnfs_generic_prepare_to_resend_writes()
    	NFSv4: try lease recovery on NFS4ERR_EXPIRED
    	serial: uartps: Add a timeout to the tx empty wait
    	gpio: zynq: Report gpio direction at boot
    	spi: spi-mem: Add extra sanity checks on the op param
    	spi: spi-mem: Fix inverted logic in op sanity check
    	rtc: hym8563: Return -EINVAL if the time is known to be invalid
    	rtc: cmos: Stop using shared IRQ
    	ARC: [plat-axs10x]: Add missing multicast filter number to GMAC node
    	platform/x86: intel_mid_powerbtn: Take a copy of ddata
    	ARM: dts: at91: Reenable UART TX pull-ups
    	ARM: dts: am43xx: add support for clkout1 clock
    	ARM: dts: at91: sama5d3: fix maximum peripheral clock rates
    	ARM: dts: at91: sama5d3: define clock rate range for tcb1
    	tools/power/acpi: fix compilation error
    	powerpc/pseries/vio: Fix iommu_table use-after-free refcount warning
    	powerpc/pseries: Allow not having ibm, hypertas-functions::hcall-multi-tce for DDW
    	iommu/arm-smmu-v3: Populate VMID field for CMDQ_OP_TLBI_NH_VA
    	KVM: arm/arm64: vgic-its: Fix restoration of unmapped collections
    	ARM: 8949/1: mm: mark free_memmap as __init
    	arm64: cpufeature: Fix the type of no FP/SIMD capability
    	arm64: ptrace: nofpsimd: Fail FP/SIMD regset operations
    	KVM: arm/arm64: Fix young bit from mmu notifier
    	KVM: arm: Fix DFSR setting for non-LPAE aarch32 guests
    	KVM: arm: Make inject_abt32() inject an external abort instead
    	KVM: arm64: pmu: Don't increment SW_INCR if PMCR.E is unset
    	mtd: onenand_base: Adjust indentation in onenand_read_ops_nolock
    	mtd: sharpslpart: Fix unsigned comparison to zero
    	crypto: artpec6 - return correct error code for failed setkey()
    	crypto: atmel-sha - fix error handling when setting hmac key
    	media: i2c: adv748x: Fix unsafe macros
    	pinctrl: sh-pfc: r8a7778: Fix duplicate SDSELF_B and SD1_CLK_B
    	mwifiex: Fix possible buffer overflows in mwifiex_ret_wmm_get_status()
    	mwifiex: Fix possible buffer overflows in mwifiex_cmd_append_vsie_tlv()
    	libertas: don't exit from lbs_ibss_join_existing() with RCU read lock held
    	libertas: make lbs_ibss_join_existing() return error code on rates overflow
    	scsi: megaraid_sas: Do not initiate OCR if controller is not in ready state
    	x86/stackframe: Move ENCODE_FRAME_POINTER to asm/frame.h
    	x86/stackframe, x86/ftrace: Add pt_regs frame annotations
    	serial: uartps: Move the spinlock after the read of the tx empty
    	padata: fix null pointer deref of pd->pinst
    	Linux 4.19.104
    
    Signed-off-by: Greg Kroah-Hartman <gregkh@google.com>
    Change-Id: I42a465b140183dcc8cf49e19903d0e8f4b688930

commit 960e54416becfef12baceeb4d7a1a7bd4c049765
Author: Bean Huo <beanhuo@micron.com>
Date:   Mon Jan 20 14:08:13 2020 +0100

    scsi: ufs: Fix ufshcd_probe_hba() reture value in case ufshcd_scsi_add_wlus() fails
    
    commit b9fc5320212efdfb4e08b825aaa007815fd11d16 upstream.
    
    A non-zero error value likely being returned by ufshcd_scsi_add_wlus() in
    case of failure of adding the WLs, but ufshcd_probe_hba() doesn't use this
    value, and doesn't report this failure to upper caller.  This patch is to
    fix this issue.
    
    Fixes: 2a8fa600445c ("ufs: manually add well known logical units")
    Link: https://lore.kernel.org/r/20200120130820.1737-2-huobean@gmail.com
    Reviewed-by: Asutosh Das <asutoshd@codeaurora.org>
    Reviewed-by: Alim Akhtar <alim.akhtar@samsung.com>
    Reviewed-by: Stanley Chu <stanley.chu@mediatek.com>
    Signed-off-by: Bean Huo <beanhuo@micron.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3389e56d31c720c781ed6b465757716c521a231f
Merge: 9c87d22 3576683
Author: Greg Kroah-Hartman <gregkh@google.com>
Date:   Tue Feb 11 15:05:03 2020 -0800

    Merge 4.19.103 into android-4.19
    
    Changes in 4.19.103
    	Revert "drm/sun4i: dsi: Change the start delay calculation"
    	ovl: fix lseek overflow on 32bit
    	kernel/module: Fix memleak in module_add_modinfo_attrs()
    	media: iguanair: fix endpoint sanity check
    	ocfs2: fix oops when writing cloned file
    	x86/cpu: Update cached HLE state on write to TSX_CTRL_CPUID_CLEAR
    	udf: Allow writing to 'Rewritable' partitions
    	printk: fix exclusive_console replaying
    	iwlwifi: mvm: fix NVM check for 3168 devices
    	sparc32: fix struct ipc64_perm type definition
    	cls_rsvp: fix rsvp_policy
    	gtp: use __GFP_NOWARN to avoid memalloc warning
    	l2tp: Allow duplicate session creation with UDP
    	net: hsr: fix possible NULL deref in hsr_handle_frame()
    	net_sched: fix an OOB access in cls_tcindex
    	net: stmmac: Delete txtimer in suspend()
    	bnxt_en: Fix TC queue mapping.
    	tcp: clear tp->total_retrans in tcp_disconnect()
    	tcp: clear tp->delivered in tcp_disconnect()
    	tcp: clear tp->data_segs{in|out} in tcp_disconnect()
    	tcp: clear tp->segs_{in|out} in tcp_disconnect()
    	rxrpc: Fix use-after-free in rxrpc_put_local()
    	rxrpc: Fix insufficient receive notification generation
    	rxrpc: Fix missing active use pinning of rxrpc_local object
    	rxrpc: Fix NULL pointer deref due to call->conn being cleared on disconnect
    	media: uvcvideo: Avoid cyclic entity chains due to malformed USB descriptors
    	mfd: dln2: More sanity checking for endpoints
    	ipc/msg.c: consolidate all xxxctl_down() functions
    	tracing: Fix sched switch start/stop refcount racy updates
    	rcu: Avoid data-race in rcu_gp_fqs_check_wake()
    	brcmfmac: Fix memory leak in brcmf_usbdev_qinit
    	usb: typec: tcpci: mask event interrupts when remove driver
    	usb: gadget: legacy: set max_speed to super-speed
    	usb: gadget: f_ncm: Use atomic_t to track in-flight request
    	usb: gadget: f_ecm: Use atomic_t to track in-flight request
    	ALSA: usb-audio: Fix endianess in descriptor validation
    	ALSA: dummy: Fix PCM format loop in proc output
    	mm/memory_hotplug: fix remove_memory() lockdep splat
    	mm: move_pages: report the number of non-attempted pages
    	media/v4l2-core: set pages dirty upon releasing DMA buffers
    	media: v4l2-core: compat: ignore native command codes
    	media: v4l2-rect.h: fix v4l2_rect_map_inside() top/left adjustments
    	lib/test_kasan.c: fix memory leak in kmalloc_oob_krealloc_more()
    	irqdomain: Fix a memory leak in irq_domain_push_irq()
    	platform/x86: intel_scu_ipc: Fix interrupt support
    	ALSA: hda: Add Clevo W65_67SB the power_save blacklist
    	KVM: arm64: Correct PSTATE on exception entry
    	KVM: arm/arm64: Correct CPSR on exception entry
    	KVM: arm/arm64: Correct AArch32 SPSR on exception entry
    	KVM: arm64: Only sign-extend MMIO up to register width
    	MIPS: fix indentation of the 'RELOCS' message
    	MIPS: boot: fix typo in 'vmlinux.lzma.its' target
    	s390/mm: fix dynamic pagetable upgrade for hugetlbfs
    	powerpc/xmon: don't access ASDR in VMs
    	powerpc/pseries: Advance pfn if section is not present in lmb_is_removable()
    	smb3: fix signing verification of large reads
    	PCI: tegra: Fix return value check of pm_runtime_get_sync()
    	mmc: spi: Toggle SPI polarity, do not hardcode it
    	ACPI: video: Do not export a non working backlight interface on MSI MS-7721 boards
    	ACPI / battery: Deal with design or full capacity being reported as -1
    	ACPI / battery: Use design-cap for capacity calculations if full-cap is not available
    	ACPI / battery: Deal better with neither design nor full capacity not being reported
    	alarmtimer: Unregister wakeup source when module get fails
    	ubifs: Reject unsupported ioctl flags explicitly
    	ubifs: don't trigger assertion on invalid no-key filename
    	ubifs: Fix FS_IOC_SETFLAGS unexpectedly clearing encrypt flag
    	ubifs: Fix deadlock in concurrent bulk-read and writepage
    	crypto: geode-aes - convert to skcipher API and make thread-safe
    	PCI: keystone: Fix link training retries initiation
    	mmc: sdhci-of-at91: fix memleak on clk_get failure
    	hv_balloon: Balloon up according to request page number
    	mfd: axp20x: Mark AXP20X_VBUS_IPSOUT_MGMT as volatile
    	crypto: api - Check spawn->alg under lock in crypto_drop_spawn
    	crypto: ccree - fix backlog memory leak
    	crypto: ccree - fix pm wrongful error reporting
    	crypto: ccree - fix PM race condition
    	scripts/find-unused-docs: Fix massive false positives
    	scsi: qla2xxx: Fix mtcp dump collection failure
    	power: supply: ltc2941-battery-gauge: fix use-after-free
    	ovl: fix wrong WARN_ON() in ovl_cache_update_ino()
    	f2fs: choose hardlimit when softlimit is larger than hardlimit in f2fs_statfs_project()
    	f2fs: fix miscounted block limit in f2fs_statfs_project()
    	f2fs: code cleanup for f2fs_statfs_project()
    	PM: core: Fix handling of devices deleted during system-wide resume
    	of: Add OF_DMA_DEFAULT_COHERENT & select it on powerpc
    	dm zoned: support zone sizes smaller than 128MiB
    	dm space map common: fix to ensure new block isn't already in use
    	dm crypt: fix benbi IV constructor crash if used in authenticated mode
    	dm: fix potential for q->make_request_fn NULL pointer
    	dm writecache: fix incorrect flush sequence when doing SSD mode commit
    	padata: Remove broken queue flushing
    	tracing: Annotate ftrace_graph_hash pointer with __rcu
    	tracing: Annotate ftrace_graph_notrace_hash pointer with __rcu
    	ftrace: Add comment to why rcu_dereference_sched() is open coded
    	ftrace: Protect ftrace_graph_hash with ftrace_sync
    	samples/bpf: Don't try to remove user's homedir on clean
    	crypto: ccp - set max RSA modulus size for v3 platform devices as well
    	crypto: pcrypt - Do not clear MAY_SLEEP flag in original request
    	crypto: atmel-aes - Fix counter overflow in CTR mode
    	crypto: api - Fix race condition in crypto_spawn_alg
    	crypto: picoxcell - adjust the position of tasklet_init and fix missed tasklet_kill
    	scsi: qla2xxx: Fix unbound NVME response length
    	NFS: Fix memory leaks and corruption in readdir
    	NFS: Directory page cache pages need to be locked when read
    	jbd2_seq_info_next should increase position index
    	Btrfs: fix missing hole after hole punching and fsync when using NO_HOLES
    	btrfs: set trans->drity in btrfs_commit_transaction
    	Btrfs: fix race between adding and putting tree mod seq elements and nodes
    	ARM: tegra: Enable PLLP bypass during Tegra124 LP1
    	iwlwifi: don't throw error when trying to remove IGTK
    	mwifiex: fix unbalanced locking in mwifiex_process_country_ie()
    	sunrpc: expiry_time should be seconds not timeval
    	gfs2: move setting current->backing_dev_info
    	gfs2: fix O_SYNC write handling
    	drm/rect: Avoid division by zero
    	media: rc: ensure lirc is initialized before registering input device
    	tools/kvm_stat: Fix kvm_exit filter name
    	xen/balloon: Support xend-based toolstack take two
    	watchdog: fix UAF in reboot notifier handling in watchdog core code
    	bcache: add readahead cache policy options via sysfs interface
    	eventfd: track eventfd_signal() recursion depth
    	aio: prevent potential eventfd recursion on poll
    	KVM: x86: Refactor picdev_write() to prevent Spectre-v1/L1TF attacks
    	KVM: x86: Refactor prefix decoding to prevent Spectre-v1/L1TF attacks
    	KVM: x86: Protect pmu_intel.c from Spectre-v1/L1TF attacks
    	KVM: x86: Protect DR-based index computations from Spectre-v1/L1TF attacks
    	KVM: x86: Protect kvm_lapic_reg_write() from Spectre-v1/L1TF attacks
    	KVM: x86: Protect kvm_hv_msr_[get|set]_crash_data() from Spectre-v1/L1TF attacks
    	KVM: x86: Protect ioapic_write_indirect() from Spectre-v1/L1TF attacks
    	KVM: x86: Protect MSR-based index computations in pmu.h from Spectre-v1/L1TF attacks
    	KVM: x86: Protect ioapic_read_indirect() from Spectre-v1/L1TF attacks
    	KVM: x86: Protect MSR-based index computations from Spectre-v1/L1TF attacks in x86.c
    	KVM: x86: Protect x86_decode_insn from Spectre-v1/L1TF attacks
    	KVM: x86: Protect MSR-based index computations in fixed_msr_to_seg_unit() from Spectre-v1/L1TF attacks
    	KVM: x86: Fix potential put_fpu() w/o load_fpu() on MPX platform
    	KVM: PPC: Book3S HV: Uninit vCPU if vcore creation fails
    	KVM: PPC: Book3S PR: Free shared page if mmu initialization fails
    	x86/kvm: Be careful not to clear KVM_VCPU_FLUSH_TLB bit
    	KVM: x86: Don't let userspace set host-reserved cr4 bits
    	KVM: x86: Free wbinvd_dirty_mask if vCPU creation fails
    	KVM: s390: do not clobber registers during guest reset/store status
    	clk: tegra: Mark fuse clock as critical
    	drm/amd/dm/mst: Ignore payload update failures
    	percpu: Separate decrypted varaibles anytime encryption can be enabled
    	scsi: qla2xxx: Fix the endianness of the qla82xx_get_fw_size() return type
    	scsi: csiostor: Adjust indentation in csio_device_reset
    	scsi: qla4xxx: Adjust indentation in qla4xxx_mem_free
    	scsi: ufs: Recheck bkops level if bkops is disabled
    	phy: qualcomm: Adjust indentation in read_poll_timeout
    	ext2: Adjust indentation in ext2_fill_super
    	powerpc/44x: Adjust indentation in ibm4xx_denali_fixup_memsize
    	drm: msm: mdp4: Adjust indentation in mdp4_dsi_encoder_enable
    	NFC: pn544: Adjust indentation in pn544_hci_check_presence
    	ppp: Adjust indentation into ppp_async_input
    	net: smc911x: Adjust indentation in smc911x_phy_configure
    	net: tulip: Adjust indentation in {dmfe, uli526x}_init_module
    	IB/mlx5: Fix outstanding_pi index for GSI qps
    	IB/core: Fix ODP get user pages flow
    	nfsd: fix delay timer on 32-bit architectures
    	nfsd: fix jiffies/time_t mixup in LRU list
    	nfsd: Return the correct number of bytes written to the file
    	ubi: fastmap: Fix inverted logic in seen selfcheck
    	ubi: Fix an error pointer dereference in error handling code
    	mfd: da9062: Fix watchdog compatible string
    	mfd: rn5t618: Mark ADC control register volatile
    	bonding/alb: properly access headers in bond_alb_xmit()
    	net: dsa: bcm_sf2: Only 7278 supports 2Gb/sec IMP port
    	net: mvneta: move rx_dropped and rx_errors in per-cpu stats
    	net_sched: fix a resource leak in tcindex_set_parms()
    	net: systemport: Avoid RBUF stuck in Wake-on-LAN mode
    	net/mlx5: IPsec, Fix esp modify function attribute
    	net/mlx5: IPsec, fix memory leak at mlx5_fpga_ipsec_delete_sa_ctx
    	net: macb: Remove unnecessary alignment check for TSO
    	net: macb: Limit maximum GEM TX length in TSO
    	net: dsa: b53: Always use dev->vlan_enabled in b53_configure_vlan()
    	ext4: fix deadlock allocating crypto bounce page from mempool
    	btrfs: use bool argument in free_root_pointers()
    	btrfs: free block groups after free'ing fs trees
    	drm: atmel-hlcdc: enable clock before configuring timing engine
    	drm/dp_mst: Remove VCPI while disabling topology mgr
    	btrfs: flush write bio if we loop in extent_write_cache_pages
    	KVM: x86/mmu: Apply max PA check for MMIO sptes to 32-bit KVM
    	KVM: x86: Use gpa_t for cr2/gpa to fix TDP support on 32-bit KVM
    	KVM: VMX: Add non-canonical check on writes to RTIT address MSRs
    	KVM: nVMX: vmread should not set rflags to specify success in case of #PF
    	KVM: Use vcpu-specific gva->hva translation when querying host page size
    	KVM: Play nice with read-only memslots when querying host page size
    	mm: zero remaining unavailable struct pages
    	mm: return zero_resv_unavail optimization
    	mm/page_alloc.c: fix uninitialized memmaps on a partially populated last section
    	cifs: fail i/o on soft mounts if sessionsetup errors out
    	x86/apic/msi: Plug non-maskable MSI affinity race
    	clocksource: Prevent double add_timer_on() for watchdog_timer
    	perf/core: Fix mlock accounting in perf_mmap()
    	rxrpc: Fix service call disconnection
    	Linux 4.19.103
    
    Signed-off-by: Greg Kroah-Hartman <gregkh@google.com>
    Change-Id: I0d7f09085c3541373e0fd6b2e3ffacc5e34f7d55

commit 028a925c0540cea469c493814d86db6c4f3a014d
Author: Asutosh Das <asutoshd@codeaurora.org>
Date:   Mon Nov 25 22:53:30 2019 -0800

    scsi: ufs: Recheck bkops level if bkops is disabled
    
    commit 24366c2afbb0539fb14eff330d4e3a5db5c0a3ef upstream.
    
    bkops level should be rechecked upon receiving an exception.  Currently the
    level is being cached and never updated.
    
    Update bkops each time the level is checked.  Also do not use the cached
    bkops level value if it is disabled and then enabled.
    
    Fixes: afdfff59a0e0 (scsi: ufs: handle non spec compliant bkops behaviour by device)
    Link: https://lore.kernel.org/r/1574751214-8321-2-git-send-email-cang@qti.qualcomm.com
    Reviewed-by: Bean Huo <beanhuo@micron.com>
    Reviewed-by: Alim Akhtar <alim.akhtar@samsung.com>
    Tested-by: Alim Akhtar <alim.akhtar@samsung.com>
    Signed-off-by: Asutosh Das <asutoshd@codeaurora.org>
    Signed-off-by: Can Guo <cang@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bbee78199fc516d40893642daa24171032b19c60
Author: Eric Biggers <ebiggers@google.com>
Date:   Thu Jan 9 21:10:06 2020 -0800

    FROMLIST: scsi: ufs: add program_key() variant op
    
    On Snapdragon SoCs, the Linux kernel isn't permitted to directly access
    the standard UFS crypto configuration registers.  Instead, programming
    and evicting keys must be done through vendor-specific SMC calls.
    
    To support this hardware, add a ->program_key() method to
    'struct ufs_hba_variant_ops'.  This allows overriding the UFS standard
    key programming procedure.
    
    Link: https://lore.kernel.org/r/20200110061634.46742-5-ebiggers@kernel.org
    Bug: 137270441
    Bug: 147259927
    Change-Id: Ia561d5a51421baaf78de52a1eaec496093a0d0ad
    Signed-off-by: Eric Biggers <ebiggers@google.com>

commit bb7f6203fb8a8a5e1478b55c8c3a43c5a0ced80c
Author: Barani Muthukumaran <bmuthuku@codeaurora.org>
Date:   Tue Jan 21 15:09:37 2020 -0800

    ANDROID: ufshcd-crypto: export cap find API
    
    Export symbol ufshcd_crypto_cap_find to find
    the crypto capabilities from the crypto engine
    in the storage controller. This is used to
    validate that the crypto_mode and data_unit_size
    provided is supported by the inline encryption
    hardware. This can be used by all vops
    
    Bug: 147209885
    
    Change-Id: I42de2d4f645adb2e4f688716434fd2884ff043bc
    Signed-off-by: Barani Muthukumaran <bmuthuku@codeaurora.org>
    Signed-off-by: Eric Biggers <ebiggers@google.com>

commit b01c73ea7129745ce9d94b8d3b35663b716cd95b
Author: Satya Tangirala <satyat@google.com>
Date:   Tue Dec 17 14:26:29 2019 -0800

    BACKPORT: FROMLIST: Update Inline Encryption from v5 to v6 of patch series
    
    Changes v5 => v6:
     - Blk-crypto's kernel crypto API fallback is no longer restricted to
       8-byte DUNs. It's also now separately configurable from blk-crypto, and
       can be disabled entirely, while still allowing the kernel to use inline
       encryption hardware. Further, struct bio_crypt_ctx takes up less space,
       and no longer contains the information needed by the crypto API
       fallback - the fallback allocates the required memory when necessary.
     - Blk-crypto now supports all file content encryption modes supported by
       fscrypt.
     - Fixed bio merging logic in blk-merge.c
     - Fscrypt now supports inline encryption with the direct key policy, since
       blk-crypto now has support for larger DUNs.
     - Keyslot manager now uses a hashtable to lookup which keyslot contains
       any particular key (thanks Eric!)
     - Fscrypt support for inline encryption now handles filesystems with
       multiple underlying block devices (thanks Eric!)
     - Numerous cleanups
    
    Bug: 137270441
    Test: refer to I26376479ee38259b8c35732cb3a1d7e15f9b05a3
    Change-Id: I13e2e327e0b4784b394cb1e7cf32a04856d95f01
    Link: https://lore.kernel.org/linux-block/20191218145136.172774-1-satyat@google.com/
    Signed-off-by: Satya Tangirala <satyat@google.com>

commit 287ec341d661e3e1f3b3f26ec00cf0f0366194a3
Merge: 146c22e 3d40d71
Author: Greg Kroah-Hartman <gregkh@google.com>
Date:   Sat Jan 4 19:29:03 2020 +0100

    Merge 4.19.93 into android-4.19
    
    Changes in 4.19.93
    	scsi: lpfc: Fix discovery failures when target device connectivity bounces
    	scsi: mpt3sas: Fix clear pending bit in ioctl status
    	scsi: lpfc: Fix locking on mailbox command completion
    	Input: atmel_mxt_ts - disable IRQ across suspend
    	f2fs: fix to update time in lazytime mode
    	iommu: rockchip: Free domain on .domain_free
    	iommu/tegra-smmu: Fix page tables in > 4 GiB memory
    	dmaengine: xilinx_dma: Clear desc_pendingcount in xilinx_dma_reset
    	scsi: target: compare full CHAP_A Algorithm strings
    	scsi: lpfc: Fix SLI3 hba in loop mode not discovering devices
    	scsi: csiostor: Don't enable IRQs too early
    	scsi: hisi_sas: Replace in_softirq() check in hisi_sas_task_exec()
    	powerpc/pseries: Mark accumulate_stolen_time() as notrace
    	powerpc/pseries: Don't fail hash page table insert for bolted mapping
    	powerpc/tools: Don't quote $objdump in scripts
    	dma-debug: add a schedule point in debug_dma_dump_mappings()
    	leds: lm3692x: Handle failure to probe the regulator
    	clocksource/drivers/asm9260: Add a check for of_clk_get
    	clocksource/drivers/timer-of: Use unique device name instead of timer
    	powerpc/security/book3s64: Report L1TF status in sysfs
    	powerpc/book3s64/hash: Add cond_resched to avoid soft lockup warning
    	ext4: update direct I/O read lock pattern for IOCB_NOWAIT
    	ext4: iomap that extends beyond EOF should be marked dirty
    	jbd2: Fix statistics for the number of logged blocks
    	scsi: tracing: Fix handling of TRANSFER LENGTH == 0 for READ(6) and WRITE(6)
    	scsi: lpfc: Fix duplicate unreg_rpi error in port offline flow
    	f2fs: fix to update dir's i_pino during cross_rename
    	clk: qcom: Allow constant ratio freq tables for rcg
    	clk: clk-gpio: propagate rate change to parent
    	irqchip/irq-bcm7038-l1: Enable parent IRQ if necessary
    	irqchip: ingenic: Error out if IRQ domain creation failed
    	fs/quota: handle overflows of sysctl fs.quota.* and report as unsigned long
    	scsi: lpfc: fix: Coverity: lpfc_cmpl_els_rsp(): Null pointer dereferences
    	PCI: rpaphp: Fix up pointer to first drc-info entry
    	scsi: ufs: fix potential bug which ends in system hang
    	powerpc/pseries/cmm: Implement release() function for sysfs device
    	PCI: rpaphp: Don't rely on firmware feature to imply drc-info support
    	PCI: rpaphp: Annotate and correctly byte swap DRC properties
    	PCI: rpaphp: Correctly match ibm, my-drc-index to drc-name when using drc-info
    	powerpc/security: Fix wrong message when RFI Flush is disable
    	scsi: atari_scsi: sun3_scsi: Set sg_tablesize to 1 instead of SG_NONE
    	clk: pxa: fix one of the pxa RTC clocks
    	bcache: at least try to shrink 1 node in bch_mca_scan()
    	HID: quirks: Add quirk for HP MSU1465 PIXART OEM mouse
    	HID: logitech-hidpp: Silence intermittent get_battery_capacity errors
    	ARM: 8937/1: spectre-v2: remove Brahma-B53 from hardening
    	libnvdimm/btt: fix variable 'rc' set but not used
    	HID: Improve Windows Precision Touchpad detection.
    	HID: rmi: Check that the RMI_STARTED bit is set before unregistering the RMI transport device
    	watchdog: Fix the race between the release of watchdog_core_data and cdev
    	scsi: pm80xx: Fix for SATA device discovery
    	scsi: ufs: Fix error handing during hibern8 enter
    	scsi: scsi_debug: num_tgts must be >= 0
    	scsi: NCR5380: Add disconnect_mask module parameter
    	scsi: iscsi: Don't send data to unbound connection
    	scsi: target: iscsi: Wait for all commands to finish before freeing a session
    	gpio: mpc8xxx: Don't overwrite default irq_set_type callback
    	apparmor: fix unsigned len comparison with less than zero
    	scripts/kallsyms: fix definitely-lost memory leak
    	powerpc: Don't add -mabi= flags when building with Clang
    	cdrom: respect device capabilities during opening action
    	perf script: Fix brstackinsn for AUXTRACE
    	perf regs: Make perf_reg_name() return "unknown" instead of NULL
    	s390/zcrypt: handle new reply code FILTERED_BY_HYPERVISOR
    	libfdt: define INT32_MAX and UINT32_MAX in libfdt_env.h
    	s390/cpum_sf: Check for SDBT and SDB consistency
    	ocfs2: fix passing zero to 'PTR_ERR' warning
    	mailbox: imx: Fix Tx doorbell shutdown path
    	kernel: sysctl: make drop_caches write-only
    	userfaultfd: require CAP_SYS_PTRACE for UFFD_FEATURE_EVENT_FORK
    	Revert "powerpc/vcpu: Assume dedicated processors as non-preempt"
    	x86/mce: Fix possibly incorrect severity calculation on AMD
    	net, sysctl: Fix compiler warning when only cBPF is present
    	netfilter: nf_queue: enqueue skbs with NULL dst
    	ALSA: hda - Downgrade error message for single-cmd fallback
    	bonding: fix active-backup transition after link failure
    	perf strbuf: Remove redundant va_end() in strbuf_addv()
    	Make filldir[64]() verify the directory entry filename is valid
    	filldir[64]: remove WARN_ON_ONCE() for bad directory entries
    	netfilter: ebtables: compat: reject all padding in matches/watchers
    	6pack,mkiss: fix possible deadlock
    	netfilter: bridge: make sure to pull arp header in br_nf_forward_arp()
    	inetpeer: fix data-race in inet_putpeer / inet_putpeer
    	net: add a READ_ONCE() in skb_peek_tail()
    	net: icmp: fix data-race in cmp_global_allow()
    	hrtimer: Annotate lockless access to timer->state
    	net: ena: fix napi handler misbehavior when the napi budget is zero
    	net/mlxfw: Fix out-of-memory error in mfa2 flash burning
    	net: stmmac: dwmac-meson8b: Fix the RGMII TX delay on Meson8b/8m2 SoCs
    	ptp: fix the race between the release of ptp_clock and cdev
    	tcp: Fix highest_sack and highest_sack_seq
    	udp: fix integer overflow while computing available space in sk_rcvbuf
    	vhost/vsock: accept only packets with the right dst_cid
    	net: add bool confirm_neigh parameter for dst_ops.update_pmtu
    	ip6_gre: do not confirm neighbor when do pmtu update
    	gtp: do not confirm neighbor when do pmtu update
    	net/dst: add new function skb_dst_update_pmtu_no_confirm
    	tunnel: do not confirm neighbor when do pmtu update
    	vti: do not confirm neighbor when do pmtu update
    	sit: do not confirm neighbor when do pmtu update
    	net/dst: do not confirm neighbor for vxlan and geneve pmtu update
    	gtp: do not allow adding duplicate tid and ms_addr pdp context
    	net: marvell: mvpp2: phylink requires the link interrupt
    	tcp/dccp: fix possible race __inet_lookup_established()
    	tcp: do not send empty skb from tcp_write_xmit()
    	gtp: fix wrong condition in gtp_genl_dump_pdp()
    	gtp: fix an use-after-free in ipv4_pdp_find()
    	gtp: avoid zero size hashtable
    	spi: fsl: don't map irq during probe
    	tty/serial: atmel: fix out of range clock divider handling
    	pinctrl: baytrail: Really serialize all register accesses
    	spi: fsl: use platform_get_irq() instead of of_irq_to_resource()
    	Linux 4.19.93
    
    Signed-off-by: Greg Kroah-Hartman <gregkh@google.com>
    Change-Id: Ie31b3fba19c5a45be0b85f272bc50cb8b67ea3c0

commit a4c9fd613eec085df74de61c55138cbc4ba6b84c
Author: Subhash Jadavani <subhashj@codeaurora.org>
Date:   Thu Nov 14 22:09:30 2019 -0800

    scsi: ufs: Fix error handing during hibern8 enter
    
    [ Upstream commit 6d303e4b19d694cdbebf76bcdb51ada664ee953d ]
    
    During clock gating (ufshcd_gate_work()), we first put the link hibern8 by
    calling ufshcd_uic_hibern8_enter() and if ufshcd_uic_hibern8_enter()
    returns success (0) then we gate all the clocks.  Now let’s zoom in to what
    ufshcd_uic_hibern8_enter() does internally: It calls
    __ufshcd_uic_hibern8_enter() and if failure is encountered, link recovery
    shall put the link back to the highest HS gear and returns success (0) to
    ufshcd_uic_hibern8_enter() which is the issue as link is still in active
    state due to recovery!  Now ufshcd_uic_hibern8_enter() returns success to
    ufshcd_gate_work() and hence it goes ahead with gating the UFS clock while
    link is still in active state hence I believe controller would raise UIC
    error interrupts. But when we service the interrupt, clocks might have
    already been disabled!
    
    This change fixes for this by returning failure from
    __ufshcd_uic_hibern8_enter() if recovery succeeds as link is still not in
    hibern8, upon receiving the error ufshcd_hibern8_enter() would initiate
    retry to put the link state back into hibern8.
    
    Link: https://lore.kernel.org/r/1573798172-20534-8-git-send-email-cang@codeaurora.org
    Reviewed-by: Avri Altman <avri.altman@wdc.com>
    Reviewed-by: Bean Huo <beanhuo@micron.com>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Can Guo <cang@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f7276da463af05e132870aff847bae43947d3040
Author: Bean Huo <beanhuo@micron.com>
Date:   Tue Nov 12 23:34:36 2019 +0100

    scsi: ufs: fix potential bug which ends in system hang
    
    [ Upstream commit cfcbae3895b86c390ede57b2a8f601dd5972b47b ]
    
    In function __ufshcd_query_descriptor(), in the event of an error
    happening, we directly goto out_unlock and forget to invaliate
    hba->dev_cmd.query.descriptor pointer. This results in this pointer still
    valid in ufshcd_copy_query_response() for other query requests which go
    through ufshcd_exec_raw_upiu_cmd(). This will cause __memcpy() crash and
    system hangs. Log as shown below:
    
    Unable to handle kernel paging request at virtual address
    ffff000012233c40
    Mem abort info:
       ESR = 0x96000047
       Exception class = DABT (current EL), IL = 32 bits
       SET = 0, FnV = 0
       EA = 0, S1PTW = 0
    Data abort info:
       ISV = 0, ISS = 0x00000047
       CM = 0, WnR = 1
    swapper pgtable: 4k pages, 48-bit VAs, pgdp = 0000000028cc735c
    [ffff000012233c40] pgd=00000000bffff003, pud=00000000bfffe003,
    pmd=00000000ba8b8003, pte=0000000000000000
     Internal error: Oops: 96000047 [#2] PREEMPT SMP
     ...
     Call trace:
      __memcpy+0x74/0x180
      ufshcd_issue_devman_upiu_cmd+0x250/0x3c0
      ufshcd_exec_raw_upiu_cmd+0xfc/0x1a8
      ufs_bsg_request+0x178/0x3b0
      bsg_queue_rq+0xc0/0x118
      blk_mq_dispatch_rq_list+0xb0/0x538
      blk_mq_sched_dispatch_requests+0x18c/0x1d8
      __blk_mq_run_hw_queue+0xb4/0x118
      blk_mq_run_work_fn+0x28/0x38
      process_one_work+0x1ec/0x470
      worker_thread+0x48/0x458
      kthread+0x130/0x138
      ret_from_fork+0x10/0x1c
     Code: 540000ab a8c12027 a88120c7 a8c12027 (a88120c7)
     ---[ end trace 793e1eb5dff69f2d ]---
     note: kworker/0:2H[2054] exited with preempt_count 1
    
    This patch is to move "descriptor = NULL" down to below the label
    "out_unlock".
    
    Fixes: d44a5f98bb49b2(ufs: query descriptor API)
    Link: https://lore.kernel.org/r/20191112223436.27449-3-huobean@gmail.com
    Reviewed-by: Alim Akhtar <alim.akhtar@samsung.com>
    Reviewed-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Bean Huo <beanhuo@micron.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 44b82a3d1b8bb7b097eadf8325f098fa7320f6f2
Merge: 0f2b4ea c63ee29
Author: Greg Kroah-Hartman <gregkh@google.com>
Date:   Wed Nov 20 20:43:17 2019 +0100

    Merge 4.19.85 into android-4.19
    
    Changes in 4.19.85
    	KVM: x86: introduce is_pae_paging
    	MIPS: BCM63XX: fix switch core reset on BCM6368
    	scsi: core: Handle drivers which set sg_tablesize to zero
    	ax88172a: fix information leak on short answers
    	ipmr: Fix skb headroom in ipmr_get_route().
    	net: gemini: add missed free_netdev
    	net: usb: qmi_wwan: add support for Foxconn T77W968 LTE modules
    	slip: Fix memory leak in slip_open error path
    	ALSA: usb-audio: Fix missing error check at mixer resolution test
    	ALSA: usb-audio: not submit urb for stopped endpoint
    	ALSA: usb-audio: Fix incorrect NULL check in create_yamaha_midi_quirk()
    	ALSA: usb-audio: Fix incorrect size check for processing/extension units
    	Btrfs: fix log context list corruption after rename exchange operation
    	Input: ff-memless - kill timer in destroy()
    	Input: synaptics-rmi4 - fix video buffer size
    	Input: synaptics-rmi4 - disable the relative position IRQ in the F12 driver
    	Input: synaptics-rmi4 - do not consume more data than we have (F11, F12)
    	Input: synaptics-rmi4 - clear IRQ enables for F54
    	Input: synaptics-rmi4 - destroy F54 poller workqueue when removing
    	IB/hfi1: Ensure full Gen3 speed in a Gen4 system
    	IB/hfi1: Use a common pad buffer for 9B and 16B packets
    	i2c: acpi: Force bus speed to 400KHz if a Silead touchscreen is present
    	ecryptfs_lookup_interpose(): lower_dentry->d_inode is not stable
    	ecryptfs_lookup_interpose(): lower_dentry->d_parent is not stable either
    	net: ethernet: dwmac-sun8i: Use the correct function in exit path
    	iommu/vt-d: Fix QI_DEV_IOTLB_PFSID and QI_DEV_EIOTLB_PFSID macros
    	mm: mempolicy: fix the wrong return value and potential pages leak of mbind
    	mm: memcg: switch to css_tryget() in get_mem_cgroup_from_mm()
    	mm: hugetlb: switch to css_tryget() in hugetlb_cgroup_charge_cgroup()
    	mmc: sdhci-of-at91: fix quirk2 overwrite
    	iio: adc: max9611: explicitly cast gain_selectors
    	tee: optee: take DT status property into account
    	ath10k: fix kernel panic by moving pci flush after napi_disable
    	iio: dac: mcp4922: fix error handling in mcp4922_write_raw
    	clk: sunxi-ng: h6: fix PWM gate/reset offset
    	soundwire: Initialize completion for defer messages
    	soundwire: intel: Fix uninitialized adev deref
    	arm64: dts: allwinner: a64: Orange Pi Win: Fix SD card node
    	arm64: dts: allwinner: a64: Olinuxino: fix DRAM voltage
    	arm64: dts: allwinner: a64: NanoPi-A64: Fix DCDC1 voltage
    	ALSA: pcm: signedness bug in snd_pcm_plug_alloc()
    	soc/tegra: pmc: Fix pad voltage configuration for Tegra186
    	arm64: dts: tegra210-p2180: Correct sdmmc4 vqmmc-supply
    	y2038: make do_gettimeofday() and get_seconds() inline
    	ARM: dts: rcar: Correct SATA device sizes to 2 MiB
    	ARM: dts: at91/trivial: Fix USART1 definition for at91sam9g45
    	rtc: sysfs: fix NULL check in rtc_add_groups()
    	rtc: rv8803: fix the rv8803 id in the OF table
    	remoteproc/davinci: Use %zx for formating size_t
    	extcon: cht-wc: Return from default case to avoid warnings
    	cfg80211: Avoid regulatory restore when COUNTRY_IE_IGNORE is set
    	ALSA: seq: Do error checks at creating system ports
    	ath10k: skip resetting rx filter for WCN3990
    	ath9k: fix tx99 with monitor mode interface
    	wil6210: drop Rx multicast packets that are looped-back to STA
    	wil6210: set edma variables only for Talyn-MB devices
    	wil6210: prevent usage of tx ring 0 for eDMA
    	wil6210: fix invalid memory access for rx_buff_mgmt debugfs
    	ath10k: limit available channels via DT ieee80211-freq-limit
    	ice: Update request resource command to latest specification
    	ice: Prevent control queue operations during reset
    	gfs2: Don't set GFS2_RDF_UPTODATE when the lvb is updated
    	ice: Fix and update driver version string
    	ASoC: dapm: Don't fail creating new DAPM control on NULL pinctrl
    	ASoC: dpcm: Properly initialise hw->rate_max
    	ASoC: meson: axg-fifo: report interrupt request failure
    	ASoC: AMD: Change MCLK to 48Mhz
    	pinctrl: ingenic: Probe driver at subsys_initcall
    	MIPS: BCM47XX: Enable USB power on Netgear WNDR3400v3
    	ARM: dts: exynos: Use i2c-gpio for HDMI-DDC on Arndale
    	ARM: dts: exynos: Fix HDMI-HPD line handling on Arndale
    	ARM: dts: exynos: Fix sound in Snow-rev5 Chromebook
    	liquidio: fix race condition in instruction completion processing
    	arm64: dts: stratix10: i2c clock running out of spec
    	ARM: dts: exynos: Fix regulators configuration on Peach Pi/Pit Chromebooks
    	i40evf: Validate the number of queues a PF sends
    	i40e: use correct length for strncpy
    	i40evf: set IFF_UNICAST_FLT flag for the VF
    	i40e: Check and correct speed values for link on open
    	i40evf: Don't enable vlan stripping when rx offload is turned on
    	i40e: hold the rtnl lock on clearing interrupt scheme
    	i40evf: cancel workqueue sync for adminq when a VF is removed
    	i40e: Prevent deleting MAC address from VF when set by PF
    	IB/rxe: avoid back-to-back retries
    	IB/rxe: fixes for rdma read retry
    	iwlwifi: drop packets with bad status in CD
    	iwlwifi: don't WARN on trying to dump dead firmware
    	iwlwifi: mvm: avoid sending too many BARs
    	media: vicodec: fix out-of-range values when decoding
    	media: i2c: Fix pm_runtime_get_if_in_use() usage in sensor drivers
    	media: ov772x: Disable clk on error path
    	ARM: dts: pxa: fix the rtc controller
    	ARM: dts: pxa: fix power i2c base address
    	rtl8187: Fix warning generated when strncpy() destination length matches the sixe argument
    	mwifiex: do no submit URB in suspended state
    	mwifex: free rx_cmd skb in suspended state
    	brcmfmac: fix wrong strnchr usage
    	mt76: Fix comparisons with invalid hardware key index
    	soc: imx: gpc: fix PDN delay
    	ASoC: rsnd: ssi: Fix issue in dma data address assignment
    	net: hns3: Fix for multicast failure
    	net: hns3: Fix error of checking used vlan id
    	net: hns3: Fix for loopback selftest failed problem
    	net: hns3: Change the dst mac addr of loopback packet
    	net/mlx5: Fix atomic_mode enum values
    	net: phy: mscc: read 'vsc8531,vddmac' as an u32
    	net: phy: mscc: read 'vsc8531, edge-slowdown' as an u32
    	ARM: dts: meson8: fix the clock controller register size
    	ARM: dts: meson8b: fix the clock controller register size
    	mtd: rawnand: marvell: use regmap_update_bits() for syscon access
    	mtd: rawnand: fsl_ifc: check result of SRAM initialization
    	mtd: rawnand: fsl_ifc: fixup SRAM init for newer ctrl versions
    	mtd: rawnand: qcom: don't include dma-direct.h
    	IB/mlx5: Change TX affinity assignment in RoCE LAG mode
    	qxl: fix null-pointer crash during suspend
    	mac80211: fix saving a few HE values
    	cfg80211: validate wmm rule when setting
    	f2fs: avoid wrong decrypted data from disk
    	net: lan78xx: Bail out if lan78xx_get_endpoints fails
    	rtnetlink: move type calculation out of loop
    	ASoC: sgtl5000: avoid division by zero if lo_vag is zero
    	ath10k: avoid possible memory access violation
    	ARM: dts: exynos: Disable pull control for S5M8767 PMIC
    	ath10k: wmi: disable softirq's while calling ieee80211_rx
    	i2c: mediatek: Use DMA safe buffers for i2c transactions
    	IB/mlx5: Don't hold spin lock while checking device state
    	IB/ipoib: Ensure that MTU isn't less than minimum permitted
    	RDMA/core: Rate limit MAD error messages
    	RDMA/core: Follow correct unregister order between sysfs and cgroup
    	mips: txx9: fix iounmap related issue
    	udf: Fix crash during mount
    	ASoC: dapm: Avoid uninitialised variable warning
    	ASoC: Intel: hdac_hdmi: Limit sampling rates at dai creation
    	ata: Disable AHCI ALPM feature for Ampere Computing eMAG SATA
    	of: make PowerMac cache node search conditional on CONFIG_PPC_PMAC
    	ARM: dts: omap3-gta04: give spi_lcd node a label so that we can overwrite in other DTS files
    	ARM: dts: omap3-gta04: fixes for tvout / venc
    	ARM: dts: omap3-gta04: tvout: enable as display1 alias
    	ARM: dts: omap3-gta04: fix touchscreen tsc2007
    	ARM: dts: omap3-gta04: make NAND partitions compatible with recent U-Boot
    	ARM: dts: omap3-gta04: keep vpll2 always on
    	f2fs: submit bio after shutdown
    	failover: Fix error return code in net_failover_create
    	sched/debug: Explicitly cast sched_feat() to bool
    	sched/debug: Use symbolic names for task state constants
    	firmware: arm_scmi: use strlcpy to ensure NULL-terminated strings
    	arm64: dts: rockchip: Fix VCC5V0_HOST_EN on rk3399-sapphire
    	ARM: dts: exynos: Disable pull control for PMIC IRQ line on Artik5 board
    	usb: mtu3: disable vbus rise/fall interrupts of ltssm
    	dmaengine: dma-jz4780: Don't depend on MACH_JZ4780
    	dmaengine: dma-jz4780: Further residue status fix
    	EDAC, sb_edac: Return early on ADDRV bit and address type test
    	rtc: mt6397: fix possible race condition
    	rtc: pl030: fix possible race condition
    	ath9k: add back support for using active monitor interfaces for tx99
    	dmaengine: at_xdmac: remove a stray bottom half unlock
    	RDMA/hns: Fix an error code in hns_roce_v2_init_eq_table()
    	IB/hfi1: Missing return value in error path for user sdma
    	signal: Always ignore SIGKILL and SIGSTOP sent to the global init
    	signal: Properly deliver SIGILL from uprobes
    	signal: Properly deliver SIGSEGV from x86 uprobes
    	f2fs: fix memory leak of write_io in fill_super()
    	f2fs: fix memory leak of percpu counter in fill_super()
    	f2fs: fix setattr project check upon fssetxattr ioctl
    	scsi: qla2xxx: Use correct qpair for ABTS/CMD
    	scsi: qla2xxx: Fix iIDMA error
    	scsi: qla2xxx: Defer chip reset until target mode is enabled
    	scsi: qla2xxx: Terminate Plogi/PRLI if WWN is 0
    	scsi: qla2xxx: Fix deadlock between ATIO and HW lock
    	scsi: qla2xxx: Increase abort timeout value
    	scsi: qla2xxx: Check for Register disconnect
    	scsi: qla2xxx: Fix port speed display on chip reset
    	scsi: qla2xxx: Fix dropped srb resource.
    	scsi: qla2xxx: Fix duplicate switch's Nport ID entries
    	scsi: lpfc: Fix GFT_ID and PRLI logic for RSCN
    	scsi: lpfc: Correct invalid EQ doorbell write on if_type=6
    	scsi: lpfc: Fix errors in log messages.
    	scsi: sym53c8xx: fix NULL pointer dereference panic in sym_int_sir()
    	ARM: imx6: register pm_power_off handler if "fsl,pmic-stby-poweroff" is set
    	scsi: pm80xx: Corrected dma_unmap_sg() parameter
    	scsi: pm80xx: Fixed system hang issue during kexec boot
    	kprobes: Don't call BUG_ON() if there is a kprobe in use on free list
    	net: aquantia: fix hw_atl_utils_fw_upload_dwords
    	Drivers: hv: vmbus: Fix synic per-cpu context initialization
    	nvmem: core: return error code instead of NULL from nvmem_device_get
    	media: dt-bindings: adv748x: Fix decimal unit addresses
    	ALSA: hda: Fix implicit definition of pci_iomap() on SH
    	media: fix: media: pci: meye: validate offset to avoid arbitrary access
    	media: dvb: fix compat ioctl translation
    	net: bcmgenet: Fix speed selection for reverse MII
    	arm64: dts: meson: libretech: update board model
    	arm64: dts: meson-axg: use the proper compatible for ethmac
    	ALSA: intel8x0m: Register irq handler after register initializations
    	arm64: dts: renesas: salvator-common: adv748x: Override secondary addresses
    	arm64: dts: renesas: r8a77965: Attach the SYS-DMAC to the IPMMU
    	arm64: dts: renesas: r8a77965: Fix HS-USB compatible
    	arm64: dts: renesas: r8a77965: Fix clock/reset for usb2_phy1
    	pinctrl: at91-pio4: fix has_config check in atmel_pctl_dt_subnode_to_map()
    	llc: avoid blocking in llc_sap_close()
    	ARM: dts: qcom: ipq4019: fix cpu0's qcom,saw2 reg value
    	soc: qcom: geni: Don't ignore clk_round_rate() errors in geni_se_clk_tbl_get()
    	soc: qcom: geni: geni_se_clk_freq_match() should always accept multiples
    	soc: qcom: wcnss_ctrl: Avoid string overflow
    	soc: qcom: apr: Avoid string overflow
    	drivers: qcom: rpmh-rsc: clear wait_for_compl after use
    	arm64: dts: broadcom: Fix I2C and SPI bus warnings
    	ARM: dts: bcm: Fix SPI bus warnings
    	ARM: dts: aspeed: Fix I2C bus warnings
    	powerpc/vdso: Correct call frame information
    	ARM: dts: socfpga: Fix I2C bus unit-address error
    	ARM: dts: sunxi: Fix I2C bus warnings
    	pinctrl: at91: don't use the same irqchip with multiple gpiochips
    	ARM: dts: sun9i: Fix I2C bus warnings
    	android: binder: no outgoing transaction when thread todo has transaction
    	cxgb4: Fix endianness issue in t4_fwcache()
    	arm64: fix for bad_mode() handler to always result in panic
    	block, bfq: inject other-queue I/O into seeky idle queues on NCQ flash
    	blok, bfq: do not plug I/O if all queues are weight-raised
    	arm64: dts: meson: Fix erroneous SPI bus warnings
    	power: supply: ab8500_fg: silence uninitialized variable warnings
    	power: reset: at91-poweroff: do not procede if at91_shdwc is allocated
    	power: supply: max8998-charger: Fix platform data retrieval
    	component: fix loop condition to call unbind() if bind() fails
    	kernfs: Fix range checks in kernfs_get_target_path
    	ip_gre: fix parsing gre header in ipgre_err
    	scsi: ufshcd: Fix NULL pointer dereference for in ufshcd_init
    	ARM: dts: rockchip: Fix erroneous SPI bus dtc warnings on rk3036
    	arm64: dts: rockchip: Fix I2C bus unit-address error on rk3399-puma-haikou
    	ACPI / LPSS: Exclude I2C busses shared with PUNIT from pmc_atom_d3_mask
    	netfilter: nf_tables: avoid BUG_ON usage
    	ath9k: Fix a locking bug in ath9k_add_interface()
    	s390/qeth: uninstall IRQ handler on device removal
    	s390/qeth: invoke softirqs after napi_schedule()
    	media: vsp1: Fix vsp1_regs.h license header
    	media: vsp1: Fix YCbCr planar formats pitch calculation
    	media: ov2680: don't register the v4l2 subdevice before checking chip ID
    	PCI/ACPI: Correct error message for ASPM disabling
    	net: socionext: Fix two sleep-in-atomic-context bugs in ave_rxfifo_reset()
    	PCI: mediatek: Fix unchecked return value
    	ARM: dts: xilinx: Fix I2C and SPI bus warnings
    	serial: uartps: Fix suspend functionality
    	serial: samsung: Enable baud clock for UART reset procedure in resume
    	serial: mxs-auart: Fix potential infinite loop
    	tty: serial: qcom_geni_serial: Fix serial when not used as console
    	arm64: dts: ti: k3-am65: Change #address-cells and #size-cells of interconnect to 2
    	samples/bpf: fix a compilation failure
    	spi/bcm63xx-hsspi: keep pll clk enabled
    	spi: mediatek: Don't modify spi_transfer when transfer.
    	ASoC: rt5682: Fix the boost volume at the begining of playback
    	ipmi_si_pci: fix NULL device in ipmi_si error message
    	ipmi_si: fix potential integer overflow on large shift
    	ipmi:dmi: Ignore IPMI SMBIOS entries with a zero base address
    	ipmi: fix return value of ipmi_set_my_LUN
    	net: hns3: fix return type of ndo_start_xmit function
    	net: cavium: fix return type of ndo_start_xmit function
    	net: ibm: fix return type of ndo_start_xmit function
    	powerpc/iommu: Avoid derefence before pointer check
    	selftests/powerpc: Do not fail with reschedule
    	powerpc/64s/hash: Fix stab_rr off by one initialization
    	powerpc/pseries/memory-hotplug: Only update DT once per memory DLPAR request
    	powerpc/pseries: Disable CPU hotplug across migrations
    	powerpc: Fix duplicate const clang warning in user access code
    	RDMA/i40iw: Fix incorrect iterator type
    	ARM: dts: atmel: Fix I2C and SPI bus warnings
    	OPP: Protect dev_list with opp_table lock
    	of/unittest: Fix I2C bus unit-address error
    	libfdt: Ensure INT_MAX is defined in libfdt_env.h
    	power: supply: twl4030_charger: fix charging current out-of-bounds
    	power: supply: twl4030_charger: disable eoc interrupt on linear charge
    	net: mvpp2: fix the number of queues per cpu for PPv2.2
    	net: marvell: fix return type of ndo_start_xmit function
    	net: toshiba: fix return type of ndo_start_xmit function
    	net: xilinx: fix return type of ndo_start_xmit function
    	net: broadcom: fix return type of ndo_start_xmit function
    	net: amd: fix return type of ndo_start_xmit function
    	net: sun: fix return type of ndo_start_xmit function
    	net: hns3: Fix for setting speed for phy failed problem
    	net: hns3: Fix cmdq registers initialization issue for vf
    	net: hns3: Clear client pointer when initialize client failed or unintialize finished
    	net: hns3: Fix client initialize state issue when roce client initialize failed
    	net: hns3: Fix parameter type for q_id in hclge_tm_q_to_qs_map_cfg()
    	nfp: provide a better warning when ring allocation fails
    	usb: chipidea: imx: enable OTG overcurrent in case USB subsystem is already started
    	usb: chipidea: Fix otg event handler
    	usb: usbtmc: Fix ioctl USBTMC_IOCTL_ABORT_BULK_OUT
    	s390/zcrypt: enable AP bus scan without a valid default domain
    	s390/vdso: avoid 64-bit vdso mapping for compat tasks
    	s390/vdso: correct CFI annotations of vDSO functions
    	brcmfmac: increase buffer for obtaining firmware capabilities
    	brcmsmac: Use kvmalloc() for ucode allocations
    	mlxsw: spectrum: Init shaper for TCs 8..15
    	PCI: portdrv: Initialize service drivers directly
    	ARM: dts: am335x-evm: fix number of cpsw
    	ARM: dts: ti: Fix SPI and I2C bus warnings
    	f2fs: avoid infinite loop in f2fs_alloc_nid
    	f2fs: fix to recover inode's uid/gid during POR
    	ARM: dts: ux500: Correct SCU unit address
    	ARM: dts: ux500: Fix LCDA clock line muxing
    	ARM: dts: ste: Fix SPI controller node names
    	spi: pic32: Use proper enum in dmaengine_prep_slave_rg
    	crypto: chacha20 - Fix chacha20_block() keystream alignment (again)
    	cpufeature: avoid warning when compiling with clang
    	crypto: arm/crc32 - avoid warning when compiling with Clang
    	ARM: dts: marvell: Fix SPI and I2C bus warnings
    	x86/mce-inject: Reset injection struct after injection
    	ARM: dts: stm32: enable display on stm32mp157c-ev1 board
    	ARM: dts: clearfog: fix sdhci supply property name
    	ARM: dts: stm32: Fix SPI controller node names
    	bnx2x: Ignore bandwidth attention in single function mode
    	PCI/AER: Take reference on error devices
    	PCI/AER: Don't read upstream ports below fatal errors
    	PCI/ERR: Use slot reset if available
    	samples/bpf: fix compilation failure
    	net: phy: mdio-bcm-unimac: Allow configuring MDIO clock divider
    	net: micrel: fix return type of ndo_start_xmit function
    	net: freescale: fix return type of ndo_start_xmit function
    	x86/CPU: Use correct macros for Cyrix calls
    	x86/CPU: Change query logic so CPUID is enabled before testing
    	EDAC: Correct DIMM capacity unit symbol
    	MIPS: kexec: Relax memory restriction
    	arm64: dts: rockchip: Fix microSD in rk3399 sapphire board
    	mlxsw: Make MLXSW_SP1_FWREV_MINOR a hard requirement
    	media: imx: work around false-positive warning, again
    	media: pci: ivtv: Fix a sleep-in-atomic-context bug in ivtv_yuv_init()
    	media: au0828: Fix incorrect error messages
    	media: davinci: Fix implicit enum conversion warning
    	ARM: dts: rockchip: explicitly set vcc_sd0 pin to gpio on rk3188-radxarock
    	usb: gadget: uvc: configfs: Drop leaked references to config items
    	usb: gadget: uvc: configfs: Prevent format changes after linking header
    	usb: gadget: uvc: configfs: Sort frame intervals upon writing
    	ARM: dts: exynos: Correct audio subsystem parent clock on Peach Chromebooks
    	i2c: aspeed: fix invalid clock parameters for very large divisors
    	gpiolib: Fix gpio_direction_* for single direction GPIOs
    	ARM: at91: pm: call put_device instead of of_node_put in at91_pm_config_ws
    	phy: brcm-sata: allow PHY_BRCM_SATA driver to be built for DSL SoCs
    	phy: renesas: rcar-gen3-usb2: fix vbus_ctrl for role sysfs
    	phy: phy-twl4030-usb: fix denied runtime access
    	ARM: dts: imx6ull: update vdd_soc voltage for 900MHz operating point
    	usb: gadget: uvc: Factor out video USB request queueing
    	usb: gadget: uvc: Only halt video streaming endpoint in bulk mode
    	coresight: Use ERR_CAST instead of ERR_PTR
    	coresight: Fix handling of sinks
    	coresight: perf: Fix per cpu path management
    	coresight: perf: Disable trace path upon source error
    	coresight: tmc-etr: Handle driver mode specific ETR buffers
    	coresight: etm4x: Configure EL2 exception level when kernel is running in HYP
    	coresight: tmc: Fix byte-address alignment for RRP
    	coresight: dynamic-replicator: Handle multiple connections
    	slimbus: ngd: register ngd driver only once.
    	slimbus: ngd: return proper error code instead of zero
    	silmbus: ngd: register controller after power up.
    	misc: kgdbts: Fix restrict error
    	misc: genwqe: should return proper error value.
    	vmbus: keep pointer to ring buffer page
    	vfio/pci: Fix potential memory leak in vfio_msi_cap_len
    	vfio/pci: Mask buggy SR-IOV VF INTx support
    	iw_cxgb4: Use proper enumerated type in c4iw_bar2_addrs
    	scsi: libsas: always unregister the old device if going to discover new
    	f2fs: fix remount problem of option io_bits
    	phy: lantiq: Fix compile warning
    	arm64: dts: fsl: Fix I2C and SPI bus warnings
    	ARM: dts: imx51-zii-rdu1: Fix the rtc compatible string
    	arm64: tegra: I2C on Tegra194 is not compatible with Tegra114
    	ARM: dts: tegra30: fix xcvr-setup-use-fuses
    	ARM: dts: tegra20: restore address order
    	ARM: tegra: apalis_t30: fix mmc1 cmd pull-up
    	ARM: tegra: apalis_t30: fix mcp2515 can controller interrupt polarity
    	ARM: tegra: colibri_t30: fix mcp2515 can controller interrupt polarity
    	ARM: dts: paz00: fix wakeup gpio keycode
    	net: smsc: fix return type of ndo_start_xmit function
    	net: faraday: fix return type of ndo_start_xmit function
    	PCI/ERR: Run error recovery callbacks for all affected devices
    	f2fs: update i_size after DIO completion
    	f2fs: fix to recover inode's project id during POR
    	f2fs: mark inode dirty explicitly in recover_inode()
    	RDMA: Fix dependencies for rdma_user_mmap_io
    	EDAC: Raise the maximum number of memory controllers
    	ARM: dts: realview: Fix SPI controller node names
    	firmware: dell_rbu: Make payload memory uncachable
    	Bluetooth: hci_serdev: clear HCI_UART_PROTO_READY to avoid closing proto races
    	Bluetooth: L2CAP: Detect if remote is not able to use the whole MPS
    	Bluetooth: btrsi: fix bt tx timeout issue
    	x86/hyperv: Suppress "PCI: Fatal: No config space access function found"
    	crypto: s5p-sss: Fix race in error handling
    	crypto: s5p-sss: Fix Fix argument list alignment
    	crypto: fix a memory leak in rsa-kcs1pad's encryption mode
    	iwlwifi: dbg: don't crash if the firmware crashes in the middle of a debug dump
    	iwlwifi: fix non_shared_ant for 22000 devices
    	iwlwifi: pcie: read correct prph address for newer devices
    	iwlwifi: api: annotate compressed BA notif array sizes
    	iwlwifi: pcie: gen2: build A-MSDU only for GSO
    	iwlwifi: pcie: fit reclaim msg to MAX_MSG_LEN
    	iwlwifi: mvm: use correct FIFO length
    	iwlwifi: mvm: Allow TKIP for AP mode
    	scsi: NCR5380: Clear all unissued commands on host reset
    	scsi: NCR5380: Have NCR5380_select() return a bool
    	scsi: NCR5380: Withhold disconnect privilege for REQUEST SENSE
    	scsi: NCR5380: Use DRIVER_SENSE to indicate valid sense data
    	scsi: NCR5380: Check for invalid reselection target
    	scsi: NCR5380: Don't clear busy flag when abort fails
    	scsi: NCR5380: Don't call dsprintk() following reselection interrupt
    	scsi: NCR5380: Handle BUS FREE during reselection
    	scsi: NCR5380: Check for bus reset
    	arm64: dts: amd: Fix SPI bus warnings
    	arm64: dts: lg: Fix SPI controller node names
    	ARM: dts: lpc32xx: Fix SPI controller node names
    	rtc: isl1208: avoid possible sysfs race
    	rtc: tx4939: fixup nvmem name and register size
    	rtc: armada38x: fix possible race condition
    	netfilter: masquerade: don't flush all conntracks if only one address deleted on device
    	usb: xhci-mtk: fix ISOC error when interval is zero
    	usb: usbtmc: uninitialized symbol 'actual' in usbtmc_ioctl_clear
    	fuse: use READ_ONCE on congestion_threshold and max_background
    	IB/iser: Fix possible NULL deref at iser_inv_desc()
    	media: ov2680: fix null dereference at power on
    	s390/vdso: correct vdso mapping for compat tasks
    	net: phy: mdio-bcm-unimac: mark PM functions as __maybe_unused
    	memfd: Use radix_tree_deref_slot_protected to avoid the warning.
    	slcan: Fix memory leak in error path
    	Linux 4.19.85
    
    Signed-off-by: Greg Kroah-Hartman <gregkh@google.com>
    Change-Id: I0857e66ee2cdd412cd736548a1395bf764a8ab0a

commit 0592c2178e3cce76e839365eed67e1481d618ff0
Author: Vivek Gautam <vivek.gautam@codeaurora.org>
Date:   Tue Aug 7 23:17:39 2018 +0530

    scsi: ufshcd: Fix NULL pointer dereference for in ufshcd_init
    
    [ Upstream commit eebcc19646489b68399ce7b35d9c38eb9f4ec40f ]
    
    Error paths in ufshcd_init() ufshcd_hba_exit() killed clk_scaling workqueue
    when the workqueue is actually created quite late in ufshcd_init().  So, we
    end up getting NULL pointer dereference in such error paths.  Fix this by
    moving clk_scaling initialization and kill codes to two separate methods, and
    call them at required places.
    
    Fixes: 401f1e4490ee ("scsi: ufs: don't suspend clock scaling during clock
    gating")
    
    Signed-off-by: Vivek Gautam <vivek.gautam@codeaurora.org>
    Cc: Bjorn Andersson <bjorn.andersson@linaro.org>
    Cc: Subhash Jadavani <subhashj@codeaurora.org>
    Cc: Matthias Kaehlcke <mka@chromium.org>
    Cc: Evan Green <evgreen@chromium.org>
    Cc: Martin K. Petersen <martin.petersen@oracle.com>
    Reviewed-by: Evan Green <evgreen@chromium.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3a468438a9daa58e8ba315bdbe0ee3b6e108e923
Author: Eric Biggers <ebiggers@google.com>
Date:   Wed Nov 13 14:17:25 2019 -0800

    ANDROID: scsi: ufs-qcom: Enable BROKEN_CRYPTO quirk flag
    
    DragonBoard 845c is currently crashing at boot time because the device
    tree doesn't include the UFS crypto registers.  There are likely to be
    other issues with the crypto support that will need to be addressed too.
    
    Disable crypto support in ufs-qcom until we can get it working properly.
    
    Bug: 137270441
    Change-Id: I54e32fa14431bbbe39f054cda20c646164c687f7
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Satya Tangirala <satyat@google.com>

commit 6f915cf27d24a96c882a17b161517a5200ac62a1
Author: John Stultz <john.stultz@linaro.org>
Date:   Fri Nov 8 04:44:49 2019 +0000

    ANDROID: scsi: ufs-hisi: Enable BROKEN_CRYPTO quirk flag
    
    HiKey960 doesn't play well with the inline crypto logic, and
    seems to deviate from the UFS standard.
    
    Eric Biggers noted:
    "It declares that it has 32 crypto configurations (a.k.a.
    keyslots), starting at offset 1280 from the start of the UFS
    registers.  Per the UFS standard, each crypto configuration is
    128 bytes, so that means they go until offset 5376.
    
    However, the device tree node for the UFS host controller (in
    hi3660.dtsi) only declares 4096 bytes for the UFS standard
    registers, and then the next 4096 physical bytes are declared to
    be vendor-specific UFS registers.  The ufs-hisi driver already
    uses these vendor-specific registers to do things like reset the
    UFS controller and configure the clocks.  But if we follow the
    UFS standard, the very same memory addresses have a different
    meaning.
    
    Also, even if I hardcode the number of keyslots to 22 so they fit
    in the first 4096 bytes, then there is either an SError interrupt
    while programming keyslot 0, or CRYPTO_GENERAL_ERROR is reported
    from the UFS request."
    
    So until we can understand the hardware better disable inline
    crypto using the quirks flag in the driver.
    
    Bug: 137270441
    Change-Id: I69b1c10018bae9ac8ed2a32b02d253afbff64c34
    Signed-off-by: John Stultz <john.stultz@linaro.org>
    Signed-off-by: Satya Tangirala <satyat@google.com>

commit 86739e75ac5fbb86d14947ac8e544db9a84996ed
Author: John Stultz <john.stultz@linaro.org>
Date:   Fri Nov 8 04:42:58 2019 +0000

    ANDROID: scsi: ufs: Add quirk bit for controllers that don't play well with inline crypto
    
    A number of devices (hikey960 and db845c at least) don't work
    well with the inline crypto enablement, causing them to crash in
    early boot.
    
    In order to allow those boards to continue booting, add a
    BROKEN_CRYPTO quirk flag that the drivers can enable until we
    sort out how/if they can be fixed.
    
    Bug: 137270441
    Change-Id: I9f2c3d75412e0aaa22fe6e7c9929cd18b1efa9ba
    Signed-off-by: John Stultz <john.stultz@linaro.org>
    Signed-off-by: Satya Tangirala <satyat@google.com>

commit d2e05e75f6421fd8491fdcf11eddeda6bad5fa9f
Author: Satya Tangirala <satyat@google.com>
Date:   Thu Nov 7 21:16:46 2019 -0800

    ANDROID: scsi: ufs: UFS init should not require inline crypto
    
    UFS initialization should carry on even if inline crypto support is
    absent, instead of just erroring out.
    
    Bug: 137270441
    Change-Id: I4a508640f803dc8aaff1033b5e1d5c229a0b03de
    Signed-off-by: Satya Tangirala <satyat@google.com>

commit 484f18732099a261b4288c74bfca43df32ae54f0
Author: Satya Tangirala <satyat@google.com>
Date:   Wed May 8 03:44:29 2019 -0700

    ANDROID: scsi: ufs: UFS crypto variant operations API
    
    Introduce UFS crypto variant operations to handle quirks in individual
    UFS inline encryption hardware.
    
    We also expose a default implementation for crypto operations that
    conforms to the UFSHCI v2.1 specification, so that any user of crypto
    variant operations can fall back on the default implementation
    whenever there aren't any special quirks to handle.
    
    Bug: 137270441
    Change-Id: Id3a3c379eb1a39214d324d6d2d9f7d650d9c55cc
    Signed-off-by: Satya Tangirala <satyat@google.com>

commit a502a18f9d5b68803480cf0b8f6680bc419c5aa8
Author: Satya Tangirala <satyat@google.com>
Date:   Thu Oct 24 14:44:28 2019 -0700

    BACKPORT: FROMLIST: scsi: ufs: Add inline encryption support to UFS
    
    Wire up ufshcd.c with the UFS Crypto API, the block layer inline
    encryption additions and the keyslot manager.
    
    Bug: 137270441
    Test: tested as series; see I26aac0ac7845a9064f28bb1421eb2522828a6dec
    Change-Id: I274282d9209932156ce806c3d656470bd040f5b3
    Signed-off-by: Satya Tangirala <satyat@google.com>
    Link: https://patchwork.kernel.org/patch/11214753/

commit eedb625131ca2f07bec492ff92c382494a2d74c8
Author: Satya Tangirala <satyat@google.com>
Date:   Thu Oct 24 14:44:27 2019 -0700

    BACKPORT: FROMLIST: scsi: ufs: UFS crypto API
    
    Introduce functions to manipulate UFS inline encryption hardware
    in line with the JEDEC UFSHCI v2.1 specification and to work with the
    block keyslot manager.
    
    Bug: 137270441
    Test: tested as series; see I26aac0ac7845a9064f28bb1421eb2522828a6dec
    Change-Id: I4c6ba30f30eaea83da6822381ae2aa85b40e7b90
    Signed-off-by: Satya Tangirala <satyat@google.com>
    Link: https://patchwork.kernel.org/patch/11214745/

commit e00aafeeaaeb15fc6a507944655ad69d9c1d3827
Author: Satya Tangirala <satyat@google.com>
Date:   Thu Oct 24 14:44:26 2019 -0700

    BACKPORT: FROMLIST: scsi: ufs: UFS driver v2.1 spec crypto additions
    
    Add the crypto registers and structs defined in v2.1 of the JEDEC UFSHCI
    specification in preparation to add support for inline encryption to
    UFS.
    
    Bug: 137270441
    Test: tested as series; see I26aac0ac7845a9064f28bb1421eb2522828a6dec
    Change-Id: I640812448f9b7f25dc5b4927f143c89b02529edb
    Signed-off-by: Satya Tangirala <satyat@google.com>
    Link: https://patchwork.kernel.org/patch/11214737/

commit fd8c493dda14541dadc6eb17773a4226e0eeae14
Author: Stanley Chu <stanley.chu@mediatek.com>
Date:   Wed Sep 11 17:21:28 2019 +0800

    UPSTREAM: scsi: ufs: override auto suspend tunables for ufs
    
    (Upstream commit 49615ba144a0929c725d08f0d3ba8494c8b77404)
    
    Rework from previous work by:
    Sujit Reddy Thumma <sthumma@codeaurora.org>
    
    Override auto suspend tunables for UFS device LUNs during
    initialization so as to efficiently manage background operations
    and the power consumption.
    
    Change-Id: I4e64370dc87c9398bd2bd73cc744f8e19c38edd4
    Link: https://lore.kernel.org/r/1568649411-5127-3-git-send-email-stanley.chu@mediatek.com
    Reviewed-by: Avri Altman <avri.altman@wdc.com>
    Reviewed-by: Bean Huo <beanhuo@micron.com>
    Signed-off-by: Stanley Chu <stanley.chu@mediatek.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit c6d91bd3fa35fb85ffbcaeb6f6ff332da13f8923
Author: Stanley Chu <stanley.chu@mediatek.com>
Date:   Wed Sep 18 12:20:38 2019 +0800

    scsi: ufs: skip shutdown if hba is not powered
    
    [ Upstream commit f51913eef23f74c3bd07899dc7f1ed6df9e521d8 ]
    
    In some cases, hba may go through shutdown flow without successful
    initialization and then make system hang.
    
    For example, if ufshcd_change_power_mode() gets error and leads to
    ufshcd_hba_exit() to release resources of the host, future shutdown flow
    may hang the system since the host register will be accessed in unpowered
    state.
    
    To solve this issue, simply add checking to skip shutdown for above kind of
    situation.
    
    Link: https://lore.kernel.org/r/1568780438-28753-1-git-send-email-stanley.chu@mediatek.com
    Signed-off-by: Stanley Chu <stanley.chu@mediatek.com>
    Acked-by: Bean Huo <beanhuo@micron.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c0548e0a8bc5f5b81b6d4ada110a70de62eb4ed1
Author: Stanley Chu <stanley.chu@mediatek.com>
Date:   Mon Sep 23 17:00:12 2019 +0800

    BACKPORT: scsi: ufs: print uic error history in time order
    
    Now uic errors are printed out of time order.
    
    Simply make it more readable by printing logs
    in time order, and printing "No record" if history
    is empty.
    
    Change-Id: I90da7a70dccc90e818ebc7aad31a33c6c5f2313c
    Signed-off-by: Stanley Chu <stanley.chu@mediatek.com>
    CR-Id: ALPS04797325

commit 11171adf53211071897c5bab8ce26568196d2aaa
Author: Peter Wang <peter.wang@mediatek.com>
Date:   Wed Sep 11 19:00:53 2019 +0800

    scsi: ufs-mediatek: ref-clk half hw mode patch
    
    Half hw mode can only turn on, cannot turn off.
    So, we can keep xoufs_req_s low to release spm resource.
    
    Change-Id: I429b0b9b4955f64f0d55cb9094ab745e86d28ab3
    Signed-off-by: Peter Wang <peter.wang@mediatek.com>
    CR-Id: ALPS04689783
    Feature: UFS Booting

commit e9c6e60aed6d5fd27506ad7cb193e7ad224307d4
Merge: 0b821c5 1fd5770
Author: skylake.huang <skylake.huang@mediatek.com>
Date:   Wed Sep 11 15:06:31 2019 +0800

    Merge: Merge branch android-4.19 into generic-trunk
    
    [Detail]
    	Parent: bf707e4df1b392551f6b709410be00e9780f59d5
    		Merge 4.19.68 into android-4.19
    	Start: 4dd2ad4a15738c3ce77c5095195ceb88b637f421
    		ANDROID: gki_defconfig: set CONFIG_NR_CPUS=32 (x86_64)
    	Target: 1fd5770cd3c9152d5ca91b41d8f6dc934f74375d
    		Merge 4.19.71 into android-4.19
    
    Feature: Others
    Change-Id: I0a7ff82cb200ef08a021415a973af1164f175ba0
    CR-Id: ALPS04786275
    Signed-off-by: Breeze.Li <breeze.li@mediatek.com>

commit eba86f0a909f2a8b022a0afb5e3fb8aaefbc7c26
Author: Pedro Sousa <sousa@synopsys.com>
Date:   Thu Apr 18 21:13:34 2019 +0200

    scsi: ufs: Fix RX_TERMINATION_FORCE_ENABLE define value
    
    [ Upstream commit ebcb8f8508c5edf428f52525cec74d28edea7bcb ]
    
    Fix RX_TERMINATION_FORCE_ENABLE define value from 0x0089 to 0x00A9
    according to MIPI Alliance MPHY specification.
    
    Fixes: e785060ea3a1 ("ufs: definitions for phy interface")
    Signed-off-by: Pedro Sousa <sousa@synopsys.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ef2fd705e2b6211e5ddf501dce8b17d2c872f081
Author: Peter Wang <peter.wang@mediatek.com>
Date:   Wed Aug 28 16:17:55 2019 +0800

    scsi: ufs-mediatek: ref-clk control mode
    
    MediaTek UFS host has different way to control ref-clk.
    With this patch to choose different ref-clk control flow.
    
    Change-Id: I60ac72af3348c4b68919df9c9edb0844b4f09b06
    Signed-off-by: Peter Wang <peter.wang@mediatek.com>
    CR-Id: ALPS04753453
    Feature: UFS Booting

commit 9cfde1d524162187a4e741afd2d98570eaaa7241
Author: Stanley Chu <stanley.chu@mediatek.com>
Date:   Wed Aug 28 09:38:01 2019 +0800

    Revert "UPSTREAM: scsi: ufs: Remove unused min_uA field in struct ufs_vreg"
    
    Revert this commit for GKI since ABI shall not be changed in
    current kernel version.
    
    Shall have no risk since the reverted patch was aimed to
    remove an unused member in a struct.
    
    Change-Id: Idc7bbc0118daa3048d213dc4059e2cc5971e259c
    Signed-off-by: Stanley Chu <stanley.chu@mediatek.com>
    CR-Id: ALPS04358218

commit 0d589f82a01fe39ab63a9a7772e47d2418fa7f51
Author: Peter Wang <peter.wang@mediatek.com>
Date:   Thu Aug 1 15:53:16 2019 +0800

    scsi: ufs-mediatek: introduce ref-clk control
    
    MediaTek UFS host needs to use specific register
    to control ref-clk on/off.
    
    Change-Id: I065a0fdad507a4a9a94f8c87a8e05dbe1eb9d547
    Signed-off-by: Peter Wang <peter.wang@mediatek.com>
    CR-Id: ALPS04689783
    Feature: UFS Booting

commit 9f9add9912c92b70f1101d20520018e27e0872e8
Merge: 4036a0a 5b2dde5
Author: chienwei.chang <chienwei.chang@mediatek.com>
Date:   Wed Jul 10 13:05:51 2019 +0800

    Merge: Merge branch android-4.19 into generic-trunk
    
    [Detail]
    	Target: 65f49f031996caafeb5e25fe3a1911a6800c8dd6
    		Merge 4.19.55 into android-4.19
    	Start:  c493ead38adba4da664fb585176e369f06eab205
    		tracing: Silence GCC 9 array bounds warning
    	Target: 5b2dde5e0bc02c86919c441508960db670a01f4f
    		Merge 4.19.57 into android-4.19
    
    Feature: Others
    Change-Id: I04016b1627ff88c84c4272575c81d843983d3acf
    CR-Id: ALPS04696862
    Signed-off-by: Breeze.Li <breeze.li@mediatek.com>

commit 7988b1efb6d82d1a5b72d7b579d8e7dc02cad605
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Wed Mar 20 11:03:40 2019 -0700

    UPSTREAM: scsi: ufs-mediatek: Avoid using ret uninitialized in ufs_mtk_setup_clocks
    
    When building with -Wsometimes-uninitialized, Clang warns:
    
    drivers/scsi/ufs/ufs-mediatek.c:112:7: warning: variable 'ret' is used
    uninitialized whenever 'if' condition is false
    [-Wsometimes-uninitialized]
                    if (on)
                        ^~
    drivers/scsi/ufs/ufs-mediatek.c:120:9: note: uninitialized use occurs
    here
            return ret;
                   ^~~
    drivers/scsi/ufs/ufs-mediatek.c:112:3: note: remove the 'if' if its
    condition is always true
                    if (on)
                    ^~~~~~~
    drivers/scsi/ufs/ufs-mediatek.c:108:7: warning: variable 'ret' is used
    uninitialized whenever 'if' condition is false
    [-Wsometimes-uninitialized]
                    if (!on)
                        ^~~
    drivers/scsi/ufs/ufs-mediatek.c:120:9: note: uninitialized use occurs
    here
            return ret;
                   ^~~
    drivers/scsi/ufs/ufs-mediatek.c:108:3: note: remove the 'if' if its
    condition is always true
                    if (!on)
                    ^~~~~~~~
    drivers/scsi/ufs/ufs-mediatek.c:96:9: note: initialize the variable
    'ret' to silence this warning
            int ret;
                   ^
                    = 0
    2 warnings generated.
    
    Remove the default case and initialize ret to -EINVAL to properly fix
    this warning.
    
    Change-Id: I268f97dc4f05fb2f39d8f876702cb12ab7017799
    Fixes: ddd90623ce26 ("scsi: ufs-mediatek: Add UFS support for Mediatek SoC chips")
    Link: https://github.com/ClangBuiltLinux/linux/issues/426
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Reviewed-by: Stanley Chu <stanley.chu@mediatek.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    CR-Id: ALPS04358218

commit 04ceb1348973c36f30edc6d96b6b10183aa9cb0c
Author: Avri Altman <avri.altman@wdc.com>
Date:   Tue May 21 11:24:22 2019 +0300

    scsi: ufs: Check that space was properly alloced in copy_query_response
    
    [ Upstream commit 1c90836f70f9a8ef7b7ad9e1fdd8961903e6ced6 ]
    
    struct ufs_dev_cmd is the main container that supports device management
    commands. In the case of a read descriptor request, we assume that the
    proper space was allocated in dev_cmd to hold the returning descriptor.
    
    This is no longer true, as there are flows that doesn't use dev_cmd for
    device management requests, and was wrong in the first place.
    
    Fixes: d44a5f98bb49 (ufs: query descriptor API)
    Signed-off-by: Avri Altman <avri.altman@wdc.com>
    Reviewed-by: Alim Akhtar <alim.akhtar@samsung.com>
    Acked-by: Bean Huo <beanhuo@micron.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0746b2f501428d01fc45e36023aaf58c43b18650
Author: Stanley Chu <stanley.chu@mediatek.com>
Date:   Wed Jun 12 23:19:05 2019 +0800

    scsi: ufs: Avoid runtime suspend possibly being blocked forever
    
    commit 24e2e7a19f7e4b83d0d5189040d997bce3596473 upstream.
    
    UFS runtime suspend can be triggered after pm_runtime_enable() is invoked
    in ufshcd_pltfrm_init(). However if the first runtime suspend is triggered
    before binding ufs_hba structure to ufs device structure via
    platform_set_drvdata(), then UFS runtime suspend will be no longer
    triggered in the future because its dev->power.runtime_error was set in the
    first triggering and does not have any chance to be cleared.
    
    To be more clear, dev->power.runtime_error is set if hba is NULL in
    ufshcd_runtime_suspend() which returns -EINVAL to rpm_callback() where
    dev->power.runtime_error is set as -EINVAL. In this case, any future
    rpm_suspend() for UFS device fails because rpm_check_suspend_allowed()
    fails due to non-zero
    dev->power.runtime_error.
    
    To resolve this issue, make sure the first UFS runtime suspend get valid
    "hba" in ufshcd_runtime_suspend(): Enable UFS runtime PM only after hba is
    successfully bound to UFS device structure.
    
    Fixes: 62694735ca95 ([SCSI] ufs: Add runtime PM support for UFS host controller driver)
    Cc: stable@vger.kernel.org
    Signed-off-by: Stanley Chu <stanley.chu@mediatek.com>
    Reviewed-by: Avri Altman <avri.altman@wdc.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3b17ee9b05149db6274bcdb3499e5bc3151bb99c
Author: Stanley Chu <stanley.chu@mediatek.com>
Date:   Wed Jun 12 12:29:41 2019 +0800

    UPSTREAM: scsi: ufs: Avoid runtime suspend possibly being blocked forever
    
    UFS runtime suspend can be triggered after pm_runtime_enable()
    is invoked in ufshcd_pltfrm_init(). However if the first runtime
    suspend is triggered before binding ufs_hba structure to ufs
    device structure via platform_set_drvdata(), then UFS runtime
    suspend will be no longer triggered in the future because its
    dev->power.runtime_error was set in the first triggering and does
    not have any chance to be cleared.
    
    To be more clear, dev->power.runtime_error is set if hba is NULL
    in ufshcd_runtime_suspend() which returns -EINVAL to rpm_callback()
    where dev->power.runtime_error is set as -EINVAL. In this case, any
    future rpm_suspend() for UFS device fails because
    rpm_check_suspend_allowed() fails due to non-zero
    dev->power.runtime_error.
    
    To resolve this issue, make sure the first UFS runtime suspend
    get valid "hba" in ufshcd_runtime_suspend(): Enable UFS runtime PM
    only after hba is successfully bound to UFS device structure.
    
    Change-Id: I4686defe504f67eb62afc69e547ca3df6d6eee4a
    Fixes: 62694735ca95 ([SCSI] ufs: Add runtime PM support for UFS host controller driver)
    Cc: stable@vger.kernel.org
    Signed-off-by: Stanley Chu <stanley.chu@mediatek.com>
    Reviewed-by: Avri Altman <avri.altman@wdc.com>
    CR-Id: ALPS04358218

commit 6630bdbacba473e771ba7dba9cc9f34095101a6e
Author: Stanley Chu <stanley.chu@mediatek.com>
Date:   Tue Jun 11 17:23:05 2019 +0800

    FROMLIST: scsi: ufs: Override auto suspend tunables for ufs
    
    From: Sujit Reddy Thumma <sthumma@codeaurora.org>
    
    Override auto suspend tunables for UFS device LUNs during
    initialization so as to efficiently manage background operations
    and the power consumption.
    
    Change-Id: Ibeb1cb2144b7280e515be2d205b5dfba86a5760e
    Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>
    Signed-off-by: Gilad Broner <gbroner@codeaurora.org>
    Signed-off-by: Asutosh Das <asutoshd@codeaurora.org>
    Signed-off-by: Stanley Chu <stanley.chu@mediatek.com>
    CR-Id: ALPS04358218

commit f4b8652b9b574e3d84e043cc598a17582352e382
Merge: f5334fc 3f534fa
Author: chienwei.chang <chienwei.chang@mediatek.com>
Date:   Wed Jun 12 13:46:59 2019 +0800

    Merge: Merge branch android-4.19 into generic-trunk
    
    [Detail]
    	Target: 50f91435a27a9f7fd9c7c8f98515b8572c0ae03f
    		Merge 4.19.45 into android-4.19
    	Start:  dc4f4046b76e9e6998dac44737c421d54c60353d
    		Revert ANDROID: cuttlefish 4.19: enable CONFIG_CRYPTO_AES_NI_INTEL=y
    	Target: 3f534fa2fc2072d65aaf7752b8647419330bd2e0
    		Merge 4.19.49 into android-4.19
    
    Feature: Others
    Change-Id: Ib99812dd5862511a22d8559efef65c7283d8a0a1
    CR-Id: ALPS04659443
    Signed-off-by: Breeze.Li <breeze.li@mediatek.com>

commit aeea87865aa74eb3931ebe6f77c57ff484e95528
Author: Kangjie Lu <kjlu@umn.edu>
Date:   Fri Mar 15 02:11:56 2019 -0500

    scsi: ufs: fix a missing check of devm_reset_control_get
    
    [ Upstream commit 63a06181d7ce169d09843645c50fea1901bc9f0a ]
    
    devm_reset_control_get could fail, so the fix checks its return value and
    passes the error code upstream in case it fails.
    
    Signed-off-by: Kangjie Lu <kjlu@umn.edu>
    Acked-by: Avri Altman <avri.altman@wdc.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cb5946e5c86ae12d309c8d58bee3d3edc120cf88
Author: Stanley Chu <stanley.chu@mediatek.com>
Date:   Thu Mar 28 17:16:24 2019 +0800

    scsi: ufs: Avoid configuring regulator with undefined voltage range
    
    [ Upstream commit 3b141e8cfd54ba3e5c610717295b2a02aab26a05 ]
    
    For regulators used by UFS, vcc, vccq and vccq2 will have voltage range
    initialized by ufshcd_populate_vreg(), however other regulators may have
    undefined voltage range if dt-bindings have no such definition.
    
    In above undefined case, both "min_uV" and "max_uV" fields in ufs_vreg
    struct will be zero values and these values will be configured on
    regulators in different power modes.
    
    Currently this may have no harm if both "min_uV" and "max_uV" always keep
    "zero values" because regulator_set_voltage() will always bypass such
    invalid values and return "good" results.
    
    However improper values shall be fixed to avoid potential bugs.  Simply
    bypass voltage configuration if voltage range is not defined.
    
    Signed-off-by: Stanley Chu <stanley.chu@mediatek.com>
    Reviewed-by: Avri Altman <avri.altman@wdc.com>
    Acked-by: Alim Akhtar <alim.akhtar@samsung.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 31318d4ae3ae7d90fdd7bfda7775dff70092e675
Author: Stanley Chu <stanley.chu@mediatek.com>
Date:   Thu Mar 28 17:16:25 2019 +0800

    scsi: ufs: Fix regulator load and icc-level configuration
    
    [ Upstream commit 0487fff76632ec023d394a05b82e87a971db8c03 ]
    
    Currently if a regulator has "<name>-fixed-regulator" property in device
    tree, it will skip current limit initialization.  This lead to a zero
    "max_uA" value in struct ufs_vreg.
    
    However, "regulator_set_load" operation shall be required on regulators
    which have valid current limits, otherwise a zero "max_uA" set by
    "regulator_set_load" may cause unexpected behavior when this regulator is
    enabled or set as high power mode.
    
    Similarly, in device's icc_level configuration flow, the target icc_level
    shall be updated if regulator also has valid current limit, otherwise a
    wrong icc_level will be calculated by zero "max_uA" and thus causes
    unexpected results after it is written to device.
    
    Signed-off-by: Stanley Chu <stanley.chu@mediatek.com>
    Reviewed-by: Avri Altman <avri.altman@wdc.com>
    Acked-by: Alim Akhtar <alim.akhtar@samsung.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2281011be05fe2444517622efbf6a99485f04607
Merge: 5654cd5 0b63cd6
Author: chienwei.chang <chienwei.chang@mediatek.com>
Date:   Wed May 22 16:18:56 2019 +0800

    Merge: Merge branch android-4.19 into generic-trunk
    
    [Detail]
    	Parent: 6e0411bdc2f602455fa9e9723be67650e72119d4
    		Merge 4.19.21 into android-4.19
    	Start:  9080fd457bbb2e5921d9cc6a65979d0810dbefd5
    		ANDROID: Move from clang r346389b to r349610.
    	Target: 0b63cd6d63c004d7147c015a4edbbcd4b1fc7e58
    		Merge 4.19.44 into android-4.19
    
    Feature: Others
    Change-Id: Iee93a0d60ea257f0af1194dbedc6556df584db75
    CR-Id: ALPS04522276
    Signed-off-by: Breeze.Li <breeze.li@mediatek.com>

commit d3f59cc0cbec750f80fc88a9614680e7de015600
Author: Stanley Chu <stanley.chu@mediatek.com>
Date:   Fri Mar 15 16:38:32 2019 +0800

    UPSTREAM: scsi: ufs: Remove "name-fixed-regulator" device tree property
    
    "<name>-fixed-regulator" device tree property can be
    safely removed because below things are fixed or resolved,
    
    1. "<name>-max-microamp" becomes optional property: Undefined
       "<name>-max-microamp" will not cause initialization fail if
       "<name>-fixed-regulator" is not defined.
    
    2. Current switching operation (by regulator_set_load) now has rules:
       Regulators will have undefined current limit if
       "<name>-fixed-regulator" is not defined. But this is safe because
       only regulator which has configured current limit from
       "<name>-max-microamp" property is allowed to change its load.
    
    Although "<name>-fixed-regulator" is not used in any dt-bindings
    in tree, this patch is still safe for regulators already defined
    "<name>-fixed-regulator". To be more clear, if a regulator defined
    "<name>-fixed-regulator" before, the behavior difference after
    this patch is,
    
    1. "<name>-max-microamp":
       If a regulator defined "<name>-fixed-regulator", it is not necessary
       to define "<name>-max-microamp" property in device tree and it is
       expected to have an undefined current limit, i.e., "max_uA" field
       is zero in struct ufs_vreg. This is exactly the same as patched.
    
    2. "vcc-supply-1p8" or volatge range settings:
       * For vcc, vccq or vccq2, these three regulators shall not define
         "<name>-fixed-regulator" because defining it will lead to
         undefined voltage range and thus voltage switching will be
         unexpected.
       * For other regulators with undefined voltage range, voltage range
         will be still undefined after patched.
    
    Therefore this patch is safe for all existed regulators with
    "<name>-fixed-regulator" property already defined.
    
    Change-Id: I980825cbde381420a8c55e59b9e9dde1a034e1b9
    Signed-off-by: Stanley Chu <stanley.chu@mediatek.com>
    Reviewed-by: Avri Altman <avri.altman@wdc.com>
    Acked-by: Alim Akhtar <alim.akhtar@samsung.com>
    CR-Id: ALPS04358218

commit 92b7f059799babf72f1c620ed60e58bc234bdd10
Author: Stanley Chu <stanley.chu@mediatek.com>
Date:   Fri Mar 15 16:26:27 2019 +0800

    UPSTREAM: scsi: ufs: Change "name-max-microamp" to non-mandatory property
    
    In dt-bindings for ufs, "<name>-max-microamp" property indicates
    current limit and is mandatory if "<name>-fixed-regulator" is not
    defined on a specified regulator.
    
    However, in some platforms, regulators without "<name>-fixed-regulator"
    property may not need to define their current limit because they may
    want to define voltage range only for proper voltage switching in
    different power modes, especially for vcc, vccq or vccq2.
    
    Currently missing "<name>-max-microamp" property in device tree will
    lead initialization to fail, thus such limitation shall be
    resolved to tolerate this kind of regulators.
    
    After resolving this, regulators without "<name>-max-microamp"
    property will have undefined "max current" value, i.e., zero value
    in "max_uA" field in struct ufs_vreg. Because we do bypass current
    switching operation (by regulator_set_load) in case of undefined
    current limit, this patch shall be safe.
    
    Change-Id: I2ae1cedf4c0a9d0afa090c842979e62ff64abe14
    Signed-off-by: Stanley Chu <stanley.chu@mediatek.com>
    Reviewed-by: Avri Altman <avri.altman@wdc.com>
    Acked-by: Alim Akhtar <alim.akhtar@samsung.com>
    CR-Id: ALPS04358218

commit 35e00ab2761af72506ecc03e12ee6d1ce98f0c7a
Author: Stanley Chu <stanley.chu@mediatek.com>
Date:   Thu Mar 14 14:59:18 2019 +0800

    UPSTREAM: scsi: ufs: Fix regulator load and icc-level configuration
    
    Currently if a regulator has "<name>-fixed-regulator"
    property in device tree, it will skip current limit initialization.
    This lead to a zero "max_uA" value in struct ufs_vreg.
    
    However, "regulator_set_load" operation shall be required
    on regulators which have valid current limits, otherwise a zero
    "max_uA" set by "regulator_set_load" may cause unexpected behavior
    when this regulator is enabled or set as high power mode.
    
    Similarly, in device's icc_level configuration flow, the target
    icc_level shall be updated if regulator also has valid current limit,
    otherwise a wrong icc_level will be calculated by zero "max_uA" and
    thus causes unexpected results after it is written to device.
    
    Change-Id: Ie477746f7008df233815ddf5b64fc05057cbd38c
    Signed-off-by: Stanley Chu <stanley.chu@mediatek.com>
    Reviewed-by: Avri Altman <avri.altman@wdc.com>
    Acked-by: Alim Akhtar <alim.akhtar@samsung.com>
    CR-Id: ALPS04358218

commit 570f32c052e9af80ba0d4af8aa60de344be6d1d5
Author: Stanley Chu <stanley.chu@mediatek.com>
Date:   Mon Mar 18 09:35:10 2019 +0800

    UPSTREAM: scsi: ufs: Avoid configuring regulator with undefined voltage range
    
    For regulators used by UFS, vcc, vccq and vccq2 will have voltage range
    initialized by ufshcd_populate_vreg(), however other regulators may
    have undefined voltage range if dt-bindings have no such definition.
    
    In above undefined case, both "min_uV" and "max_uV" fields in ufs_vreg
    struct will be zero values and these values will be configured on
    regulators in different power modes.
    
    Currently this may have no harm if both "min_uV" and "max_uV"
    always keep "zero values" because regulator_set_voltage() will always
    bypass such invalid values and return "good" results.
    
    However improper values shall be fixed to avoid potential bugs.
    Simply bypass voltage configuration if voltage range is not defined.
    
    Change-Id: I55566c47bde3cd04c8a8aaed5ee0d1f7ec54308d
    Signed-off-by: Stanley Chu <stanley.chu@mediatek.com>
    Reviewed-by: Avri Altman <avri.altman@wdc.com>
    Acked-by: Alim Akhtar <alim.akhtar@samsung.com>
    CR-Id: ALPS04358218

commit ac6312ff6bd02414f9d2b824bdbe6f01e698994e
Author: Stanley Chu <stanley.chu@mediatek.com>
Date:   Thu Mar 14 14:23:12 2019 +0800

    UPSTREAM: scsi: ufs: Remove unused min_uA field in struct ufs_vreg
    
    There are two fields related to regulator current limit in struct
    ufs_vreg: "min_uA" and "max_uA".
    
    "max_uA" is probed by "<name>-max-microamp" property from device
    tree and used for
    
    - regulator_set_load operations, and
    - icc_level configuration in device.
    
    However "min_uA" field is not used anywhere, thus we can remove it.
    
    Change-Id: I14b2ea2977ccb88ba1fdbb84c35db6ec7dd5288c
    Signed-off-by: Stanley Chu <stanley.chu@mediatek.com>
    Reviewed-by: Marc Gonzalez <marc.w.gonzalez@free.fr>
    Reviewed-by: Avri Altman <avri.altman@wdc.com>
    Acked-by: Alim Akhtar <alim.akhtar@samsung.com>
    CR-Id: ALPS04358218

commit 592869631f5ee80a283bbf54c44e560d4518d01c
Author: Stanley Chu <stanley.chu@mediatek.com>
Date:   Sun Feb 24 22:17:09 2019 +0800

    scsi: ufs-mediatek: Add UFS support for Mediatek SoC chips
    
    This patch adds UFS support for MediaTek SoC chips.
    
    Change-Id: I9bb84c9f88c9ddb3157b879bb9b321494711de0d
    Signed-off-by: Stanley Chu <stanley.chu@mediatek.com>
    Reviewed-by: Avri Altman <avri.altman@wdc.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    CR-Id: ALPS04358218

commit e2ec5cab524c9f7c4a5d06075bedb03232ce4372
Author: Stanley Chu <stanley.chu@mediatek.com>
Date:   Sun Feb 24 22:09:06 2019 +0800

    scsi: ufs-hisi: Re-factor ufshcd_get_pwr_dev_param
    
    ufshcd_get_pwr_dev_param function and ufs_dev_params struct
    are re-factored to ufs common driver thus change the way this
    driver used.
    
    Change-Id: I19a42b4933f954fc2103203438d58a0d1f292e7a
    Signed-off-by: Stanley Chu <stanley.chu@mediatek.com>
    Reviewed-by: Avri Altman <avri.altman@wdc.com>
    Acked-by: Bean Huo <beanhuo@micron.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    CR-Id: ALPS04358218

commit 807147a4a2c601b516c0b843d28cbdaacdc78251
Author: Stanley Chu <stanley.chu@mediatek.com>
Date:   Sun Feb 24 22:00:24 2019 +0800

    scsi: ufs-qcom: Re-factor ufshcd_get_pwr_dev_param
    
    ufshcd_get_pwr_dev_param function and ufs_dev_params struct
    are re-factored to ufs common driver thus change the way this
    driver used.
    
    Change-Id: Ic4583c1b58aa663415868ab0f16f92c1c0a949eb
    Signed-off-by: Stanley Chu <stanley.chu@mediatek.com>
    Reviewed-by: Avri Altman <avri.altman@wdc.com>
    Acked-by: Bean Huo <beanhuo@micron.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    CR-Id: ALPS04358218

commit b60f1fed6fdcd5dca7371a97cdb77290c848b681
Author: Stanley Chu <stanley.chu@mediatek.com>
Date:   Sun Feb 24 21:52:00 2019 +0800

    scsi: ufs: Introduce ufshcd_get_pwr_dev_param
    
    ufshcd_get_pwr_dev_param is for vendors to decide finally
    agreed attributes for power mode change if vendors define
    their host capability in struct ufs_dev_params.
    
    This api is using by both ufs-qcom and ufs-hisi now. Simply
    re-factor it and then every vendors can reuse it.
    
    Change-Id: Ia71ebb52cb7893ff5774f590823c6b45e7abc818
    Signed-off-by: Stanley Chu <stanley.chu@mediatek.com>
    Reviewed-by: Avri Altman <avri.altman@wdc.com>
    Acked-by: Bean Huo <beanhuo@micron.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    CR-Id: ALPS04358218

commit b2ae824798e11bf55e7f701295e37d4e93ef47db
Author: Avri Altman <avri.altman@wdc.com>
Date:   Thu Jan 10 13:31:26 2019 +0200

    scsi: ufs: Fix geometry descriptor size
    
    [ Upstream commit 9be9db9f78f52ef03ee90063730cb9d730e7032b ]
    
    Albeit we no longer rely on those hard-coded descriptor sizes, we still use
    them as our defaults, so better get it right. While adding its sysfs
    entries, we forgot to update the geometry descriptor size. It is 0x48
    according to UFS2.1, and wasn't changed in UFS3.0.
    
    [mkp: typo]
    
    Fixes: c720c091222e (scsi: ufs: sysfs: geometry descriptor)
    Signed-off-by: Avri Altman <avri.altman@wdc.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5641d2f8cdf28dd1590a90acd49b6db16303676b
Author: Stanley Chu <stanley.chu@mediatek.com>
Date:   Mon Jan 7 22:19:34 2019 +0800

    scsi: ufs: Fix system suspend status
    
    [ Upstream commit ce9e7bce43526626f7cffe2e657953997870197e ]
    
    hba->is_sys_suspended is set after successful system suspend but
    not clear after successful system resume.
    
    According to current behavior, hba->is_sys_suspended will not be set if
    host is runtime-suspended but not system-suspended. Thus we shall aligh the
    same policy: clear this flag even if host remains runtime-suspended after
    ufshcd_system_resume is successfully returned.
    
    Simply fix this flag to correct host status logs.
    
    Signed-off-by: Stanley Chu <stanley.chu@mediatek.com>
    Reviewed-by: Avri Altman <avri.altman@wdc.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eba68bd456724a6128f25ad5c2f1573c9fae51d3
Author: Marc Gonzalez <marc.w.gonzalez@free.fr>
Date:   Tue Jan 22 18:29:22 2019 +0100

    scsi: ufs: Use explicit access size in ufshcd_dump_regs
    
    commit d67247566450cf89a693307c9bc9f05a32d96cea upstream.
    
    memcpy_fromio() doesn't provide any control over access size.  For example,
    on arm64, it is implemented using readb and readq.  This may trigger a
    synchronous external abort:
    
    [    3.729943] Internal error: synchronous external abort: 96000210 [#1] PREEMPT SMP
    [    3.737000] Modules linked in:
    [    3.744371] CPU: 2 PID: 1 Comm: swapper/0 Tainted: G S                4.20.0-rc4 #16
    [    3.747413] Hardware name: Qualcomm Technologies, Inc. MSM8998 v1 MTP (DT)
    [    3.755295] pstate: 00000005 (nzcv daif -PAN -UAO)
    [    3.761978] pc : __memcpy_fromio+0x68/0x80
    [    3.766718] lr : ufshcd_dump_regs+0x50/0xb0
    [    3.770767] sp : ffff00000807ba00
    [    3.774830] x29: ffff00000807ba00 x28: 00000000fffffffb
    [    3.778344] x27: ffff0000089db068 x26: ffff8000f6e58000
    [    3.783728] x25: 000000000000000e x24: 0000000000000800
    [    3.789023] x23: ffff8000f6e587c8 x22: 0000000000000800
    [    3.794319] x21: ffff000008908368 x20: ffff8000f6e1ab80
    [    3.799615] x19: 000000000000006c x18: ffffffffffffffff
    [    3.804910] x17: 0000000000000000 x16: 0000000000000000
    [    3.810206] x15: ffff000009199648 x14: ffff000089244187
    [    3.815502] x13: ffff000009244195 x12: ffff0000091ab000
    [    3.820797] x11: 0000000005f5e0ff x10: ffff0000091998a0
    [    3.826093] x9 : 0000000000000000 x8 : ffff8000f6e1ac00
    [    3.831389] x7 : 0000000000000000 x6 : 0000000000000068
    [    3.836676] x5 : ffff8000f6e1abe8 x4 : 0000000000000000
    [    3.841971] x3 : ffff00000928c868 x2 : ffff8000f6e1abec
    [    3.847267] x1 : ffff00000928c868 x0 : ffff8000f6e1abe8
    [    3.852567] Process swapper/0 (pid: 1, stack limit = 0x(____ptrval____))
    [    3.857900] Call trace:
    [    3.864473]  __memcpy_fromio+0x68/0x80
    [    3.866683]  ufs_qcom_dump_dbg_regs+0x1c0/0x370
    [    3.870522]  ufshcd_print_host_regs+0x168/0x190
    [    3.874946]  ufshcd_init+0xd4c/0xde0
    [    3.879459]  ufshcd_pltfrm_init+0x3c8/0x550
    [    3.883264]  ufs_qcom_probe+0x24/0x60
    [    3.887188]  platform_drv_probe+0x50/0xa0
    
    Assuming aligned 32-bit registers, let's use readl, after making sure
    that 'offset' and 'len' are indeed multiples of 4.
    
    Fixes: ba80917d9932d ("scsi: ufs: ufshcd_dump_regs to use memcpy_fromio")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Marc Gonzalez <marc.w.gonzalez@free.fr>
    Acked-by: Tomas Winkler <tomas.winkler@intel.com>
    Reviewed-by: Jeffrey Hugo <jhugo@codeaurora.org>
    Reviewed-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Tested-by: Evan Green <evgreen@chromium.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f2e78c08e8442f0b9098edc0fa6ceae1b83520e1
Author: Wei Li <liwei213@huawei.com>
Date:   Thu Nov 8 09:08:29 2018 -0800

    scsi: ufs: Fix hynix ufs bug with quirk on hi36xx SoC
    
    [ Upstream commit 8e4829c6f7470722c1f5a1dc5769ebe09ef036d6 ]
    
    Hynix ufs has deviations on hi36xx platform which will result in ufs bursts
    transfer failures.
    
    To fix the problem, the Hynix device must set the register
    VS_DebugSaveConfigTime to 0x10, which will set time reference for
    SaveConfigTime is 250 ns. The time reference for SaveConfigTime is 40 ns by
    default.
    
    This patch is necessary to boot on HiKey960 boards that use Hynix UFS chips
    (H28U62301AMR model: hB8aL1).
    
    Cc: Vinayak Holikatti <vinholikatti@gmail.com>
    Cc: "James E.J. Bottomley" <jejb@linux.vnet.ibm.com>
    Cc: "Martin K. Petersen" <martin.petersen@oracle.com>
    Cc: linux-scsi@vger.kernel.org
    Signed-off-by: Wei Li <liwei213@huawei.com>
    Signed-off-by: Dmitry Shmidt <dimitrysh@google.com>
    [jstultz: Forward ported from older code, slight tweak to commit message]
    Signed-off-by: John Stultz <john.stultz@linaro.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f2470959c1013874e05cad74e5fcbcbfcddb5f82
Author: Evan Green <evgreen@chromium.org>
Date:   Fri Oct 5 10:27:32 2018 -0700

    scsi: ufs: Schedule clk gating work on correct queue
    
    [ Upstream commit f4bb7704699beee9edfbee875daa9089c86cf724 ]
    
    With commit 10e5e37581fc ("scsi: ufs: Add clock ungating to a separate
    workqueue"), clock gating work was moved to a separate work queue with
    WQ_MEM_RECLAIM set, since clock gating could occur from a memory reclaim
    context. Unfortunately, clk_gating.gate_work was left queued via
    schedule_delayed_work, which is a system workqueue that does not have
    WQ_MEM_RECLAIM set.  Because ufshcd_ungate_work attempts to cancel
    gate_work, the following warning appears:
    
    [   14.174170] workqueue: WQ_MEM_RECLAIM ufs_clk_gating_0:ufshcd_ungate_work is flushing !WQ_MEM_RECLAIM events:ufshcd_gate_work
    [   14.174179] WARNING: CPU: 4 PID: 173 at kernel/workqueue.c:2440 check_flush_dependency+0x110/0x118
    [   14.205725] CPU: 4 PID: 173 Comm: kworker/u16:3 Not tainted 4.14.68 #1
    [   14.212437] Hardware name: Google Cheza (rev1) (DT)
    [   14.217459] Workqueue: ufs_clk_gating_0 ufshcd_ungate_work
    [   14.223107] task: ffffffc0f6a40080 task.stack: ffffff800a490000
    [   14.229195] PC is at check_flush_dependency+0x110/0x118
    [   14.234569] LR is at check_flush_dependency+0x110/0x118
    [   14.239944] pc : [<ffffff80080cad14>] lr : [<ffffff80080cad14>] pstate: 60c001c9
    [   14.333050] Call trace:
    [   14.427767] [<ffffff80080cad14>] check_flush_dependency+0x110/0x118
    [   14.434219] [<ffffff80080cafec>] start_flush_work+0xac/0x1fc
    [   14.440046] [<ffffff80080caeec>] flush_work+0x40/0x94
    [   14.445246] [<ffffff80080cb288>] __cancel_work_timer+0x11c/0x1b8
    [   14.451433] [<ffffff80080cb4b8>] cancel_delayed_work_sync+0x20/0x30
    [   14.457886] [<ffffff80085b9294>] ufshcd_ungate_work+0x24/0xd0
    [   14.463800] [<ffffff80080cfb04>] process_one_work+0x32c/0x690
    [   14.469713] [<ffffff80080d0154>] worker_thread+0x218/0x338
    [   14.475361] [<ffffff80080d527c>] kthread+0x120/0x130
    [   14.480470] [<ffffff8008084814>] ret_from_fork+0x10/0x18
    
    The simple solution is to put the gate_work on the same WQ_MEM_RECLAIM
    work queue as the ungate_work.
    
    Fixes: 10e5e37581fc ("scsi: ufs: Add clock ungating to a separate workqueue")
    Signed-off-by: Evan Green <evgreen@chromium.org>
    Reviewed-by: Douglas Anderson <dianders@chromium.org>
    Reviewed-by: Stephen Boyd <swboyd@chromium.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d87161bea405e3260377026ca8a704a3f68bd67a
Author: Adrian Hunter <adrian.hunter@intel.com>
Date:   Thu Sep 13 14:28:48 2018 +0300

    scsi: ufs: Disable blk-mq for now
    
    blk-mq does not support runtime pm, so disable blk-mq support for now.
    
    Fixes: d5038a13eca7 ("scsi: core: switch to scsi-mq by default")
    Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
    Acked-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit e7c3b37983c4ed038a3b982aa3dafc76dfa86249
Author: Ohad Sharabi <ohad.sharabi@wdc.com>
Date:   Sun Aug 5 16:26:23 2018 +0300

    scsi: ufs: remove unnecessary query(DM) UPIU trace
    
    This patch removes redundant trace that occurs when sending Device
    Management(DM) request (fix behavior in commit 6667e6d91c88 ("scsi:
    ufs: add trace event for ufs upiu").
    
    Since the function send_command is called also for DM request, UPIU
    trace for DM request is called twice- one identified as query_* the
    other as send/complete.
    
    Signed-off-by: Ohad Sharabi <ohad.sharabi@wdc.com>
    Fixes: 6667e6d91c88 ("scsi: ufs: add trace event for ufs upiu")
    Reviewed-by: Stanislav Nijnikov <stanislav.nijnikov@wdc.com>
    Reviewed-by: Avri Altman <avri.altman@wdc.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 8111b5e334861c4cd12e49e151e7e2f0e617d46a
Author: liwei <liwei213@huawei.com>
Date:   Tue Jul 17 17:36:56 2018 +0800

    scsi: ufs: add Hisilicon ufs driver code
    
    add Hisilicon ufs driver code.
    
    Signed-off-by: Li Wei <liwei213@huawei.com>
    Signed-off-by: Geng Jianfeng <gengjianfeng@hisilicon.com>
    Signed-off-by: Zang Leigang <zangleigang@hisilicon.com>
    Signed-off-by: Yu Jianfeng <steven.yujianfeng@hisilicon.com>
    Tested-by: John Stultz <john.stultz@linaro.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit c65be1a63f1df224c8f22d72b9ec824241ada585
Author: Johannes Thumshirn <jthumshirn@suse.de>
Date:   Mon Jun 25 13:20:58 2018 +0200

    scsi: core: check for equality of result byte values
    
    When evaluating a SCSI command's result using the field access macros,
    check for equality of the fields and not if a specific bit is set.
    
    This is a preparation patch, for reworking the results field in the
    SCSI command.
    
    Signed-off-by: Johannes Thumshirn <jthumshirn@suse.de>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Bart Van Assche <bart.vanassche@wdc.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit ba80917d9932da022d2e74eae66e44139dd65136
Author: Tomas Winkler <tomas.winkler@intel.com>
Date:   Thu Jun 14 11:14:09 2018 +0300

    scsi: ufs: ufshcd_dump_regs to use memcpy_fromio
    
    ufshcd_dump_regs should use memcpy_fromio to read host registers
    instead of directly accessing using memcpy.  The same function is
    utilized in ufs-qcom.
    
    Elminite compilation warning
    drivers/scsi/ufs/ufshcd.c:356:9: warning: incorrect type in argument 6 (different address spaces)
    drivers/scsi/ufs/ufshcd.c:356:9:    expected void const *buf
    drivers/scsi/ufs/ufshcd.c:356:9:    got void [noderef] <asn:2>*mmio_base
    
    Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
    Reviewed-by: Avri Altman <avri.altman@wdc.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit a86854d0c599b3202307abceb68feee4d7061578
Author: Kees Cook <keescook@chromium.org>
Date:   Tue Jun 12 14:07:58 2018 -0700

    treewide: devm_kzalloc() -> devm_kcalloc()
    
    The devm_kzalloc() function has a 2-factor argument form, devm_kcalloc().
    This patch replaces cases of:
    
            devm_kzalloc(handle, a * b, gfp)
    
    with:
            devm_kcalloc(handle, a * b, gfp)
    
    as well as handling cases of:
    
            devm_kzalloc(handle, a * b * c, gfp)
    
    with:
    
            devm_kzalloc(handle, array3_size(a, b, c), gfp)
    
    as it's slightly less ugly than:
    
            devm_kcalloc(handle, array_size(a, b), c, gfp)
    
    This does, however, attempt to ignore constant size factors like:
    
            devm_kzalloc(handle, 4 * 1024, gfp)
    
    though any constants defined via macros get caught up in the conversion.
    
    Any factors with a sizeof() of "unsigned char", "char", and "u8" were
    dropped, since they're redundant.
    
    Some manual whitespace fixes were needed in this patch, as Coccinelle
    really liked to write "=devm_kcalloc..." instead of "= devm_kcalloc...".
    
    The Coccinelle script used for this was:
    
    // Fix redundant parens around sizeof().
    @@
    expression HANDLE;
    type TYPE;
    expression THING, E;
    @@
    
    (
      devm_kzalloc(HANDLE,
    -	(sizeof(TYPE)) * E
    +	sizeof(TYPE) * E
      , ...)
    |
      devm_kzalloc(HANDLE,
    -	(sizeof(THING)) * E
    +	sizeof(THING) * E
      , ...)
    )
    
    // Drop single-byte sizes and redundant parens.
    @@
    expression HANDLE;
    expression COUNT;
    typedef u8;
    typedef __u8;
    @@
    
    (
      devm_kzalloc(HANDLE,
    -	sizeof(u8) * (COUNT)
    +	COUNT
      , ...)
    |
      devm_kzalloc(HANDLE,
    -	sizeof(__u8) * (COUNT)
    +	COUNT
      , ...)
    |
      devm_kzalloc(HANDLE,
    -	sizeof(char) * (COUNT)
    +	COUNT
      , ...)
    |
      devm_kzalloc(HANDLE,
    -	sizeof(unsigned char) * (COUNT)
    +	COUNT
      , ...)
    |
      devm_kzalloc(HANDLE,
    -	sizeof(u8) * COUNT
    +	COUNT
      , ...)
    |
      devm_kzalloc(HANDLE,
    -	sizeof(__u8) * COUNT
    +	COUNT
      , ...)
    |
      devm_kzalloc(HANDLE,
    -	sizeof(char) * COUNT
    +	COUNT
      , ...)
    |
      devm_kzalloc(HANDLE,
    -	sizeof(unsigned char) * COUNT
    +	COUNT
      , ...)
    )
    
    // 2-factor product with sizeof(type/expression) and identifier or constant.
    @@
    expression HANDLE;
    type TYPE;
    expression THING;
    identifier COUNT_ID;
    constant COUNT_CONST;
    @@
    
    (
    - devm_kzalloc
    + devm_kcalloc
      (HANDLE,
    -	sizeof(TYPE) * (COUNT_ID)
    +	COUNT_ID, sizeof(TYPE)
      , ...)
    |
    - devm_kzalloc
    + devm_kcalloc
      (HANDLE,
    -	sizeof(TYPE) * COUNT_ID
    +	COUNT_ID, sizeof(TYPE)
      , ...)
    |
    - devm_kzalloc
    + devm_kcalloc
      (HANDLE,
    -	sizeof(TYPE) * (COUNT_CONST)
    +	COUNT_CONST, sizeof(TYPE)
      , ...)
    |
    - devm_kzalloc
    + devm_kcalloc
      (HANDLE,
    -	sizeof(TYPE) * COUNT_CONST
    +	COUNT_CONST, sizeof(TYPE)
      , ...)
    |
    - devm_kzalloc
    + devm_kcalloc
      (HANDLE,
    -	sizeof(THING) * (COUNT_ID)
    +	COUNT_ID, sizeof(THING)
      , ...)
    |
    - devm_kzalloc
    + devm_kcalloc
      (HANDLE,
    -	sizeof(THING) * COUNT_ID
    +	COUNT_ID, sizeof(THING)
      , ...)
    |
    - devm_kzalloc
    + devm_kcalloc
      (HANDLE,
    -	sizeof(THING) * (COUNT_CONST)
    +	COUNT_CONST, sizeof(THING)
      , ...)
    |
    - devm_kzalloc
    + devm_kcalloc
      (HANDLE,
    -	sizeof(THING) * COUNT_CONST
    +	COUNT_CONST, sizeof(THING)
      , ...)
    )
    
    // 2-factor product, only identifiers.
    @@
    expression HANDLE;
    identifier SIZE, COUNT;
    @@
    
    - devm_kzalloc
    + devm_kcalloc
      (HANDLE,
    -	SIZE * COUNT
    +	COUNT, SIZE
      , ...)
    
    // 3-factor product with 1 sizeof(type) or sizeof(expression), with
    // redundant parens removed.
    @@
    expression HANDLE;
    expression THING;
    identifier STRIDE, COUNT;
    type TYPE;
    @@
    
    (
      devm_kzalloc(HANDLE,
    -	sizeof(TYPE) * (COUNT) * (STRIDE)
    +	array3_size(COUNT, STRIDE, sizeof(TYPE))
      , ...)
    |
      devm_kzalloc(HANDLE,
    -	sizeof(TYPE) * (COUNT) * STRIDE
    +	array3_size(COUNT, STRIDE, sizeof(TYPE))
      , ...)
    |
      devm_kzalloc(HANDLE,
    -	sizeof(TYPE) * COUNT * (STRIDE)
    +	array3_size(COUNT, STRIDE, sizeof(TYPE))
      , ...)
    |
      devm_kzalloc(HANDLE,
    -	sizeof(TYPE) * COUNT * STRIDE
    +	array3_size(COUNT, STRIDE, sizeof(TYPE))
      , ...)
    |
      devm_kzalloc(HANDLE,
    -	sizeof(THING) * (COUNT) * (STRIDE)
    +	array3_size(COUNT, STRIDE, sizeof(THING))
      , ...)
    |
      devm_kzalloc(HANDLE,
    -	sizeof(THING) * (COUNT) * STRIDE
    +	array3_size(COUNT, STRIDE, sizeof(THING))
      , ...)
    |
      devm_kzalloc(HANDLE,
    -	sizeof(THING) * COUNT * (STRIDE)
    +	array3_size(COUNT, STRIDE, sizeof(THING))
      , ...)
    |
      devm_kzalloc(HANDLE,
    -	sizeof(THING) * COUNT * STRIDE
    +	array3_size(COUNT, STRIDE, sizeof(THING))
      , ...)
    )
    
    // 3-factor product with 2 sizeof(variable), with redundant parens removed.
    @@
    expression HANDLE;
    expression THING1, THING2;
    identifier COUNT;
    type TYPE1, TYPE2;
    @@
    
    (
      devm_kzalloc(HANDLE,
    -	sizeof(TYPE1) * sizeof(TYPE2) * COUNT
    +	array3_size(COUNT, sizeof(TYPE1), sizeof(TYPE2))
      , ...)
    |
      devm_kzalloc(HANDLE,
    -	sizeof(TYPE1) * sizeof(THING2) * (COUNT)
    +	array3_size(COUNT, sizeof(TYPE1), sizeof(TYPE2))
      , ...)
    |
      devm_kzalloc(HANDLE,
    -	sizeof(THING1) * sizeof(THING2) * COUNT
    +	array3_size(COUNT, sizeof(THING1), sizeof(THING2))
      , ...)
    |
      devm_kzalloc(HANDLE,
    -	sizeof(THING1) * sizeof(THING2) * (COUNT)
    +	array3_size(COUNT, sizeof(THING1), sizeof(THING2))
      , ...)
    |
      devm_kzalloc(HANDLE,
    -	sizeof(TYPE1) * sizeof(THING2) * COUNT
    +	array3_size(COUNT, sizeof(TYPE1), sizeof(THING2))
      , ...)
    |
      devm_kzalloc(HANDLE,
    -	sizeof(TYPE1) * sizeof(THING2) * (COUNT)
    +	array3_size(COUNT, sizeof(TYPE1), sizeof(THING2))
      , ...)
    )
    
    // 3-factor product, only identifiers, with redundant parens removed.
    @@
    expression HANDLE;
    identifier STRIDE, SIZE, COUNT;
    @@
    
    (
      devm_kzalloc(HANDLE,
    -	(COUNT) * STRIDE * SIZE
    +	array3_size(COUNT, STRIDE, SIZE)
      , ...)
    |
      devm_kzalloc(HANDLE,
    -	COUNT * (STRIDE) * SIZE
    +	array3_size(COUNT, STRIDE, SIZE)
      , ...)
    |
      devm_kzalloc(HANDLE,
    -	COUNT * STRIDE * (SIZE)
    +	array3_size(COUNT, STRIDE, SIZE)
      , ...)
    |
      devm_kzalloc(HANDLE,
    -	(COUNT) * (STRIDE) * SIZE
    +	array3_size(COUNT, STRIDE, SIZE)
      , ...)
    |
      devm_kzalloc(HANDLE,
    -	COUNT * (STRIDE) * (SIZE)
    +	array3_size(COUNT, STRIDE, SIZE)
      , ...)
    |
      devm_kzalloc(HANDLE,
    -	(COUNT) * STRIDE * (SIZE)
    +	array3_size(COUNT, STRIDE, SIZE)
      , ...)
    |
      devm_kzalloc(HANDLE,
    -	(COUNT) * (STRIDE) * (SIZE)
    +	array3_size(COUNT, STRIDE, SIZE)
      , ...)
    |
      devm_kzalloc(HANDLE,
    -	COUNT * STRIDE * SIZE
    +	array3_size(COUNT, STRIDE, SIZE)
      , ...)
    )
    
    // Any remaining multi-factor products, first at least 3-factor products,
    // when they're not all constants...
    @@
    expression HANDLE;
    expression E1, E2, E3;
    constant C1, C2, C3;
    @@
    
    (
      devm_kzalloc(HANDLE, C1 * C2 * C3, ...)
    |
      devm_kzalloc(HANDLE,
    -	(E1) * E2 * E3
    +	array3_size(E1, E2, E3)
      , ...)
    |
      devm_kzalloc(HANDLE,
    -	(E1) * (E2) * E3
    +	array3_size(E1, E2, E3)
      , ...)
    |
      devm_kzalloc(HANDLE,
    -	(E1) * (E2) * (E3)
    +	array3_size(E1, E2, E3)
      , ...)
    |
      devm_kzalloc(HANDLE,
    -	E1 * E2 * E3
    +	array3_size(E1, E2, E3)
      , ...)
    )
    
    // And then all remaining 2 factors products when they're not all constants,
    // keeping sizeof() as the second factor argument.
    @@
    expression HANDLE;
    expression THING, E1, E2;
    type TYPE;
    constant C1, C2, C3;
    @@
    
    (
      devm_kzalloc(HANDLE, sizeof(THING) * C2, ...)
    |
      devm_kzalloc(HANDLE, sizeof(TYPE) * C2, ...)
    |
      devm_kzalloc(HANDLE, C1 * C2 * C3, ...)
    |
      devm_kzalloc(HANDLE, C1 * C2, ...)
    |
    - devm_kzalloc
    + devm_kcalloc
      (HANDLE,
    -	sizeof(TYPE) * (E2)
    +	E2, sizeof(TYPE)
      , ...)
    |
    - devm_kzalloc
    + devm_kcalloc
      (HANDLE,
    -	sizeof(TYPE) * E2
    +	E2, sizeof(TYPE)
      , ...)
    |
    - devm_kzalloc
    + devm_kcalloc
      (HANDLE,
    -	sizeof(THING) * (E2)
    +	E2, sizeof(THING)
      , ...)
    |
    - devm_kzalloc
    + devm_kcalloc
      (HANDLE,
    -	sizeof(THING) * E2
    +	E2, sizeof(THING)
      , ...)
    |
    - devm_kzalloc
    + devm_kcalloc
      (HANDLE,
    -	(E1) * E2
    +	E1, E2
      , ...)
    |
    - devm_kzalloc
    + devm_kcalloc
      (HANDLE,
    -	(E1) * (E2)
    +	E1, E2
      , ...)
    |
    - devm_kzalloc
    + devm_kcalloc
      (HANDLE,
    -	E1 * E2
    +	E1, E2
      , ...)
    )
    
    Signed-off-by: Kees Cook <keescook@chromium.org>

commit 5f85942c2ea2ed59d8f19c954bbb0f5c1a2ebdd1
Merge: 0c14e43 1b5c2cb
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sun Jun 10 13:01:12 2018 -0700

    Merge tag 'scsi-misc' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi
    
    Pull SCSI updates from James Bottomley:
     "This is mostly updates to the usual drivers: ufs, qedf, mpt3sas, lpfc,
      xfcp, hisi_sas, cxlflash, qla2xxx.
    
      In the absence of Nic, we're also taking target updates which are
      mostly minor except for the tcmu refactor.
    
      The only real core change to worry about is the removal of high page
      bouncing (in sas, storvsc and iscsi). This has been well tested and no
      problems have shown up so far"
    
    * tag 'scsi-misc' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi: (268 commits)
      scsi: lpfc: update driver version to 12.0.0.4
      scsi: lpfc: Fix port initialization failure.
      scsi: lpfc: Fix 16gb hbas failing cq create.
      scsi: lpfc: Fix crash in blk_mq layer when executing modprobe -r lpfc
      scsi: lpfc: correct oversubscription of nvme io requests for an adapter
      scsi: lpfc: Fix MDS diagnostics failure (Rx < Tx)
      scsi: hisi_sas: Mark PHY as in reset for nexus reset
      scsi: hisi_sas: Fix return value when get_free_slot() failed
      scsi: hisi_sas: Terminate STP reject quickly for v2 hw
      scsi: hisi_sas: Add v2 hw force PHY function for internal ATA command
      scsi: hisi_sas: Include TMF elements in struct hisi_sas_slot
      scsi: hisi_sas: Try wait commands before before controller reset
      scsi: hisi_sas: Init disks after controller reset
      scsi: hisi_sas: Create a scsi_host_template per HW module
      scsi: hisi_sas: Reset disks when discovered
      scsi: hisi_sas: Add LED feature for v3 hw
      scsi: hisi_sas: Change common allocation mode of device id
      scsi: hisi_sas: change slot index allocation mode
      scsi: hisi_sas: Introduce hisi_sas_phy_set_linkrate()
      scsi: hisi_sas: fix a typo in hisi_sas_task_prep()
      ...

commit 6600593cbd9340b3d4fcde8e58d17653732620c4
Author: Christoph Hellwig <hch@lst.de>
Date:   Tue May 29 15:52:29 2018 +0200

    block: rename BLK_EH_NOT_HANDLED to BLK_EH_DONE
    
    The BLK_EH_NOT_HANDLED implies nothing happen, but very often that
    is not what is happening - instead the driver already completed the
    command.  Fix the symbolic name to reflect that a little better.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>

commit 10e5e37581fc5817d52ff5f8e2b3362f64eb04f4
Author: Vijay Viswanath <vviswana@codeaurora.org>
Date:   Thu May 3 16:37:22 2018 +0530

    scsi: ufs: Add clock ungating to a separate workqueue
    
    UFS driver can receive a request during memory reclaim by kswapd.  So
    when ufs driver puts the ungate work in queue, and if there are no idle
    workers, kthreadd is invoked to create a new kworker. Since kswapd task
    holds a mutex which kthreadd also needs, this can cause a deadlock
    situation. So ungate work must be done in a separate work queue with
    WQ_MEM_RECLAIM flag enabled.  Such a workqueue will have a rescue thread
    which will be called when the above deadlock condition is possible.
    
    Signed-off-by: Vijay Viswanath <vviswana@codeaurora.org>
    Signed-off-by: Can Guo <cang@codeaurora.org>
    Signed-off-by: Asutosh Das <asutoshd@codeaurora.org>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 7f6ba4f12e6cbfdefbb95cfd8fc67ece6c15d799
Author: Venkat Gopalakrishnan <venkatg@codeaurora.org>
Date:   Thu May 3 16:37:20 2018 +0530

    scsi: ufs: make sure all interrupts are processed
    
    As multiple requests are submitted to the ufs host controller in
    parallel there could be instances where the command completion interrupt
    arrives later for a request that is already processed earlier as the
    corresponding doorbell was cleared when handling the previous
    interrupt. Read the interrupt status in a loop after processing the
    received interrupt to catch such interrupts and handle it.
    
    Signed-off-by: Venkat Gopalakrishnan <venkatg@codeaurora.org>
    Signed-off-by: Asutosh Das <asutoshd@codeaurora.org>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 69a6fff068567469c0ef1156ae5ac8d3d71701f0
Author: Subhash Jadavani <subhashj@codeaurora.org>
Date:   Thu May 3 16:37:19 2018 +0530

    scsi: ufs: ufs-qcom: remove broken hci version quirk
    
    UFSHCD_QUIRK_BROKEN_UFS_HCI_VERSION is only applicable for QCOM UFS host
    controller version 2.x.y and this has been fixed from version 3.x.y
    onwards, hence this change removes this quirk for version 3.x.y onwards.
    
    [mkp: applied by hand]
    
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Asutosh Das <asutoshd@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 38135535dcc25af856336fda31aeef79d8ad9dab
Author: Subhash Jadavani <subhashj@codeaurora.org>
Date:   Thu May 3 16:37:18 2018 +0530

    scsi: ufs: add reference counting for scsi block requests
    
    Currently we call the scsi_block_requests()/scsi_unblock_requests()
    whenever we want to block/unblock scsi requests but as there is no
    reference counting, nesting of these calls could leave us in undesired
    state sometime. Consider following call flow sequence:
    
    1. func1() calls scsi_block_requests() but calls func2() before
       calling scsi_unblock_requests()
    2. func2() calls scsi_block_requests()
    3. func2() calls scsi_unblock_requests()
    4. func1() calls scsi_unblock_requests()
    
    As there is no reference counting, we will have scsi requests unblocked
    after #3 instead of it to be unblocked only after #4. Though we may not
    have failures seen with this, we might run into some failures in future.
    Better solution would be to fix this by adding reference counting.
    
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Can Guo <cang@codeaurora.org>
    Signed-off-by: Asutosh Das <asutoshd@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit b334456ec2021b1addc19806990115e69ec4ac32
Author: Subhash Jadavani <subhashj@codeaurora.org>
Date:   Thu May 3 16:37:17 2018 +0530

    scsi: ufs: ufshcd: fix possible unclocked register access
    
    Vendor specific setup_clocks ops may depend on clocks managed by ufshcd
    driver so if the vendor specific setup_clocks callback is called when
    the required clocks are turned off, it results into unclocked register
    access.
    
    This change make sure that required clocks are enabled before vendor
    specific setup_clocks callback is called.
    
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Venkat Gopalakrishnan <venkatg@codeaurora.org>
    Signed-off-by: Can Guo <cang@codeaurora.org>
    Signed-off-by: Asutosh Das <asutoshd@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 2e3611e9546c2ed4def152a51dfd34e8dddae7a5
Author: Maya Erez <merez@codeaurora.org>
Date:   Thu May 3 16:37:16 2018 +0530

    scsi: ufs: fix exception event handling
    
    The device can set the exception event bit in one of the response UPIU,
    for example to notify the need for urgent BKOPs operation.  In such a
    case, the host driver calls ufshcd_exception_event_handler to handle
    this notification.  When trying to check the exception event status (for
    finding the cause for the exception event), the device may be busy with
    additional SCSI commands handling and may not respond within the 100ms
    timeout.
    
    To prevent that, we need to block SCSI commands during handling of
    exception events and allow retransmissions of the query requests, in
    case of timeout.
    
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Maya Erez <merez@codeaurora.org>
    Signed-off-by: Can Guo <cang@codeaurora.org>
    Signed-off-by: Asutosh Das <asutoshd@codeaurora.org>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 092b45583c524edac688f0b6cdc62a70c3081e4a
Author: Bjorn Andersson <bjorn.andersson@linaro.org>
Date:   Thu May 17 23:26:37 2018 -0700

    scsi: ufs: Use freq table with devfreq
    
    devfreq requires that the client operates on actual frequencies, not only 0
    and UMAX_INT and as such UFS brok with the introduction of f1d981eaecf8 ("PM
    / devfreq: Use the available min/max frequency").
    
    This patch registers the frequencies of the first clock with devfreq and use
    these to determine if we're trying to step up or down.
    
    Reviewed-by: Chanwoo Choi <cw00.choi@samsung.com> [for devfreq & OPP part]
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit deac444f4e44c406796a086381db1c09c70ce042
Author: Bjorn Andersson <bjorn.andersson@linaro.org>
Date:   Thu May 17 23:26:36 2018 -0700

    scsi: ufs: Extract devfreq registration
    
    Failing to register with devfreq leaves hba->devfreq assigned, which causes
    the error path to dereference the ERR_PTR(). Rather than bolting on more
    conditionals, move the call of devm_devfreq_add_device() into it's own
    function and only update hba->devfreq once it's successfully registered.
    
    The subsequent patch builds upon this to make UFS actually work again, as
    it's been broken since f1d981eaecf8 ("PM / devfreq: Use the available
    min/max frequency")
    
    Also switch to use DEVFREQ_GOV_SIMPLE_ONDEMAND constant.
    
    Reviewed-by: Chanwoo Choi <cw00.choi@samsung.com>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 0d846e703dc8b77d31cc71e0bd8d004f187eac30
Author: Alim Akhtar <alim.akhtar@samsung.com>
Date:   Sun May 6 15:44:18 2018 +0530

    scsi: ufs: make ufshcd_config_pwr_mode of non-static func
    
    This makes ufshcd_config_pwr_mode non-static so that other vendors like
    exynos can use it.
    
    Signed-off-by: Seungwon Jeon <essuuj@gmail.com>
    Signed-off-by: Alim Akhtar <alim.akhtar@samsung.com>
    Reviewed-by: Avri Altman <avri.altman@wdc.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 4404c5de7707859d8e54f4356ac17c82413c80e9
Author: Alim Akhtar <alim.akhtar@samsung.com>
Date:   Sun May 6 15:44:17 2018 +0530

    scsi: ufs: add quirk to enable host controller without hce
    
    Some host controllers don't support host controller enable via HCE.
    
    Signed-off-by: Seungwon Jeon <essuuj@gmail.com>
    Signed-off-by: Alim Akhtar <alim.akhtar@samsung.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 5ac6abc9415c3c70040b529631426b78e26108c4
Author: Alim Akhtar <alim.akhtar@samsung.com>
Date:   Sun May 6 15:44:16 2018 +0530

    scsi: ufs: add quirk to disallow reset of interrupt aggregation
    
    Some host controllers support interrupt aggregation but don't allow
    resetting counter and timer in software.
    
    Signed-off-by: Seungwon Jeon <essuuj@gmail.com>
    Signed-off-by: Alim Akhtar <alim.akhtar@samsung.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 1399c5b02c568700ba50ce1ec19c12e71b25c73d
Author: Alim Akhtar <alim.akhtar@samsung.com>
Date:   Sun May 6 15:44:15 2018 +0530

    scsi: ufs: add quirk to fix mishandling utrlclr/utmrlclr
    
    In the right behavior, setting the bit to '0' indicates clear and '1'
    indicates no change. If host controller handles this the other way,
    UFSHCI_QUIRK_BROKEN_REQ_LIST_CLR can be used.
    
    [mkp: typo]
    
    Signed-off-by: Seungwon Jeon <essuuj@gmail.com>
    Signed-off-by: Alim Akhtar <alim.akhtar@samsung.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Reviewed-by: "Asutosh Das (asd)" <asutoshd@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit bbe21d7a979245902113e171fdb36b57812b3c3b
Author: Kees Cook <keescook@chromium.org>
Date:   Wed May 2 16:58:09 2018 -0700

    scsi: ufs: ufshcd: Remove VLA usage
    
    On the quest to remove all VLAs from the kernel[1] this moves buffers
    off the stack. In the second instance, this collapses two separately
    allocated buffers into a single buffer, since they are used
    consecutively, which saves 256 bytes (QUERY_DESC_MAX_SIZE + 1) of stack
    space.
    
    [1] https://lkml.kernel.org/r/CA+55aFzCG-zNmZwX4A2FQpadafLfEzK6CC=qPXydAacU1RqZWA@mail.gmail.com
    
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 6667e6d91c88a788d5ab1b1e999d245473e84a90
Author: Ohad Sharabi <ohad.sharabi@sandisk.com>
Date:   Wed Mar 28 12:42:18 2018 +0300

    scsi: ufs: add trace event for ufs upiu
    
    Add UFS Protocol Information Units(upiu) trace events for ufs driver,
    used to trace various ufs transaction types- command, task-management
    and device management.
    The trace-point format is generic and can be easily adapted to trace
    other upius if needed.
    Currently tracing ufs transaction of type 'device management', which
    this patch introduce, cannot be obtained from any other trace.
    Device management transactions are used for communication with the
    device such as reading and writing descriptor or attributes etc.
    
    Signed-off-by: Ohad Sharabi <ohad.sharabi@sandisk.com>
    Reviewed-by: Stanislav Nijnikov <stanislav.nijnikov@wdc.com>
    Reviewed-by: Bart Van Assche <bart.vanassche@wdc.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 2e1f44f6ad8008be353c7c99286f7a747b4b3cf4
Merge: ad44837 3f6c9be
Author: James Bottomley <James.Bottomley@HansenPartnership.com>
Date:   Tue Mar 27 12:27:34 2018 -0400

    Merge branch 'fixes' into misc
    
    Somewhat nasty merge due to conflicts between "33b28357dd00 scsi:
    qla2xxx: Fix Async GPN_FT for FCP and FC-NVMe scan" and "2b5b96473efc
    scsi: qla2xxx: Fix FC-NVMe LUN discovery"
    
    Merge is non-trivial and has been verified by Qlogic (Cavium)
    
    Signed-off-by: James E.J. Bottomley <jejb@linux.vnet.ibm.com>

commit ad448378825f5746c5fa37718724bc8f4e7b6945
Author: Adrian Hunter <adrian.hunter@intel.com>
Date:   Tue Mar 20 15:07:38 2018 +0200

    scsi: ufs: Add support for Auto-Hibernate Idle Timer
    
    UFS host controllers may support an autonomous power management feature
    called the Auto-Hibernate Idle Timer. The timer is set to the number of
    microseconds of idle time before the UFS host controller will autonomously
    put the link into Hibernate state. That will save power at the expense of
    increased latency. Any access to the host controller interface registers
    will automatically put the link out of Hibernate state. So once configured,
    the feature is transparent to the driver.
    
    Expose the Auto-Hibernate Idle Timer value via SysFS to allow users to
    choose between power efficiency or lower latency. Set a default value of
    150 ms.
    
    Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
    Acked-by: Stanislav Nijnikov <stanislav.nijnikov@wdc.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 114c1aa210494a02c26aa33f793e5b641df01989
Author: Stanislav Nijnikov <stanislav.nijnikov@wdc.com>
Date:   Thu Mar 1 12:48:06 2018 +0200

    scsi: ufs: sysfs: reworking of the rpm_lvl and spm_lvl entries
    
    Read from these files will return the integer value of the chosen power
    management level now. Separate entries were added to show the target UFS
    device and UIC link states. The description of the possible power
    managements levels was added to the ABI file. The on-write behaviour of
    these entries wasn't changed.
    
    [mkp: typo]
    
    Signed-off-by: Stanislav Nijnikov <stanislav.nijnikov@wdc.com>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 8aa29f192ca675746ab4f39e46a5fd712a76faa6
Author: Bart Van Assche <bart.vanassche@wdc.com>
Date:   Thu Mar 1 15:07:20 2018 -0800

    scsi: ufs: Fix kernel-doc errors and warnings
    
    Avoid that the kernel-doc tool complains about mismatches between
    kernel-doc headers and function definitions. Avoid that errors like the
    following are reported when building the UFS driver with W=1:
    
    drivers/scsi/ufs/tc-dwc-g210-pci.c:60: error: Cannot parse struct or union!
    drivers/scsi/ufs/tc-dwc-g210-pltfrm.c:26: warning: cannot understand function prototype: 'struct ufs_hba_variant_ops tc_dwc_g210_20bit_pltfm_hba_vops = '
    
    Signed-off-by: Bart Van Assche <bart.vanassche@wdc.com>
    Cc: Vivek Gautam <vivek.gautam@codeaurora.org>
    Cc: Stanislav Nijnikov <stanislav.nijnikov@wdc.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit ec92b59cc03c3d5757449c1c9344524e088df2bd
Author: Stanislav Nijnikov <stanislav.nijnikov@wdc.com>
Date:   Thu Feb 15 14:14:11 2018 +0200

    scsi: ufs: sysfs: attributes
    
    This patch introduces a sysfs group entry for the UFS attributes. The
    group adds "attributes" folder under the UFS driver sysfs entry
    (/sys/bus/platform/drivers/ufshcd/*). The attributes are shown
    as hexadecimal numbers. The full information about the attributes could
    be found at UFS specifications 2.1.
    
    Signed-off-by: Stanislav Nijnikov <stanislav.nijnikov@wdc.com>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit d10b2a8ea8fd0d6c8a667dc1950c8c061bfbbcdd
Author: Stanislav Nijnikov <stanislav.nijnikov@wdc.com>
Date:   Thu Feb 15 14:14:10 2018 +0200

    scsi: ufs: sysfs: flags
    
    This patch introduces a sysfs group entry for the UFS flags. The group adds
    "flags" folder under the UFS driver sysfs entry
    (/sys/bus/platform/drivers/ufshcd/*). The flags are shown as boolean value
    ("true" or "false"). The full information about the UFS flags could be
    found at UFS specifications 2.1.
    
    Signed-off-by: Stanislav Nijnikov <stanislav.nijnikov@wdc.com>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit d829fc8a1058851f1058b4a29ea02da125c1684a
Author: Stanislav Nijnikov <stanislav.nijnikov@wdc.com>
Date:   Thu Feb 15 14:14:09 2018 +0200

    scsi: ufs: sysfs: unit descriptor
    
    This patch introduces a sysfs group entry for the UFS unit descriptor
    parameters. The group adds "unit_descriptor" folder under the corresponding
    SCSI device sysfs entry (/sys/class/scsi_device/*/device/). The parameters
    are shown as hexadecimal numbers. The full information about the parameters
    could be found at UFS specifications 2.1.
    
    Signed-off-by: Stanislav Nijnikov <stanislav.nijnikov@wdc.com>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 2238d31cdeabc585de5869efd11856815aa4dd13
Author: Stanislav Nijnikov <stanislav.nijnikov@wdc.com>
Date:   Thu Feb 15 14:14:07 2018 +0200

    scsi: ufs: sysfs: string descriptors
    
    This patch introduces a sysfs group entry for the UFS string descriptors.
    The group adds "string_descriptors" folder under the UFS driver
    sysfs entry (/sys/bus/platform/drivers/ufshcd/*). The folder will contain
    5 files that will show string values defined by the UFS spec:
    a manufacturer name, a product name, an OEM id, a serial number and a
    product revision.  The full information about the string descriptors
    could be found at UFS specifications 2.1.
    
    Signed-off-by: Stanislav Nijnikov <stanislav.nijnikov@wdc.com>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit c2e6e283c52f3a2c4a99774b36bcc88e7cbd5eb7
Author: Stanislav Nijnikov <stanislav.nijnikov@wdc.com>
Date:   Thu Feb 15 14:14:06 2018 +0200

    scsi: ufs: sysfs: power descriptor
    
    This patch introduces a sysfs group entry for the UFS power descriptor
    parameters. The group adds "power_descriptor" folder under the UFS driver
    sysfs entry (/sys/bus/platform/drivers/ufshcd/*). The parameters are shown
    as hexadecimal numbers. The full information about the parameters could be
    found at UFS specifications 2.1.
    
    Signed-off-by: Stanislav Nijnikov <stanislav.nijnikov@wdc.com>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit c648c2d27f168ae4faeb43f8c3074226aae3862c
Author: Stanislav Nijnikov <stanislav.nijnikov@wdc.com>
Date:   Thu Feb 15 14:14:05 2018 +0200

    scsi: ufs: sysfs: health descriptor
    
    This patch introduces a sysfs group entry for the UFS health descriptor
    parameters. The group adds "health_descriptor" folder under the UFS driver
    sysfs entry (/sys/bus/platform/drivers/ufshcd/*). The parameters are shown
    as hexadecimal numbers. The full information about the parameters could be
    found at UFS specifications 2.1.
    
    Signed-off-by: Stanislav Nijnikov <stanislav.nijnikov@wdc.com>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit c720c091222e26d46c0fd9c70144a0f916bf3993
Author: Stanislav Nijnikov <stanislav.nijnikov@wdc.com>
Date:   Thu Feb 15 14:14:04 2018 +0200

    scsi: ufs: sysfs: geometry descriptor
    
    This patch introduces a sysfs group entry for the UFS geometry descriptor
    parameters. The group adds "geometry_descriptor" folder under the UFS
    driver sysfs entry (/sys/bus/platform/drivers/ufshcd/*). The parameters
    are shown as hexadecimal numbers. The full information about the parameters
    could be found at UFS specifications 2.1.
    
    Signed-off-by: Stanislav Nijnikov <stanislav.nijnikov@wdc.com>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 8c2582bfbd9abe84b9cf435996aa720a84f908c4
Author: Stanislav Nijnikov <stanislav.nijnikov@wdc.com>
Date:   Thu Feb 15 14:14:03 2018 +0200

    scsi: ufs: sysfs: interconnect descriptor
    
    This patch introduces a sysfs group entry for the UFS interconnect
    descriptor parameters. The group adds "interconnect_descriptor" folder
    under the UFS driver sysfs entry (/sys/bus/platform/drivers/ufshcd/*).
    The parameters are shown as hexadecimal numbers. The full information
    about the parameters could be found at UFS specifications 2.1.
    
    Signed-off-by: Stanislav Nijnikov <stanislav.nijnikov@wdc.com>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 45bced87e79316ecd868aee8f187284025792c5f
Author: Stanislav Nijnikov <stanislav.nijnikov@wdc.com>
Date:   Thu Feb 15 14:14:02 2018 +0200

    scsi: ufs: sysfs: device descriptor
    
    This patch introduces a sysfs group entry for the UFS device descriptor
    parameters. The group adds "device_descriptor" folder under the UFS driver
    sysfs entry (/sys/bus/platform/drivers/ufshcd/*). The parameters are shown
    as hexadecimal numbers. The full information about the parameters could be
    found at UFS specifications 2.1.
    
    Signed-off-by: Stanislav Nijnikov <stanislav.nijnikov@wdc.com>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit cbb6813ee771abc17a713432f31820581eafd4ae
Author: Stanislav Nijnikov <stanislav.nijnikov@wdc.com>
Date:   Thu Feb 15 14:14:01 2018 +0200

    scsi: ufs: sysfs: attribute group for existing sysfs entries.
    
    This patch introduces attribute group to show existing sysfs entries.
    
    Signed-off-by: Stanislav Nijnikov <stanislav.nijnikov@wdc.com>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 28bc6fb9596fe1e577d09fc17ee6e1bb051c6ba3
Merge: 0be600a a239034
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Jan 31 11:23:28 2018 -0800

    Merge tag 'scsi-misc' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi
    
    Pull SCSI updates from James Bottomley:
     "This is mostly updates of the usual driver suspects: arcmsr,
      scsi_debug, mpt3sas, lpfc, cxlflash, qla2xxx, aacraid, megaraid_sas,
      hisi_sas.
    
      We also have a rework of the libsas hotplug handling to make it more
      robust, a slew of 32 bit time conversions and fixes, and a host of the
      usual minor updates and style changes. The biggest potential for
      regressions is the libsas hotplug changes, but so far they seem stable
      under testing"
    
    * tag 'scsi-misc' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi: (313 commits)
      scsi: qla2xxx: Fix logo flag for qlt_free_session_done()
      scsi: arcmsr: avoid do_gettimeofday
      scsi: core: Add VENDOR_SPECIFIC sense code definitions
      scsi: qedi: Drop cqe response during connection recovery
      scsi: fas216: fix sense buffer initialization
      scsi: ibmvfc: Remove unneeded semicolons
      scsi: hisi_sas: fix a bug in hisi_sas_dev_gone()
      scsi: hisi_sas: directly attached disk LED feature for v2 hw
      scsi: hisi_sas: devicetree: bindings: add LED feature for v2 hw
      scsi: megaraid_sas: NVMe passthrough command support
      scsi: megaraid: use ktime_get_real for firmware time
      scsi: fnic: use 64-bit timestamps
      scsi: qedf: Fix error return code in __qedf_probe()
      scsi: devinfo: fix format of the device list
      scsi: qla2xxx: Update driver version to 10.00.00.05-k
      scsi: qla2xxx: Add XCB counters to debugfs
      scsi: qla2xxx: Fix queue ID for async abort with Multiqueue
      scsi: qla2xxx: Fix warning for code intentation in __qla24xx_handle_gpdb_event()
      scsi: qla2xxx: Fix warning during port_name debug print
      scsi: qla2xxx: Fix warning in qla2x00_async_iocb_timeout()
      ...

commit 84af7e8b895088d89f246d6b0f82717fafdebf61
Author: Sujit Reddy Thumma <sthumma@codeaurora.org>
Date:   Wed Jan 24 09:52:35 2018 +0530

    scsi: ufs: Enable quirk to ignore sending WRITE_SAME command
    
    WRITE_SAME command is not supported by UFS. Enable a quirk for the upper
    level drivers to not send WRITE SAME command.
    
    [mkp: botched patch, applied by hand]
    
    Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Asutosh Das <asutoshd@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit cffe3ff34668ad753cbd5a4e5481f235021c49e4
Author: kwmad.kim@samsung.com <kwmad.kim@samsung.com>
Date:   Tue Nov 28 14:35:29 2017 +0900

    scsi: ufs: add some definitions included in UFS HCI specification
    
    These would be used in the future in some specific drivers.
    
    Signed-off-by: Kiwoong Kim <kwmad.kim@samsung.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 727535903bea924c4f73abb202c4b3e85fff0ca4
Author: Gustavo A. R. Silva <garsilva@embeddedor.com>
Date:   Mon Nov 20 08:12:29 2017 -0600

    scsi: ufs: ufshcd: fix potential NULL pointer dereference in ufshcd_config_vreg
    
    _vreg_ is being dereferenced before it is null checked, hence there is a
    potential null pointer dereference.
    
    Fix this by moving the pointer dereference after _vreg_ has been null
    checked.
    
    This issue was detected with the help of Coccinelle.
    
    Fixes: aa4976130934 ("ufs: Add regulator enable support")
    Signed-off-by: Gustavo A. R. Silva <garsilva@embeddedor.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 670ffccb2f9183eb6cb32fe92257aea52b3f8a7d
Merge: 47f521b 341b2aa
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Nov 14 16:23:44 2017 -0800

    Merge tag 'scsi-misc' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi
    
    Pull SCSI updates from James Bottomley:
     "This is mostly updates of the usual suspects: lpfc, qla2xxx, hisi_sas,
      megaraid_sas, pm80xx, mpt3sas, be2iscsi, hpsa. and a host of minor
      updates.
    
      There's no major behaviour change or additions to the core in all of
      this, so the potential for regressions should be small (biggest
      potential being in the scsi error handler changes)"
    
    * tag 'scsi-misc' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi: (203 commits)
      scsi: lpfc: Fix hard lock up NMI in els timeout handling.
      scsi: mpt3sas: remove a stray KERN_INFO
      scsi: mpt3sas: cleanup _scsih_pcie_enumeration_event()
      scsi: aacraid: use timespec64 instead of timeval
      scsi: scsi_transport_fc: add 64GBIT and 128GBIT port speed definitions
      scsi: qla2xxx: Suppress a kernel complaint in qla_init_base_qpair()
      scsi: mpt3sas: fix dma_addr_t casts
      scsi: be2iscsi: Use kasprintf
      scsi: storvsc: Avoid excessive host scan on controller change
      scsi: lpfc: fix kzalloc-simple.cocci warnings
      scsi: mpt3sas: Update mpt3sas driver version.
      scsi: mpt3sas: Fix sparse warnings
      scsi: mpt3sas: Fix nvme drives checking for tlr.
      scsi: mpt3sas: NVMe drive support for BTDHMAPPING ioctl command and log info
      scsi: mpt3sas: Add-Task-management-debug-info-for-NVMe-drives.
      scsi: mpt3sas: scan and add nvme device after controller reset
      scsi: mpt3sas: Set NVMe device queue depth as 128
      scsi: mpt3sas: Handle NVMe PCIe device related events generated from firmware.
      scsi: mpt3sas: API's to remove nvme drive from sml
      scsi: mpt3sas: API 's to support NVMe drive addition to SML
      ...

commit 894025f24bd028942da3e602b87d9f7223109b14
Merge: fb0255f cdafb6d
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Nov 13 21:14:07 2017 -0800

    Merge tag 'usb-4.15-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb
    
    Pull USB/PHY updates from Greg KH:
     "Here is the big set of USB and PHY driver updates for 4.15-rc1.
    
      There is the usual amount of gadget and xhci driver updates, along
      with phy and chipidea enhancements. There's also a lot of SPDX tags
      and license boilerplate cleanups as well, which provide some churn in
      the diffstat.
    
      Other major thing is the typec code that moved out of staging and into
      the "real" part of the drivers/usb/ tree, which was nice to see
      happen.
    
      All of these have been in linux-next with no reported issues for a
      while"
    
    * tag 'usb-4.15-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb: (263 commits)
      usb: gadget: f_fs: Fix use-after-free in ffs_free_inst
      USB: usbfs: compute urb->actual_length for isochronous
      usb: core: message: remember to reset 'ret' to 0 when necessary
      USB: typec: Remove remaining redundant license text
      USB: typec: add SPDX identifiers to some files
      USB: renesas_usbhs: rcar?.h: add SPDX tags
      USB: chipidea: ci_hdrc_tegra.c: add SPDX line
      USB: host: xhci-debugfs: add SPDX lines
      USB: add SPDX identifiers to all remaining Makefiles
      usb: host: isp1362-hcd: remove a couple of redundant assignments
      USB: adutux: remove redundant variable minor
      usb: core: add a new usb_get_ptm_status() helper
      usb: core: add a 'type' parameter to usb_get_status()
      usb: core: introduce a new usb_get_std_status() helper
      usb: core: rename usb_get_status() 'type' argument to 'recip'
      usb: core: add Status Type definitions
      USB: gadget: Remove redundant license text
      USB: gadget: function: Remove redundant license text
      USB: gadget: udc: Remove redundant license text
      USB: gadget: legacy: Remove redundant license text
      ...

commit b24413180f5600bcb3bb70fbed5cf186b60864bd
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Nov 1 15:07:57 2017 +0100

    License cleanup: add SPDX GPL-2.0 license identifier to files with no license
    
    Many source files in the tree are missing licensing information, which
    makes it harder for compliance tools to determine the correct license.
    
    By default all files without license information are under the default
    license of the kernel, which is GPL version 2.
    
    Update the files which contain no license information with the 'GPL-2.0'
    SPDX license identifier.  The SPDX identifier is a legally binding
    shorthand, which can be used instead of the full boiler plate text.
    
    This patch is based on work done by Thomas Gleixner and Kate Stewart and
    Philippe Ombredanne.
    
    How this work was done:
    
    Patches were generated and checked against linux-4.14-rc6 for a subset of
    the use cases:
     - file had no licensing information it it.
     - file was a */uapi/* one with no licensing information in it,
     - file was a */uapi/* one with existing licensing information,
    
    Further patches will be generated in subsequent months to fix up cases
    where non-standard license headers were used, and references to license
    had to be inferred by heuristics based on keywords.
    
    The analysis to determine which SPDX License Identifier to be applied to
    a file was done in a spreadsheet of side by side results from of the
    output of two independent scanners (ScanCode & Windriver) producing SPDX
    tag:value files created by Philippe Ombredanne.  Philippe prepared the
    base worksheet, and did an initial spot review of a few 1000 files.
    
    The 4.13 kernel was the starting point of the analysis with 60,537 files
    assessed.  Kate Stewart did a file by file comparison of the scanner
    results in the spreadsheet to determine which SPDX license identifier(s)
    to be applied to the file. She confirmed any determination that was not
    immediately clear with lawyers working with the Linux Foundation.
    
    Criteria used to select files for SPDX license identifier tagging was:
     - Files considered eligible had to be source code files.
     - Make and config files were included as candidates if they contained >5
       lines of source
     - File already had some variant of a license header in it (even if <5
       lines).
    
    All documentation files were explicitly excluded.
    
    The following heuristics were used to determine which SPDX license
    identifiers to apply.
    
     - when both scanners couldn't find any license traces, file was
       considered to have no license information in it, and the top level
       COPYING file license applied.
    
       For non */uapi/* files that summary was:
    
       SPDX license identifier                            # files
       ---------------------------------------------------|-------
       GPL-2.0                                              11139
    
       and resulted in the first patch in this series.
    
       If that file was a */uapi/* path one, it was "GPL-2.0 WITH
       Linux-syscall-note" otherwise it was "GPL-2.0".  Results of that was:
    
       SPDX license identifier                            # files
       ---------------------------------------------------|-------
       GPL-2.0 WITH Linux-syscall-note                        930
    
       and resulted in the second patch in this series.
    
     - if a file had some form of licensing information in it, and was one
       of the */uapi/* ones, it was denoted with the Linux-syscall-note if
       any GPL family license was found in the file or had no licensing in
       it (per prior point).  Results summary:
    
       SPDX license identifier                            # files
       ---------------------------------------------------|------
       GPL-2.0 WITH Linux-syscall-note                       270
       GPL-2.0+ WITH Linux-syscall-note                      169
       ((GPL-2.0 WITH Linux-syscall-note) OR BSD-2-Clause)    21
       ((GPL-2.0 WITH Linux-syscall-note) OR BSD-3-Clause)    17
       LGPL-2.1+ WITH Linux-syscall-note                      15
       GPL-1.0+ WITH Linux-syscall-note                       14
       ((GPL-2.0+ WITH Linux-syscall-note) OR BSD-3-Clause)    5
       LGPL-2.0+ WITH Linux-syscall-note                       4
       LGPL-2.1 WITH Linux-syscall-note                        3
       ((GPL-2.0 WITH Linux-syscall-note) OR MIT)              3
       ((GPL-2.0 WITH Linux-syscall-note) AND MIT)             1
    
       and that resulted in the third patch in this series.
    
     - when the two scanners agreed on the detected license(s), that became
       the concluded license(s).
    
     - when there was disagreement between the two scanners (one detected a
       license but the other didn't, or they both detected different
       licenses) a manual inspection of the file occurred.
    
     - In most cases a manual inspection of the information in the file
       resulted in a clear resolution of the license that should apply (and
       which scanner probably needed to revisit its heuristics).
    
     - When it was not immediately clear, the license identifier was
       confirmed with lawyers working with the Linux Foundation.
    
     - If there was any question as to the appropriate license identifier,
       the file was flagged for further research and to be revisited later
       in time.
    
    In total, over 70 hours of logged manual review was done on the
    spreadsheet to determine the SPDX license identifiers to apply to the
    source files by Kate, Philippe, Thomas and, in some cases, confirmation
    by lawyers working with the Linux Foundation.
    
    Kate also obtained a third independent scan of the 4.13 code base from
    FOSSology, and compared selected files where the other two scanners
    disagreed against that SPDX file, to see if there was new insights.  The
    Windriver scanner is based on an older version of FOSSology in part, so
    they are related.
    
    Thomas did random spot checks in about 500 files from the spreadsheets
    for the uapi headers and agreed with SPDX license identifier in the
    files he inspected. For the non-uapi files Thomas did random spot checks
    in about 15000 files.
    
    In initial set of patches against 4.14-rc6, 3 files were found to have
    copy/paste license identifier errors, and have been fixed to reflect the
    correct identifier.
    
    Additionally Philippe spent 10 hours this week doing a detailed manual
    inspection and review of the 12,461 patched files from the initial patch
    version early this week with:
     - a full scancode scan run, collecting the matched texts, detected
       license ids and scores
     - reviewing anything where there was a license detected (about 500+
       files) to ensure that the applied SPDX license was correct
     - reviewing anything where there was no detection but the patch license
       was not GPL-2.0 WITH Linux-syscall-note to ensure that the applied
       SPDX license was correct
    
    This produced a worksheet with 20 files needing minor correction.  This
    worksheet was then exported into 3 different .csv files for the
    different types of files to be modified.
    
    These .csv files were then reviewed by Greg.  Thomas wrote a script to
    parse the csv files and add the proper SPDX tag to the file, in the
    format that the file expected.  This script was further refined by Greg
    based on the output to detect more types of files automatically and to
    distinguish between header and source .c files (which need different
    comment types.)  Finally Greg ran the script using the .csv files to
    generate the patches.
    
    Reviewed-by: Kate Stewart <kstewart@linuxfoundation.org>
    Reviewed-by: Philippe Ombredanne <pombredanne@nexb.com>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 052553af6a31b459adfdc6fd1eebced75de332fc
Author: Vivek Gautam <vivek.gautam@codeaurora.org>
Date:   Thu Oct 12 11:49:36 2017 +0530

    ufs/phy: qcom: Refactor to use phy_init call
    
    Refactor ufs_qcom_power_up_sequence() to get rid of ugly
    exported phy APIs and use the phy_init() and phy_power_on()
    to do the phy initialization.
    
    Signed-off-by: Vivek Gautam <vivek.gautam@codeaurora.org>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Kishon Vijay Abraham I <kishon@ti.com>

commit e9dc42c70c003746f2b541114f1fa19dc0ab232d
Author: Vivek Gautam <vivek.gautam@codeaurora.org>
Date:   Thu Oct 12 11:49:35 2017 +0530

    scsi/ufs: qcom: Set phy mode based on the controllers HS MODE
    
    Set the phy mode based on the UFS HS PA mode. This lets the
    controller let phy know the mode in which the PHY Adapter is
    running and set the phy rates accordingly.
    
    Signed-off-by: Vivek Gautam <vivek.gautam@codeaurora.org>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Kishon Vijay Abraham I <kishon@ti.com>

commit 395c81ad23f25ee68e234c6676f13d9cbce4a76e
Author: Alim Akhtar <alim.akhtar@samsung.com>
Date:   Tue Oct 3 20:51:25 2017 +0530

    scsi: ufs: Remove unused UFS_BIT() macro
    
    Since we have converted all the user of UFS_BIT() macro with the actual
    bit position, let remove unused UFS_BIT()macro.
    
    Signed-off-by: Alim Akhtar <alim.akhtar@samsung.com>
    Reviewed-by: Bart Van Assche <bart.vanassche@wdc.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 5b35c70d8651450091a84d3980c26639390e1fc2
Author: Alim Akhtar <alim.akhtar@samsung.com>
Date:   Tue Oct 3 20:51:24 2017 +0530

    scsi: ufs: Remove unused #defines
    
    HOST_ERROR_INDICATOR and DEVICE_ERROR_INDICATOR are not used
    anywhere. Also as per JESD223C specification, bit[7:4] are reserved.
    Lets remove these #defines.
    
    Signed-off-by: Alim Akhtar <alim.akhtar@samsung.com>
    Reviewed-by: Bart Van Assche <bart.vanassche@wdc.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 7e014efdc0b11ceff44d13e9be2d9a6063250c6c
Author: Alim Akhtar <alim.akhtar@samsung.com>
Date:   Tue Oct 3 20:51:23 2017 +0530

    scsi: ufs-qcom: Remove uses of UFS_BIT() macro
    
    Use actual bit position instead of UFS_BIT() macro. This patch also
    changes bit-17 to meaningful #define.
    
    This change is as per discussion here [1]
    [1] -> https://lkml.org/lkml/2017/8/28/786
    
    Signed-off-by: Alim Akhtar <alim.akhtar@samsung.com>
    Cc: Subhash Jadavani <subhashj@codeaurora.org>
    Reviewed-by: Bart Van Assche <bart.vanassche@wdc.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit cc81641a45252084878034620bcf80e15c9f9580
Author: Alim Akhtar <alim.akhtar@samsung.com>
Date:   Tue Oct 3 20:51:22 2017 +0530

    scsi: ufs: Change HCI macro to actual bit position
    
    Currently UFS HCI uses UFS_BIT() macro to get various bit position for
    the hardware registers status bits. Which makes code longer instead of
    shorter. This macro does not improve code readability as well.  Lets
    re-write these macro definition with the actual bit position.
    
    Suggested-by: Bart Van Assche <Bart.VanAssche@wdc.com>
    Signed-off-by: Alim Akhtar <alim.akhtar@samsung.com>
    Reviewed-by: Bart Van Assche <bart.vanassche@wdc.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 83dc7e3dea76b77b6bcc289eb86c5b5c145e8dff
Author: kehuanlin <chgokhl@gmail.com>
Date:   Wed Sep 6 17:58:39 2017 +0800

    scsi: ufs: fix wrong command type of UTRD for UFSHCI v2.1
    
    Since the command type of UTRD in UFS 2.1 specification is the same with
    UFS 2.0. And it assumes the future UFS specification will follow the
    same definition.
    
    Signed-off-by: kehuanlin <kehuanlin@pinecone.net>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 3d21fbdedc8b0a6a73528bc6fd2850fdc1e93031
Author: Huanlin Ke <chgokhl@gmail.com>
Date:   Fri Sep 22 18:31:47 2017 +0800

    scsi: ufs: continue to boot even with Boot LUN is disabled
    
    Several configurable fields of the Device Descriptor and the Unit
    Descriptors determine the Boot LUN status. The bBootEnable field and the
    bBootLunEn attribute is set to zero by default, so the Boot LUN is
    disabled by default.
    
    At which point the scsi device add for Boot LUN will fail, but we can
    continue to use the ufs device in fact. This failure shouldn't abort the
    device boot.
    
    Signed-off-by: Huanlin Ke <kehuanlin@pinecone.net>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 090171885f505ea6814ad6459e9982bb4444c245
Author: Zang Leigang <zangleigang@hisilicon.com>
Date:   Wed Sep 27 10:06:06 2017 +0800

    scsi: ufs: add ufs a command complete time stamp
    
    Signed-off-by: Zang Leigang <zangleigang@hisilicon.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 479da360570ac7195cbcd89c6a9d6360ae8fe8e1
Author: Zang Leigang <zangleigang@hisilicon.com>
Date:   Tue Sep 19 16:50:30 2017 +0800

    scsi: ufs: fix a pclint warning
    
    Signed-off-by: Zang Leigang <zangleigang@hisilicon.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 2a8ee61685a9fd7f054b0596865290baffe84c16
Author: Colin Ian King <colin.king@canonical.com>
Date:   Tue Sep 12 12:32:28 2017 +0100

    scsi: ufs: tc-dwc-g210: make arrays static, reduces object code size
    
    Don't populate const arrays on the stack, instead make them static.
    Makes the object code smaller by over 740 bytes.
    
    Before:
       text	   data	    bss	    dec	    hex	filename
       3840	    208	      0	   4048	    fd0	drivers/scsi/ufs/tc-dwc-g210.o
    
    After:
       text	   data	    bss	    dec	    hex	filename
       2679	    624	      0	   3303	    ce7	drivers/scsi/ufs/tc-dwc-g210.o
    
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Reviewed-by: Bart Van Assche <bart.vanassche@wdc.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit e002e65188e0b01adf24da0a0dfed4fd39281e19
Author: Zang Leigang <zangleigang@hisilicon.com>
Date:   Thu Aug 24 10:57:15 2017 +0800

    scsi: ufs: reqs and tasks were put in the wrong order
    
    Signed-off-by: Zang Leigang <zangleigang@hisilicon.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 8dc0da7981a3f9680c873e92e3ec17308377e3b9
Author: Zang Leigang <zangleigang@hisilicon.com>
Date:   Sat Jun 24 19:14:32 2017 +0800

    scsi: ufs: flush eh_work when eh_work scheduled.
    
    Forget a condition: eh_work scheduled but do not start to work.
    
    Signed-off-by: Zang Leigang <zangleigang@hisilicon.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 2c87ea97ce6a53fc8c98a796b34fed5b84aeff6b
Author: Adrian Hunter <adrian.hunter@intel.com>
Date:   Tue Jun 6 14:35:31 2017 +0300

    scsi: ufshcd-pci: Add Intel CNL support
    
    Add PCI id and variant ops for Intel CNL UFS host controller.
    
    Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 7b57338eca85c65a36d6f4715b053ee403c8ed95
Author: Adrian Hunter <adrian.hunter@intel.com>
Date:   Tue Jun 6 14:35:30 2017 +0300

    scsi: ufshcd-pci: Fix PM config
    
    Put PM functions under correct config options and use standard PM macros
    to set callbacks.
    
    Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 566ec9ad315b46e7056472f4cd1d1b79bbad62da
Author: Szymon Mielczarek <szymonx.mielczarek@intel.com>
Date:   Mon Jun 5 11:36:54 2017 +0300

    scsi: ufs: Tidy clocks list head usage
    
    Move the initialization of clocks list head to ufshcd_alloc_host() so
    that every driver doesn't have to do it. Remove checks for the list head
    being NULL because that is not possible.
    
    Signed-off-by: Szymon Mielczarek <szymonx.mielczarek@intel.com>
    Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 463f620b1256e0488d932088e04a372817e8c42e
Author: Michał Potomski <michalx.potomski@intel.com>
Date:   Fri May 12 08:36:27 2017 +0200

    scsi: ufs: Clean up some rpm/spm level SysFS nodes upon remove
    
    When reloading module these two attributes aren't cleaned up properly
    and they persist causing warnings when trying to load module
    again. Additionally they are not recreated properly due to that.
    
    Signed-off-by: Michał Potomski <michalx.potomski@intel.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 8d5e72dfdf0fa29a21143fd72746c6f43295ce9f
Merge: 2bd8040 e7731da
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu May 4 12:19:44 2017 -0700

    Merge tag 'scsi-misc' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi
    
    Pull SCSI updates from James Bottomley:
     "This update includes the usual round of major driver updates
      (hisi_sas, ufs, fnic, cxlflash, be2iscsi, ipr, stex). There's also the
      usual amount of cosmetic and spelling stuff"
    
    * tag 'scsi-misc' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi: (155 commits)
      scsi: qla4xxx: fix spelling mistake: "Tempalate" -> "Template"
      scsi: stex: make S6flag static
      scsi: mac_esp: fix to pass correct device identity to free_irq()
      scsi: aacraid: pci_alloc_consistent() failures on ARM64
      scsi: ufs: make ufshcd_get_lists_status() register operation obvious
      scsi: ufs: use MASK_EE_STATUS
      scsi: mac_esp: Replace bogus memory barrier with spinlock
      scsi: fcoe: make fcoe_e_d_tov and fcoe_r_a_tov static
      scsi: sd_zbc: Do not write lock zones for reset
      scsi: sd_zbc: Remove superfluous assignments
      scsi: sd: sd_zbc: Rename sd_zbc_setup_write_cmnd
      scsi: Improve scsi_get_sense_info_fld
      scsi: sd: Cleanup sd_done sense data handling
      scsi: sd: Improve sd_completed_bytes
      scsi: sd: Fix function descriptions
      scsi: mpt3sas: remove redundant wmb
      scsi: mpt: Move scsi_remove_host() out of mptscsih_remove_host()
      scsi: sg: reset 'res_in_use' after unlinking reserved array
      scsi: mvumi: remove code handling zero scsi_sg_count(scmd) case
      scsi: fusion: fix spelling mistake: "Persistancy" -> "Persistency"
      ...

commit 6cf161150d815da0ee8cff158b185bc33dca3a34
Author: Tomohiro Kusumi <tkusumi@tuxera.com>
Date:   Wed Apr 26 20:28:58 2017 +0300

    scsi: ufs: make ufshcd_get_lists_status() register operation obvious
    
    It could be just cmp 0xe instead of >>1 and cmp 0x7, with readable code.
    
    Signed-off-by: Tomohiro Kusumi <tkusumi@tuxera.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit d7e2ddd5e502c93dc29114cf6de5fba339b28e4d
Author: Tomohiro Kusumi <tkusumi@tuxera.com>
Date:   Thu Apr 20 15:01:44 2017 +0300

    scsi: ufs: use MASK_EE_STATUS
    
    MASK_EE_STATUS added by 66ec6d59 was unused, but it seems to have been
    defined to do this.
    
    Signed-off-by: Tomohiro Kusumi <tkusumi@tuxera.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit dbd34a61c343f73f835539592fba4bdba8832e05
Author: Szymon Mielczarek <szymonx.mielczarek@intel.com>
Date:   Wed Mar 29 08:19:21 2017 +0200

    Revert "scsi: ufs: add queries retry mechanism"
    
    This reverts commit 61e073590b82a539654626ecae91b8fab11db3f3.
    
    The patch introduced redundant query retries as we already had such
    mechanism provided with _retry functions.  Both ufshcd_read_desc and
    ufshcd_read_unit_desc_param functions call ufshcd_query_descriptor_retry
    wrapper.
    
    Signed-off-by: Szymon Mielczarek <szymonx.mielczarek@intel.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit d985c6eaa896c7f93846f97f1f7ab47aa57903ef
Author: Tomohiro Kusumi <tkusumi@tuxera.com>
Date:   Tue Mar 28 16:49:29 2017 +0300

    scsi: ufs: just use sizeof() for snprintf()
    
    Not much reason to use ARRAY_SIZE() when we know it's for a C string.
    
    Signed-off-by: Tomohiro Kusumi <tkusumi@tuxera.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 0b9961be101419def7f7249f8e2f9b28d28b8526
Author: Tomohiro Kusumi <tkusumi@tuxera.com>
Date:   Tue Mar 28 16:49:28 2017 +0300

    scsi: ufs: remove deprecated enum for hw interrupt
    
    These flags are no longer needed after 2fbd009b in 2013.
    
    Signed-off-by: Tomohiro Kusumi <tkusumi@tuxera.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit f6b254513cffedbd380b31ed7963cb639df319ee
Author: Tomohiro Kusumi <tkusumi@tuxera.com>
Date:   Tue Mar 28 16:49:27 2017 +0300

    scsi: ufs: add missing macros for register bits from UFSHCI spec
    
    Add macros for register bits that can be found in JESD223C (v2.1).
    
    Not all registers are defined in ufshci.h (i.e. some are unused whether
    macros are defined or undefined), but all the bits for those registers
    that are already defined should appear here.
    
    Signed-off-by: Tomohiro Kusumi <tkusumi@tuxera.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 9c490d2dd36896a1179165808a8034956e9605f6
Author: Tomohiro Kusumi <tkusumi@tuxera.com>
Date:   Tue Mar 28 16:49:26 2017 +0300

    scsi: ufs: non functional macro fix
    
    Not having () isn't likely to do any harm in this case, but all the
    other macros below do have it. Also add "are" in a comment.
    
    Signed-off-by: Tomohiro Kusumi <tkusumi@tuxera.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 4a8eec2bac8454043d12be1ca7489ce3632d1137
Author: Tomohiro Kusumi <tkusumi@tuxera.com>
Date:   Tue Mar 28 16:49:25 2017 +0300

    scsi: ufs: use existing macro CONTROLLER_ENABLE to test register bit
    
    Signed-off-by: Tomohiro Kusumi <tkusumi@tuxera.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit c9e6010b4ef532db719c10464cf62fe2785aeeab
Author: Tomohiro Kusumi <tkusumi@tuxera.com>
Date:   Tue Mar 28 16:49:24 2017 +0300

    scsi: ufs: make ufshcd_is_{device_present, hba_active}() return bool
    
    ufshcd driver generally uses bool for is_xxx type things instead of int,
    so conform to its style.
    
    Signed-off-by: Tomohiro Kusumi <tkusumi@tuxera.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 031d1e0f2dc41be0859e6933fcf8b088098f7913
Author: Tomohiro Kusumi <tkusumi@tuxera.com>
Date:   Thu Mar 23 12:49:04 2017 +0200

    scsi: ufs: fix wrong/ambiguous fall through comments
    
    These aren't really falling through to anywhere meaningful.
    
    Signed-off-by: Tomohiro Kusumi <tkusumi@tuxera.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit a3902ee98304324f681088203391b5c0353ce977
Author: Jaehoon Chung <jh80.chung@samsung.com>
Date:   Tue Mar 21 21:19:57 2017 +0900

    scsi: ufs: remove the duplicated checking for supporting clkscaling
    
    There are same conditions for checking whether supporting clkscaling or
    not. When ufshcd is supporting clkscaling, active_reqs should be
    decreased by one.
    
    [mkp: addressed comment from Bartlomiej]
    
    Signed-off-by: Jaehoon Chung <jh80.chung@samsung.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 645b8ef5943f95b74240568105ce2be21c6640b4
Author: Tomas Winkler <tomas.winkler@intel.com>
Date:   Tue Mar 14 14:19:36 2017 +0200

    scsi: ufshcd-platform: remove the useless cast in ERR_PTR/IS_ERR
    
    IS_ERR and ERR_PTR already forcefully cast their argument, hence there
    is no need for additional (complex) casting.
    
    Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 949d7fa158b2b1af533bdb1af0dda8ab103ac58d
Author: Tomas Winkler <tomas.winkler@intel.com>
Date:   Sun Mar 12 12:22:02 2017 +0200

    scsi: ufs: don't check unsigned type for a negative value
    
    Fix compilation warning:
    
    drivers/scsi/ufs/ufshcd.c:7645:13: warning: comparison of unsigned
    expression < 0 is always false [-Wtype-limits]
    if ((value < UFS_PM_LVL_0) || (value >= UFS_PM_LVL_MAX))
    
    Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit a4b0e8a4e92b1baa860e744847fbdb84a50a5071
Author: Potomski, MichalX <michalx.potomski@intel.com>
Date:   Thu Feb 23 09:05:30 2017 +0000

    scsi: ufs: Factor out ufshcd_read_desc_param
    
    Since in UFS 2.1 specification some of the descriptor lengths differs
    from 2.0 specification and some devices, which are reporting spec
    version 2.0 have different descriptor lengths we can not rely on
    hardcoded values taken from 2.0 specification. This patch introduces
    reading these lengths per each device from descriptor headers at probe
    time to ensure their correctness.
    
    Signed-off-by: Michal' Potomski <michalx.potomski@intel.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit fcbfffe2c5cbec0c1721b2261c316b961ad50208
Author: Christoph Hellwig <hch@lst.de>
Date:   Thu Feb 23 16:02:37 2017 +0100

    scsi: remove scsi_execute_req_flags
    
    And switch all callers to use scsi_execute instead.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit f22aaec97d889f3fbf89b185309bdc98b8202eda
Author: Subhash Jadavani <subhashj@codeaurora.org>
Date:   Fri Feb 17 13:53:41 2017 -0800

    scsi: ufs-qcom: remove redundant condition check
    
    Dan Carpenter <dan.carpenter@oracle.com> reported this:
    
    The patch 9c46b8676271: "scsi: ufs-qcom: dump additional testbus
    registers" from Feb 3, 2017, leads to the following static checker
    warning:
    
        drivers/scsi/ufs/ufs-qcom.c:1531 ufs_qcom_testbus_cfg_is_ok()
        warn: impossible condition
                    '(host->testbus.select_minor > 255) => (0-255 > 255)'
    
    drivers/scsi/ufs/ufs-qcom.c
      1517  static bool ufs_qcom_testbus_cfg_is_ok(struct ufs_qcom_host *host)
      1518  {
      1519          if (host->testbus.select_major >= TSTBUS_MAX) {
      1520               dev_err(host->hba->dev,
      1521                 "%s: UFS_CFG1[TEST_BUS_SEL} may not equal 0x%05X\n",
      1522                  __func__, host->testbus.select_major);
      1523                  return false;
      1524          }
      1525
      1526          /*
      1527           * Not performing check for each individual select_major
      1528           * mappings of select_minor, since there is no harm in
      1529           * configuring a non-existent select_minor
      1530           */
      1531          if (host->testbus.select_minor > 0xFF) {
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    
    It might make sense to keep this check.  I don't know.  But it's
    confusing that 0xFF is a magic number.  Better to make it a define.
    
      1532                  dev_err(host->hba->dev,
      1533                       "%s: 0x%05X is not a legal testbus option\n",
      1534                        __func__, host->testbus.select_minor);
      1535                  return false;
      1536          }
      1537
      1538          return true;
      1539  }
    ---
    
    As data type of "select_minor" is u8, above check is redundant. This
    change removes it.
    
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 7942f7b568d7cda28c3aea9c81d48490769c853c
Author: Venkat Gopalakrishnan <venkatg@codeaurora.org>
Date:   Fri Feb 3 16:58:24 2017 -0800

    scsi: ufs: dump hw regs on link failures
    
    Dump host state, power info and host/vendor specific registers
    on link failures. This provides useful info to debug the failures.
    
    Signed-off-by: Venkat Gopalakrishnan <venkatg@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 9c46b8676271857e7580f120cb6f8eefa7239ff4
Author: Venkat Gopalakrishnan <venkatg@codeaurora.org>
Date:   Fri Feb 3 16:58:12 2017 -0800

    scsi: ufs-qcom: dump additional testbus registers
    
    Change testbus default config, dump additional testbus registers along
    with other debug vendor specific registers. These additional info are
    useful in debugging link related failures.
    
    Signed-off-by: Venkat Gopalakrishnan <venkatg@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 0701e49da9852e455d63efb7bcd225d3c8af11df
Author: subhashj@codeaurora.org <subhashj@codeaurora.org>
Date:   Fri Feb 3 16:58:01 2017 -0800

    scsi: ufs: kick start clock scaling only after device detection
    
    UFS clock scaling might start kicking in even before the device
    is running at the fastest interface speed which is undesirable.
    This change moves the clock scaling kick start only after the
    device is detected and running at the fastest interface speed.
    
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 401f1e4490ee9d6e74d7514903dd01dae61488bf
Author: subhashj@codeaurora.org <subhashj@codeaurora.org>
Date:   Fri Feb 3 16:57:39 2017 -0800

    scsi: ufs: don't suspend clock scaling during clock gating
    
    Currently we are suspending clock scaling during clock gating which doesn't
    allow us to have clock gating timeout lower than clock scaling polling
    window. If clock gating timeout is smaller than the clock scaling polling
    window then we will mostly suspend the clock scaling before clock scaling
    polling window expires and we might get stuck in same state (scaled down
    or scaled up) for quite a long time. And for this reason, we have clock
    gating timeout (150ms) greater than clock scaling polling window (100ms).
    
    We would like to have aggressive clock gating timeout even lower than the
    clock scaling polling window hence this change is decoupling the clock
    scaling suspend/resume from clock gate/ungate. We will not suspend the
    clock scaling as part of clock gating instead clock scaling context will
    schedule scaling suspend work if there are no more pending transfer
    requests.
    
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 6ba65588381d59ee412b7cb83752d582df731d5c
Author: Gilad Broner <gbroner@codeaurora.org>
Date:   Fri Feb 3 16:57:28 2017 -0800

    scsi: ufs: add host state prints in failure cases
    
    Whenever some UFS failure occurs the driver prints the UFS
    registers in order to help with analysis of the failure.
    However this may not be sufficient in some cases, so having
    the host controller state as it is represented and managed in
    the driver will contribute to analysis efforts.
    Added prints of various fields in the hba struct which may be
    of interest.
    
    Signed-off-by: Gilad Broner <gbroner@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit a3cd5ec55f6c72834f812f9150deb38ddc019782
Author: subhashj@codeaurora.org <subhashj@codeaurora.org>
Date:   Fri Feb 3 16:57:02 2017 -0800

    scsi: ufs: add load based scaling of UFS gear
    
    UFS driver's load based clock scaling feature scales down the ufs related
    clocks in order to allow low power modes of chipsets. UniPro 1.6 supports
    maximum gear up to HS-G3 (High Speed Gear3) and some of the chipsets
    low power modes may not be allowed in HS-G3 hence this change adds support
    to scale gear between HS-G3 and HS-G1 based on same existing load based
    clock scaling logic.
    
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 7fabb77b3aa01651f9ebc7c139a253bcabb06880
Author: Gilad Broner <gbroner@codeaurora.org>
Date:   Fri Feb 3 16:56:50 2017 -0800

    scsi: ufs: reduce printout for aborted requests
    
    Details printed for each request that is aborted can overload the
    target as there can be several requests that are aborted at once.
    This change will print full request details only for the first
    aborted request since the last link reset, and minimal details
    for other subsequent requests.
    
    Signed-off-by: Gilad Broner <gbroner@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit e0b299e36004f58f844b776df58f6882877bb18a
Author: Gilad Broner <gbroner@codeaurora.org>
Date:   Fri Feb 3 16:56:40 2017 -0800

    scsi: ufs: skip request abort task when previous aborts failed
    
    On certain error conditions request abort task itself might fail
    when aborting a request. In such case, subsequent request aborts
    should skip issuing the abort task as it is expected to fail as well,
    and device reset handler will be called next.
    
    Signed-off-by: Gilad Broner <gbroner@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 73eba2be9203c0eef37df6939ebba4d34227f284
Author: Subhash Jadavani <subhashj@codeaurora.org>
Date:   Tue Jan 10 16:48:25 2017 -0800

    scsi: ufs: fix arguments order some trace calls
    
    Colin Ian King reported that with commit 7ff5ab473633 ("scsi: ufs: add
    tracing support") static analysis is reporting that we may have swapped
    arguments on calls to:
    
        trace_ufshcd_runtime_resume,
        trace_ufshcd_runtime_suspend,
        trace_ufshcd_system_suspend,
        trace_ufshcd_system_resume,
    and trace_ufshcd_init
    
    Where:
        hba->uic_link_state is passed to dev_state
        hba->curr_dev_pwr_mode is passed to link_state
    
    This wasn't intentional so it's a bug. This change fixed this bug.
    
    Reported-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Acked-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 93fdd5ac64bbe80dac6416f048405362d7ef0945
Author: Tomas Winkler <tomas.winkler@intel.com>
Date:   Thu Jan 5 10:45:12 2017 +0200

    scsi: ufs: refactor device descriptor reading
    
    Pull device descriptor reading out of ufs quirk so it can be used also
    for other purposes.
    
    Revamp the fixup setup:
    
    1. Rename ufs_device_info to ufs_dev_desc as very similar name
       ufs_dev_info is already in use.
    
    2. Make the handlers static as they are not used out of the ufshdc.c
       file.
    
    [mkp: applied by hand]
    
    Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit d79713f911918e43576338e33396c7f889f5d272
Author: Tomas Winkler <tomas.winkler@intel.com>
Date:   Thu Jan 5 10:45:11 2017 +0200

    scsi: ufs: ufshcd_get_max_icc_level fix endianity handling
    
    Reading big endian value from a buffer requires explicit cast.
    Fix sparse warning:
    drivers/scsi/ufs/ufshcd.c:4825:24: warning: cast to restricted __be16
    
    Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 8209b6d54e7e2f8b305da831c78629b65d144f91
Author: Tomas Winkler <tomas.winkler@intel.com>
Date:   Thu Jan 5 10:45:10 2017 +0200

    scsi: ufs: unexport descritpor reading functions
    
    Unexport ufshcd_read_device_desc and ufshcd_read_string_desc there is no
    really possibility to calling them directly outside of UFS context.
    
    Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 26cf9155bf6b7deeaafe8fc8f233fca5e5398c92
Author: Tomas Winkler <tomas.winkler@intel.com>
Date:   Thu Jan 5 10:45:09 2017 +0200

    scsi: ufs: ufshcd_query_descriptor_retry should be static
    
    Fix the following compilation warning:
    
    drivers/scsi/ufs/ufshcd.c:2076:5: warning: no previous prototype for
     ufshcd_query_descriptor_retry  [-Wmissing-prototypes]
    
    Also do not export the function, it should not be used out of ufs
    context.
    
    Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit ab3dabb3e8cf077850f20610f73a0def1fed10cb
Author: Javier Martinez Canillas <javier@osg.samsung.com>
Date:   Mon Jan 2 11:04:58 2017 -0300

    scsi: ufs-qcom: Fix module autoload
    
    If the driver is built as a module, autoload won't work because the module
    alias information is not filled. So user-space can't match the registered
    device with the corresponding module.
    
    Export the module alias information using the MODULE_DEVICE_TABLE() macro.
    
    Before this patch:
    
    $ modinfo drivers/scsi/ufs/ufs-qcom.ko | grep alias
    $
    
    After this patch:
    
    $ modinfo drivers/scsi/ufs/ufs-qcom.ko | grep alias
    alias:          of:N*T*Cqcom,ufshcC*
    alias:          of:N*T*Cqcom,ufshc
    
    Signed-off-by: Javier Martinez Canillas <javier@osg.samsung.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit ff8e20c66249210563aaea5382b08c94933f720d
Author: Dolev Raviv <draviv@codeaurora.org>
Date:   Thu Dec 22 18:42:18 2016 -0800

    scsi: ufs: Improve fatal error logs
    
    Errors such as UIC error, illegal OCS values, and others may require
    more information for debugging. Such information could be hibern8 events,
    events sequences, recoverable errors, error history, and more.
    This patch improves tracking of important errors and events in debug level
    to be enabled when debugging a such issues. It includes:
    * UIC error history
    * Successful hibern8 events
    * Successful command after hibern8 exit
    * Clk-freq info
    * Failed device command
    * Infrastructure for dumping host controller debug information
    
    Signed-off-by: Dolev Raviv <draviv@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 1a07f2d96eb9085396cbfb2d6d42d4003aa2934a
Author: Lee Susman <lsusman@codeaurora.org>
Date:   Thu Dec 22 18:42:03 2016 -0800

    scsi: ufs: add trace event for ufs commands
    
    Use the ftrace infrastructure to conditionally trace ufs command events.
    New trace event is created, which samples the following ufs command data:
    - device name
    - optional identification string
    - task tag
    - doorbell register
    - number of transfer bytes
    - interrupt status register
    - request start LBA
    - command opcode
    
    Currently we only fully trace read(10) and write(10) commands.
    All other commands which pass through ufshcd_send_command() will be
    printed with "-1" in the lba and transfer_len fields.
    
    Usage:
    	echo 1 > /sys/kernel/debug/tracing/events/ufs/enable
    	cat /sys/kernel/debug/tracing/trace_pipe
    
    Signed-off-by: Lee Susman <lsusman@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 911a0771b6fa7bac5eae753c17c87ecb77c77283
Author: subhashj@codeaurora.org <subhashj@codeaurora.org>
Date:   Thu Dec 22 18:41:48 2016 -0800

    scsi: ufs: add time profiling support
    
    This patch adds the profiling support for some of the time critical
    operations like hibern8 enter/exit, clock gating & clock scaling.
    
    Reviewed-by: Venkat Gopalakrishnan <venkatg@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit d2aebb9b269b3e094b2d2d03121c3863b683a25b
Author: subhashj@codeaurora.org <subhashj@codeaurora.org>
Date:   Thu Dec 22 18:41:33 2016 -0800

    scsi: ufs: fix setting init power mode
    
    Immediately after successful UFS link startup, UFS link power mode would
    be in PWM-G1, 1-lane, SLOW-AUTO mode. But currently we are doing few
    of the DME local/peer attributes access before setting the "hba->pwr_info"
    to default power mode. If we are doing link startup as part of error
    recovery then old power mode might be set to FAST mode and doing DME peer
    access (after link startup but before updating "hba->pwr_info" to default
    power mode) unintentionally tries to switch from FAST to FAST_AUTO mode (if
    UFSHCD_QUIRK_DME_PEER_ACCESS_AUTO_MODE quirk is enabled).
    
    Above issue is fixed by setting the default power mode immediately after
    successful link startup.
    
    Reviewed-by: Sahitya Tummala <stummala@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 4e768e7645ec4ffa92ee163643777b261ae97142
Author: subhashj@codeaurora.org <subhashj@codeaurora.org>
Date:   Thu Dec 22 18:41:22 2016 -0800

    scsi: ufs: add capability to keep auto bkops always enabled
    
    UFS device requires to perform bkops (back ground operations) periodically
    but host can control (via auto-bkops parameter of device) when device can
    perform bkops based on its performance requirements. In general, host
    would like to enable the device's auto-bkops only when it's not doing any
    regular data transfer but sometimes device may not behave properly if host
    keeps the auto-bkops disabled. This change adds the capability to let the
    device auto-bkops always enabled except suspend.
    
    Reviewed-by: Sahitya Tummala <stummala@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 0c8f75869ed8941fcbf21643fced7bc652f68f14
Author: subhashj@codeaurora.org <subhashj@codeaurora.org>
Date:   Thu Dec 22 18:41:11 2016 -0800

    scsi: ufs: set default UFS power management level
    
    UFS device and link can be put in multiple different low power modes hence
    UFS driver supports multiple different low power modes.
    This change sets the default UFS power management level which should put
    the link hibernate state and device in sleep state. This default power
    management level gives good  power savings with relatively less enter/exit
    latencies.
    
    Reviewed-by: Yaniv Gardi <ygardi@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 09690d5a6ae1b7e4cb5ac429c311b99d09352c12
Author: subhashj@codeaurora.org <subhashj@codeaurora.org>
Date:   Thu Dec 22 18:41:00 2016 -0800

    scsi: ufs: provide sysfs attribute to select the PM level
    
    This patch provides the sysfs attribute to choose the power management
    level for UFS runtime and system suspend.
    
    Reviewed-by: Sujit Reddy Thumma <sthumma@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit fcb0c4b08a18fe35c3adc594d3edc8e335ff7960
Author: Sahitya Tummala <stummala@codeaurora.org>
Date:   Thu Dec 22 18:40:50 2016 -0800

    scsi: ufs: Add sysfs node to dynamically control clock scaling
    
    Provide an option to enable/disable clock scaling during runtime.
    Write 1/0 to "clkscale_enable" sysfs node to enable/disable clock
    scaling.
    
    Signed-off-by: Sahitya Tummala <stummala@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit b427411abb3d61c234cb7dd58bc9b9f92c0fd8cb
Author: Sahitya Tummala <stummala@codeaurora.org>
Date:   Thu Dec 22 18:40:39 2016 -0800

    scsi: ufs: Add sysfs node to dynamically control clock gating
    
    Provide an option to enable/disable clock gating during runtime.
    Write 1 or 0 to "clkgate_enable" sysfs node to enable/disable
    clock gating.
    
    Signed-off-by: Sahitya Tummala <stummala@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit e7d38257a40f880c6625fac33956d5e99dcd63a6
Author: Dolev Raviv <draviv@codeaurora.org>
Date:   Thu Dec 22 18:40:07 2016 -0800

    scsi: ufs: fix multiple ufs spec violation
    
    When a command to a W-LU is timed out via scsi, error handling
    will treat it as any other LU and send commands such as
    START_STOP with wrong format or task abort. Those commands are
    illegal for W-LU according to the UFS spec.
    To solve it, when an error is recognized those steps are skipped
    and the last step, reset and restore process, is initiated.
    
    Signed-off-by: Dolev Raviv <draviv@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 7ff5ab4736333431311a4cbbfb574b155758b08c
Author: subhashj@codeaurora.org <subhashj@codeaurora.org>
Date:   Thu Dec 22 18:39:51 2016 -0800

    scsi: ufs: add tracing support
    
    This change adds the ftrace support for following:
    1. UFS initialization time
    2. Clock gating states
    3. Clock scaling states
    4. Power management APIs latency
    5. BKOPs enable/disable
    
    Usage:
    	echo 1 > /sys/kernel/debug/tracing/events/ufs/enable
    	cat /sys/kernel/debug/tracing/trace_pipe
    
    Reviewed-by: Sahitya Tummala <stummala@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 66cc820f9cbf12f1c6c84fb7392847b7fa5e76c4
Author: Dolev Raviv <draviv@codeaurora.org>
Date:   Thu Dec 22 18:39:42 2016 -0800

    scsi: ufs: dump debug info during failures
    
    Inserts driver dumps for UFS Host Controller registers, Transfer Requests
    and Task Management Requests.
    The dumps will occur on driver initialization failure, ufshcd_abort() and
    on error handling path.
    
    Signed-off-by: Dolev Raviv <draviv@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 8b0e195314fabd58a331c4f7b6db75a1565535d7
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Sun Dec 25 12:30:41 2016 +0100

    ktime: Cleanup ktime_set() usage
    
    ktime_set(S,N) was required for the timespec storage type and is still
    useful for situations where a Seconds and Nanoseconds part of a time value
    needs to be converted. For anything where the Seconds argument is 0, this
    is pointless and can be replaced with a simple assignment.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Peter Zijlstra <peterz@infradead.org>

commit 3eff4c782857d284dc3b11c6db0cab4a263427b7
Merge: d2a1452 ae2aae2
Author: James Bottomley <James.Bottomley@HansenPartnership.com>
Date:   Thu Dec 22 12:32:33 2016 -0800

    Merge branch 'misc' into for-linus

commit a829a8445f09036404060f4d6489cb13433f4304
Merge: 84b6079 f5b893c
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Dec 14 10:49:33 2016 -0800

    Merge tag 'scsi-misc' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi
    
    Pull SCSI updates from James Bottomley:
     "This update includes the usual round of major driver updates (ncr5380,
      lpfc, hisi_sas, megaraid_sas, ufs, ibmvscsis, mpt3sas).
    
      There's also an assortment of minor fixes, mostly in error legs or
      other not very user visible stuff. The major change is the
      pci_alloc_irq_vectors replacement for the old pci_msix_.. calls; this
      effectively makes IRQ mapping generic for the drivers and allows
      blk_mq to use the information"
    
    * tag 'scsi-misc' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi: (256 commits)
      scsi: qla4xxx: switch to pci_alloc_irq_vectors
      scsi: hisi_sas: support deferred probe for v2 hw
      scsi: megaraid_sas: switch to pci_alloc_irq_vectors
      scsi: scsi_devinfo: remove synchronous ALUA for NETAPP devices
      scsi: be2iscsi: set errno on error path
      scsi: be2iscsi: set errno on error path
      scsi: hpsa: fallback to use legacy REPORT PHYS command
      scsi: scsi_dh_alua: Fix RCU annotations
      scsi: hpsa: use %phN for short hex dumps
      scsi: hisi_sas: fix free'ing in probe and remove
      scsi: isci: switch to pci_alloc_irq_vectors
      scsi: ipr: Fix runaway IRQs when falling back from MSI to LSI
      scsi: dpt_i2o: double free on error path
      scsi: cxlflash: Migrate scsi command pointer to AFU command
      scsi: cxlflash: Migrate IOARRIN specific routines to function pointers
      scsi: cxlflash: Cleanup queuecommand()
      scsi: cxlflash: Cleanup send_tmf()
      scsi: cxlflash: Remove AFU command lock
      scsi: cxlflash: Wait for active AFU commands to timeout upon tear down
      scsi: cxlflash: Remove private command pool
      ...

commit b84ca6e9c74d30e4a1ebc19a7f6a6e616e08dfd4
Author: Subhash Jadavani <subhashj@codeaurora.org>
Date:   Mon Dec 5 19:25:42 2016 -0800

    scsi: ufs-qcom: fix bug with read/modify write of UFS_CFG1
    
    ufs_qcom_print_hw_debug_reg_all() function is having a bug where it
    might incorrectly modify undesired bits in UFS_CFG1 register, this
    change fixes it.
    
    Reviewed-by: Venkat Gopalakrishnan <venkatg@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 56d4a1866d748732fd8d690b2c2156bbc9c9eb02
Author: Subhash Jadavani <subhashj@codeaurora.org>
Date:   Mon Dec 5 19:25:32 2016 -0800

    scsi: ufs: add quirk to increase host PA_SaveConfigTime
    
    The maximum value PA_SaveConfigTime is 250 (10us) but this is not enough
    for some vendors. Gear switch from PWM to HS may fail even with this
    max.  PA_SaveConfigTime. Gear switch can be issued by host controller as
    an error recovery and any software delay will not help on this case so
    we need to increase PA_SaveConfigTime to >32us as per vendor
    recommendation.  This change adds a quirk to increase the
    PA_SaveConfigTime parameter.
    
    Reviewed-by: Venkat Gopalakrishnan <venkatg@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit ab436706e4a86719595012424ecefbdf4a84cc30
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Mon Dec 5 19:25:15 2016 -0800

    scsi: ufs-qcom: add probe_defer in case phy driver not probed yet
    
    In case UFS driver is probed before the phy driver does, the UFS driver
    should return a PROBE_DEFER code.
    
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit c01848c67d48aa51c4e80c76e1d08d9891d27a5a
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Mon Dec 5 19:25:02 2016 -0800

    scsi: ufs: add support for UFS HCI 2.1
    
    The UFS HCI v2.1 includes a few additional registers. This change
    updates the HCI register, the UFS version register content and the
    Interrupt Status register.
    
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 2349b533167315199b00b15db891ddc45b2c909d
Author: subhashj@codeaurora.org <subhashj@codeaurora.org>
Date:   Wed Nov 23 16:33:19 2016 -0800

    scsi: ufs: fix default power mode to FAST/SLOW
    
    We would by default like to run in FAST/SLOW mode instead
    of FASTAUTO/SLOWAUTO mode for performance reasons. This
    change sets the default speed mode to FAST/SLOW mode.
    
    Reviewed-by: Venkat Gopalakrishnan <venkatg@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 0b257734344aa89b565bd148ff94f29aa873ffa6
Author: subhashj@codeaurora.org <subhashj@codeaurora.org>
Date:   Wed Nov 23 16:33:08 2016 -0800

    scsi: ufs: optimize system suspend handling
    
    Consider following sequence of events:
    1. UFS is runtime suspended, link_state = Hibern8, device_state = sleep
    2. System goes into system suspend, ufshcd_system_suspend() brings both
       link and device to active state and then puts the device in Power_Down
       state and link in OFF state.
    3. System resumes at some later point in time, ufshcd_system_resume()
       doesn't do anything as UFS state is runtime suspended. Note that link
       is still on OFF state and device is in Power_Down state.
    4. Now system again goes into suspend without any UFS accesses before it.
       ufshcd_system_suspend() again brings both link and device to active
       state and then puts the device in Power_Down state and link if OFF
       state. But it's unnecessary to bring the link & device in active state
       as both link and device are already in desired low power states. This
       change fixes this issue by adding proper state checks in
       ufshcd_system_suspend().
    
    Reviewed-by: Gilad Broner <gbroner@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit f37e9f8cf8bc681250880f8c1372fb882c9379b8
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Wed Nov 23 16:32:49 2016 -0800

    scsi: ufs: fix condition in which DME command failure msg is printed out
    
    The condition in which error message is printed out was incorrect and
    resulted error message only if retries exhausted.
    But retries happens only if DME command is a peer command, and thus
    DME commands which are not peer commands and fail are not printed out.
    This change fixes this issue.
    
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit fb7b45f0462f144e1924a357995552f24f0c9d0c
Author: Dolev Raviv <draviv@codeaurora.org>
Date:   Wed Nov 23 16:32:32 2016 -0800

    scsi: ufs: handle errors from PHY_ADAPTER_ERROR register
    
    The PHY_ADAPTER_ERROR status register indicates PHY lane errors
    reported by the M-PHY layer. In some occasions the controller
    can recover from such errors. When the error is not recoverable,
    a stuck DB error will occur. Since the stuck DB error is spotted
    separately, no action other than clearing the register is necessary.
    
    Signed-off-by: Dolev Raviv <draviv@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 7caf489b99a42a9017ef3d733912aea8794677e7
Author: subhashj@codeaurora.org <subhashj@codeaurora.org>
Date:   Wed Nov 23 16:32:20 2016 -0800

    scsi: ufs: issue link starup 2 times if device isn't active
    
    If we issue the link startup to the device while its UniPro state is
    LinkDown (and device state is sleep/power-down) then link startup
    will not move the device state to Active. Device will only move to
    active state if the link starup is issued when its UniPro state is
    LinkUp. So in this case, we would have to issue the link startup 2
    times to make sure that device moves to active state.
    
    Reviewed-by: Gilad Broner <gbroner@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit c6a6db439868c7ba5cc90d4c461d9697ec731fa1
Author: subhashj@codeaurora.org <subhashj@codeaurora.org>
Date:   Wed Nov 23 16:32:08 2016 -0800

    scsi: ufs: ensure that host pa_tactivate is higher than device
    
    Some UFS devices require host PA_TACTIVATE to be higher than
    device PA_TACTIVATE otherwise it may get stuck during hibern8 sequence.
    This change allows this by using quirk.
    
    Reviewed-by: Venkat Gopalakrishnan <venkatg@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 10fe5888a40e6afbf1f3166c212c685624cae26b
Author: subhashj@codeaurora.org <subhashj@codeaurora.org>
Date:   Wed Nov 23 16:31:52 2016 -0800

    scsi: ufs: increase the scsi query response timeout
    
    It is found thats UFS device may take longer than 30ms to respond to
    query requests and in this case we might run into following scenario:
    
    1. UFS host SW sends a query request to UFS device to read an attribute
       value. SW uses tag #31 for this purpose.
    2. UFS host SW waits for 30ms to get the query response (and doorbell
       to be cleared by UFS host HW).
    3. UFS device doesn't respond back within 30ms hence UFS host SW times
       out waiting for the query response.
    4. UFS host SW clears the tag#31 from UTRLCLR register.
    5. UFS host SW waits until UFS host HW to clear tag#31 from the doorbell
       register.
    6. UFS host SW retries the same query request on same tag#31 (sends a query
       request to device to read an attribute value).
    7. UFS host HW gets the query response from the device but this was
       intended as a query response for the 1st query request sent (step-1).
    8. Now UFS device sends another query response to host (for query request
       sent @step-6).
    
    Now there are 2 issues that could happen with above scenario:
    1. UFS device should have actually responded back with only one query
       response but it is found that device may respond back with 2 query
       responses.
    2. If UFS device responds back with 2 resposes on same tag, host HW/SW
       behaviour isn't predictable.
    
    To avoid running into above scenario, we would basically allow device
    to take longer (upto 1.5 seconds) for query response.
    
    Reviewed-by: Gilad Broner <gbroner@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit bde44bb665d049468b6a1a2fa7d666434de4f83f
Author: subhashj@codeaurora.org <subhashj@codeaurora.org>
Date:   Wed Nov 23 16:31:41 2016 -0800

    scsi: ufs: fix failure to read the string descriptor
    
    While reading variable size descriptors (like string descriptor), some UFS
    devices may report the "LENGTH" (field in "Transaction Specific fields" of
    Query Response UPIU) same as what was requested in Query Request UPIU
    instead of reporting the actual size of the variable size descriptor.
    Although it's safe to ignore the "LENGTH" field for variable size
    descriptors as we can always derive the length of the descriptor from
    the descriptor header fields. Hence this change impose the length match
    check only for fixed size descriptors (for which we always request the
    correct size as part of Query Request UPIU).
    
    Reviewed-by: Venkat Gopalakrishnan <venkatg@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 24d6243204633be4b710754f279b3ca57c69ceec
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Wed Nov 23 16:31:30 2016 -0800

    scsi: ufs: update device descriptor maximum size
    
    According to JESD220B - UFS v2.0, the maximum size of device descriptor
    has changed from 0x1F to 0x40. This patch updates the maximum size of
    this descriptor.
    
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 4b761b580150b081e6829885afd3d540b746ccf0
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Wed Nov 23 16:31:18 2016 -0800

    scsi: ufs: add index details to query error messages
    
    When sending query to the device, the index  of the failure
    is additional useful information that should be printed out as it
    might specify the logical unit (LU) where the error occurred.
    
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 61e073590b82a539654626ecae91b8fab11db3f3
Author: Dolev Raviv <draviv@codeaurora.org>
Date:   Wed Nov 23 16:30:49 2016 -0800

    scsi: ufs: add queries retry mechanism
    
    Some of the queries might fail during init. To avoid
    system failure, we add retry mechanism to issue queries
    several times.
    
    Signed-off-by: Dolev Raviv <draviv@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 679882ae580554d3c6627e66291c72b348656382
Author: Santosh Y <santoshsy@gmail.com>
Date:   Thu Nov 24 12:58:51 2016 +0800

    scsi: ufs: Add missing UFS_MASK macro definition
    
    Reported-by: Venkatraman S <svenkatr@ti.com>
    Reviewed-by: Vinayak Holikatti <vinholikatti@gmail.com>
    Signed-off-by: Santosh Y <santoshsy@gmail.com>
    Signed-off-by: Zhangfei Gao <zhangfei.gao@linaro.org>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 75b1cc4ad63afa28c1a045b5157c008f405f06a9
Author: Kiwoong Kim <kwmad.kim@samsung.com>
Date:   Tue Nov 22 17:06:59 2016 +0900

    scsi: ufs: introduce UFSHCD_QUIRK_PRDT_BYTE_GRAN quirk
    
    Some UFS host controllers may think granularities of PRDT length and
    offset as bytes, not double words.
    
    Signed-off-by: Kiwoong Kim <kwmad.kim@samsung.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit a6854dff635ddde8403ae1dce4c6772eb1031827
Author: Bjorn Andersson <bjorn.andersson@linaro.org>
Date:   Sat Nov 19 22:34:51 2016 -0800

    scsi: ufs: qcom: Properly clear hba priv on failure
    
    ufs_qcom_init() sets the hba priv data before attempting to acquire the
    phy handle, so make sure to clear this in the case of an error. Failing
    to do this will make ufs_qcom_setup_clocks() operate on the uninitalized
    host object.
    
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 141f81651037ea109188a6bafdc5c9a318bd5a46
Author: Zang Leigang <zangleigang@hisilicon.com>
Date:   Wed Nov 16 11:29:37 2016 +0800

    scsi: ufs: introduce a new ufshcd_statea UFSHCD_STATE_EH_SCHEDULED
    
    Add a new ufshcd_state, indicats that an err handler may get to run
    immediately. Use UFSHCD_STATE_ERROR here looks not literaly correct.
    
    Signed-off-by: Zang Leigang <zangleigang@hisilicon.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit ee32c9098f2eff12c0e020aac2acade8250c80e4
Author: Kiwoong Kim <kwmad.kim@samsung.com>
Date:   Thu Nov 10 21:17:43 2016 +0900

    scsi: ufs: introduce hibern8_notify callback
    
    Some UFS host controller may need to configure some things around
    hibern8 enter/exit
    
    Signed-off-by: Kiwoong Kim <kwmad.kim@samsung.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit d2877be42f35a8420dc452cf775b5f99b55169aa
Author: Kiwoong Kim <kwmad.kim@samsung.com>
Date:   Thu Nov 10 21:16:15 2016 +0900

    scsi: ufs: introduce setup_task_mgmt
    
    Some UFS host controller may need to configure some things before any
    task management request is issued
    
    Signed-off-by: Kiwoong Kim <kwmad.kim@samsung.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 0e675efa9e9edef113bb55b25d1f22b1ae8225f4
Author: Kiwoong Kim <kwmad.kim@samsung.com>
Date:   Thu Nov 10 21:14:36 2016 +0900

    scsi: ufs: introduce setup_xfer_req callback
    
    Some UFS host controller may need to configure some things before any
    transfer request is issued.
    
    Signed-off-by: Kiwoong Kim <kwmad.kim@samsung.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 4861ee15f2b7dee17a869d9edd3463b812f77636
Author: Chanwoo Choi <cw00.choi@samsung.com>
Date:   Tue Nov 8 18:13:28 2016 +0900

    scsi: ufs: Use the resource-managed function to add devfreq device
    
    This patch uses the resource-managed to add the devfreq device.  This
    function will make it easy to handle the devfreq device.
    
    - struct devfreq *devm_devfreq_add_device(struct device *dev,
    				  struct devfreq_dev_profile *profile,
    				  const char *governor_name,
    				  void *data);
    Cc: Vinayak Holikatti <vinholikatti@gmail.com>
    Cc: James E.J. Bottomley <jejb@linux.vnet.ibm.com>
    Cc: Martin K. Petersen <martin.petersen@oracle.com>
    Cc: linux-scsi@vger.kernel.org
    Signed-off-by: Chanwoo Choi <cw00.choi@samsung.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 41e1d60ea50a97fe1c3f8075a13761ddc17dd45a
Author: Vivek Gautam <vivek.gautam@codeaurora.org>
Date:   Tue Nov 8 15:37:51 2016 +0530

    scsi: ufs: qcom: Don't free resource-managed kmalloc element
    
    Host is allocated by managed kmalloc (devm_kmalloc). The
    memory allocated with this function is automatically
    freed on driver detach.
    So, no need to make an exclusive free call over it.
    
    Signed-off-by: Vivek Gautam <vivek.gautam@codeaurora.org>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit d7fe6b661abc2d034a0ad7d582a630f347d56a7b
Author: Vivek Gautam <vivek.gautam@codeaurora.org>
Date:   Tue Nov 8 15:37:50 2016 +0530

    scsi: ufs: qcom: Add phy_exit call in hcd exit path
    
    Do a phy_exit() over the ufs phy in the ufs qcom exit path
    to de-initialize the phy.
    
    Signed-off-by: Vivek Gautam <vivek.gautam@codeaurora.org>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit feb3d79800ece19c18b979c5edd1c28755f59d07
Author: Vivek Gautam <vivek.gautam@codeaurora.org>
Date:   Tue Nov 8 15:37:48 2016 +0530

    scsi: ufs-qcom: phy/hcd: Refactoring phy clock handling
    
    Add phy clock enable code to phy_power_on/off callbacks, and
    remove explicit calls to enable these phy clocks from the
    ufs-qcom hcd driver.
    
    Signed-off-by: Vivek Gautam <vivek.gautam@codeaurora.org>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 69d72ac8369a503926b5c494182dd209484de67e
Author: Subhash Jadavani <subhashj@codeaurora.org>
Date:   Thu Oct 27 17:26:24 2016 -0700

    scsi: ufs: change device rails hpm mode ramp up sequence
    
    When we are resuming the UFS device rails in HPM mode, we are first
    powering on the VCC rail while VCCQ and VCCQ2 rails still being in LPM
    mode. Some UFS devices may take VCC on event as hint that host wants UFS
    device to be resumed and may start drawing more power from the
    VCCQ/VCCQ2 rails (while they are still in LPM mode) causing voltage drop
    on these rails. This change fixes this issue by bringing VCCQ & VCCQ2
    rails out of LPM before powering on VCC rail.
    
    Reviewed-by: Venkat Gopalakrishnan <venkatg@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit d6fcf81a0d97a9e9f5035973c3a4dc219c9488b0
Author: Subhash Jadavani <subhashj@codeaurora.org>
Date:   Thu Oct 27 17:26:09 2016 -0700

    scsi: ufs: suspend clock scaling at the start of suspend
    
    Currently clock scaling is suspended only after the host and device are
    put in low power mode but we should avoid clock scaling running after
    UFS link is put in low power mode (hibern8). This change suspends clock
    scaling before putting host/device in low power mode.
    
    Reviewed-by: Sahitya Tummala <stummala@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit afa3dfd42d205b106787476647735aa1de1a5d02
Author: Subhash Jadavani <subhashj@codeaurora.org>
Date:   Thu Oct 27 17:25:58 2016 -0700

    scsi: ufshcd: release resources if probe fails
    
    If ufshcd pltfrm/pci driver's probe fails for some reason then ensure
    that scsi host is released to avoid memory leak but managed memory
    allocations (via devm_* calls) need not to be freed explicitly on probe
    failure as memory allocated with these functions is automatically freed
    on driver detach.
    
    Reviewed-by: Sahitya Tummala <stummala@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 30fc33f1ef475480dc5bea4fe1bda84b003b992c
Author: Subhash Jadavani <subhashj@codeaurora.org>
Date:   Thu Oct 27 17:25:47 2016 -0700

    scsi: ufs: fix race between clock gating and devfreq scaling work
    
    UFS devfreq clock scaling work may require clocks to be ON if it need to
    execute some UFS commands hence it may request for clock hold before
    issuing the command. But if UFS clock gating work is already running in
    parallel, ungate work would end up waiting for the clock gating work to
    finish and as clock gating work would also wait for the clock scaling
    work to finish, we would enter in deadlock state. Here is the call trace
    during this deadlock state:
    
    Workqueue: devfreq_wq devfreq_monitor
    	__switch_to
    	__schedule
    	schedule
    	schedule_timeout
    	wait_for_common
    	wait_for_completion
    	flush_work
    	ufshcd_hold
    	ufshcd_send_uic_cmd
    	ufshcd_dme_get_attr
    	ufs_qcom_set_dme_vs_core_clk_ctrl_clear_div
    	ufs_qcom_clk_scale_notify
    	ufshcd_scale_clks
    	ufshcd_devfreq_target
    	update_devfreq
    	devfreq_monitor
    	process_one_work
    	worker_thread
    	kthread
    	ret_from_fork
    
    Workqueue: events ufshcd_gate_work
    	__switch_to
    	__schedule
    	schedule
    	schedule_preempt_disabled
    	__mutex_lock_slowpath
    	mutex_lock
    	devfreq_monitor_suspend
    	devfreq_simple_ondemand_handler
    	devfreq_suspend_device
    	ufshcd_gate_work
    	process_one_work
    	worker_thread
    	kthread
    	ret_from_fork
    
    Workqueue: events ufshcd_ungate_work
    	__switch_to
    	__schedule
    	schedule
    	schedule_timeout
    	wait_for_common
    	wait_for_completion
    	flush_work
    	__cancel_work_timer
    	cancel_delayed_work_sync
    	ufshcd_ungate_work
    	process_one_work
    	worker_thread
    	kthread
    	ret_from_fork
    
    This change fixes this deadlock by doing this in devfreq work (devfreq_wq):
    Try cancelling clock gating work. If we are able to cancel gating work
    or it wasn't scheduled, hold the clock reference count until scaling is
    in progress. If gate work is already running in parallel, let's skip
    the frequecy scaling at this time and it will be retried once next scaling
    window expires.
    
    Reviewed-by: Sahitya Tummala <stummala@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 3f0c06de80d3898e68adcaba83a2b7ac51cf23d8
Author: Venkat Gopalakrishnan <venkatg@codeaurora.org>
Date:   Mon Oct 17 17:11:07 2016 -0700

    scsi: ufs: optimize clock gate work
    
    In a case where gate work is called as part of cancel work from ungate
    path the clk state would be marked as REQ_CLKS_ON.  There is no point
    gating the clocks and then end up turning them ON immediately in ungate
    work, save time by skipping the gate work and change the clk state to
    CLKS_ON as they are not turned off yet.
    
    Signed-off-by: Venkat Gopalakrishnan <venkatg@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit f2a785ac23125fa0774327d39e837e45cf28fe92
Author: Venkat Gopalakrishnan <venkatg@codeaurora.org>
Date:   Mon Oct 17 17:10:53 2016 -0700

    scsi: ufshcd: Fix race between clk scaling and ungate work
    
    The ungate work turns on the clock before it exits hibern8, if the link
    was put in hibern8 during clock gating work.  There occurs a race
    condition when clock scaling work calls ufshcd_hold() to make sure low
    power states cannot be entered, but that returns by checking only
    whether the clocks are on.  This causes the clock scaling work to issue
    UIC commands when the link is in hibern8 causing failures. Make sure we
    exit hibern8 state before returning from ufshcd_hold().
    
    Callstacks for race condition:
    
     ufshcd_scale_gear
     ufshcd_devfreq_scale
     ufshcd_devfreq_target
     update_devfreq
     devfreq_monitor
     process_one_work
     worker_thread
     kthread
     ret_from_fork
    
     ufshcd_uic_hibern8_exit
     ufshcd_ungate_work
     process_one_work
     worker_thread
     kthread
     ret_from_fork
    
    Signed-off-by: Venkat Gopalakrishnan <venkatg@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 8643ae66ce749f63ea0de928f5059b7b5f8b30cd
Author: Dov Levenglick <dovl@codeaurora.org>
Date:   Mon Oct 17 17:10:14 2016 -0700

    scsi: ufs: fail ufshcd_probe_hba() if power configuration fails
    
    In case the power configuration fails, skip further processing of the
    probing function and return immediately. This has 2 reasons:
    
    1. Don't allow the UFS to continue running in PWM
    
    2. Avoid multiple calls to pm_runtime_put_sync() when not in error
       handling or power management contexts
    
    Signed-off-by: Dov Levenglick <dovl@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit a508253d0916a0c5973081c4059425ec04e324c8
Author: Gilad Broner <gbroner@codeaurora.org>
Date:   Mon Oct 17 17:10:00 2016 -0700

    scsi: ufs: suspend clock scaling for failed runtime_resume
    
    During runtime resume operation, clock scaling may get indirectly
    resumed via call to ufshcd_set_dev_pwr_mode(): Start/Stop Unit command
    times out and SCSI error handling ultimately calls the host reset
    handler to recover, during which clock scaling is resumed.  Error case
    exit path of runtime resume will disable clocks.  As clock scaling was
    already resumed, it will get scheduled later on and try to access UFS
    registers while clocks are disabled, resulting in unclocked register
    access.
    
    Signed-off-by: Gilad Broner <gbroner@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit dcea0bfbc4cb6796a222ffaeebd77a0a89a1babc
Author: Gilad Broner <gbroner@codeaurora.org>
Date:   Mon Oct 17 17:09:48 2016 -0700

    scsi: ufs: fix sense buffer size to 18 bytes
    
    According to UFS device specification, sense data can be only 18 bytes
    long, this change makes the changes accordingly.
    
    Signed-off-by: Gilad Broner <gbroner@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit ad1a1b9cd67a4b5bee8a62454336d94f9e816c1f
Author: Gilad Broner <gbroner@codeaurora.org>
Date:   Mon Oct 17 17:09:36 2016 -0700

    scsi: ufs: commit descriptors before setting the doorbell
    
    Add a write memory barrier to make sure descriptors prepared are
    actually written to memory before ringing the doorbell. We have also
    added the write memory barrier after ringing the doorbell register so
    that controller sees the new request immediately.
    
    Signed-off-by: Gilad Broner <gbroner@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit e3ce73d69aff44421d7899b235fec5ac2c306ff4
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Mon Oct 17 17:09:24 2016 -0700

    scsi: ufs: fix bugs related to null pointer access and array size
    
    In this change there are a few fixes of possible NULL pointer access and
    possible access to index that exceeds array boundaries.
    
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 1e879e8fa9f62e18d79bfc339050bf8fed7a81e4
Author: Subhash Jadavani <subhashj@codeaurora.org>
Date:   Thu Oct 6 21:48:22 2016 -0700

    scsi: ufshcd: Fix possible unclocked register access
    
    Vendor specific setup_clocks callback may require the clocks managed by
    ufshcd driver to be ON. So if the vendor specific setup_clocks callback
    is called while the required clocks are turned off, it could result into
    unclocked register access.
    
    To prevent possible unclock register access, this change adds one more
    argument to setup_clocks callback to let it know whether it is called
    pre/post the clock changes by core driver.
    
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Reviewed-by: Kiwoong Kim <kwmad.kim@samsung.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit e806402130c9c494e22c73ae9ead4e79d2a5811c
Author: Christoph Hellwig <hch@lst.de>
Date:   Thu Oct 20 15:12:13 2016 +0200

    block: split out request-only flags into a new namespace
    
    A lot of the REQ_* flags are only used on struct requests, and only of
    use to the block layer and a few drivers that dig into struct request
    internals.
    
    This patch adds a new req_flags_t rq_flags field to struct request for
    them, and thus dramatically shrinks the number of common requests.  It
    also removes the unfortunate situation where we have to fit the fields
    from the same enum into 32 bits for struct bio and 64 bits for
    struct request.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Shaun Tancheff <shaun.tancheff@seagate.com>
    Signed-off-by: Jens Axboe <axboe@fb.com>

commit 5404fb7cec7473413bc1dd2d114dbe7c291dfb15
Author: Joao Pinto <Joao.Pinto@synopsys.com>
Date:   Fri Sep 23 12:52:52 2016 +0100

    scsi: ufs: Kconfig fix
    
    Currently if we have PCI and UFSHCD configured in the kernel, both
    SCSI_UFS_DWC_TC_PCI and SCSI_UFSHCD_PCI show up, which is not correct.
    This patch changes the UFS Kconfig to assure hierarchy between the 2
    options.
    
    Signed-off-by: Joao Pinto <jpinto@synopsys.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 73811c942954a1d2470656d1bd9e990e327ac580
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Wed Sep 28 14:49:42 2016 +0000

    scsi: ufs: Fix error return code in ufshcd_init()
    
    Fix to return a negative error code from the error handling case instead
    of 0, as done elsewhere in this function.
    
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Reviewed-by: Kiwoong Kim <kwmad.kim@samsung.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 6861285ce8f8a9a55aab4775847de6e48b2dc7f2
Author: Zang Leigang <zangleigang@hisilicon.com>
Date:   Thu Aug 25 17:39:19 2016 +0800

    scsi: ufs: Data Segment only needed for WRITE DESCRIPTOR
    
    Some devices have problems handling a Query UPIU with Data Segment
    set. Only set it for WRITE DESCRIPTOR commands.
    
    [mkp: updated patch description]
    
    Signed-off-by: Zang Leigang <zangleigang@hisilicon.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Reviewed-by: Kiwoong Kim <kwmad.kim@samsung.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 46c1cf706076500cdcde3445be97233793eec7f1
Author: Kyuho Choi <chlrbgh0@gmail.com>
Date:   Mon Sep 26 23:58:25 2016 +0900

    scsi: ufs: Enable no vccq quirk for skhynix device
    
    This patch enable no vccq quirk for SKHynix devices.  SKHynix ufs device
    don't need vccq vrail for device operation.
    
    Signed-off-by: Kyuho Choi <kyuho.choi@sk.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 8794ee0c1d4ce35b8b8e4e8cdc80bba6e42206eb
Author: Kiwoong Kim <kwmad.kim@samsung.com>
Date:   Fri Sep 9 08:22:22 2016 +0900

    scsi: ufs: Get a TM service response from the correct offset
    
    When any UFS host controller receives a TM(Task Management) response
    from a UFS device, UFS driver has been recognize like receiving a
    message of "Task Management Function Complete"(00h) in all cases, so
    far.  That means there is no pending task for a tag of the TM request
    sent before in the UFS device.  That's because the byte offset 6 in TM
    response which has been used to get a TM service response so far
    represents just whether or not a TM transmission passes.
    
    Regarding UFS spec, the correct byte offset to get TM service response
    is 15, not 6.
    
    I tested that UFS driver responds properly for the TM response from a
    UFS device with an reference board with exynos8890, as follow: No
    pending task -> Task Management Function Complete (00h) Pending task ->
    Task Management Function Succeeded (08h)
    
    [mkp: applied by hand]
    
    Signed-off-by: Kiwoong Kim <kwmad.kim@samsung.com>
    Signed-off-by: HeonGwang Chu <hg.chu@samsung.com>
    Tested-by: : Kiwoong Kim <kwmad.kim@samsung.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 73615428c7e1289d493578a7c83959e39e9023e5
Author: Kiwoong Kim <kwmad.kim@samsung.com>
Date:   Thu Sep 8 16:50:02 2016 +0900

    scsi: ufs: Fix a wrong string in power mode change
    
    I modified a string as described in UFS spec as follow: umpcrs -> upmcrs.
    
    [mkp: applied by hand]
    
    Signed-off-by: Kiwoong Kim <kwmad.kim@samsung.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 151770524b73816a00a785bd613ea80398b33190
Author: Baoyou Xie <baoyou.xie@linaro.org>
Date:   Mon Aug 29 18:19:00 2016 +0800

    scsi: ufs: Add missing header dependencies for tc-dwc-g210
    
    We get 2 warnings when build kernel with W=1:
    drivers/scsi/ufs/tc-dwc-g210.c:261:5: warning: no previous prototype for 'tc_dwc_g210_config_40_bit' [-Wmissing-prototypes]
    drivers/scsi/ufs/tc-dwc-g210.c:293:5: warning: no previous prototype for 'tc_dwc_g210_config_20_bit' [-Wmissing-prototypes]
    
    In fact, these functions are declared in ufs/tc-dwc-g210.h, so this
    patch add missing header dependencies
    
    Signed-off-by: Baoyou Xie <baoyou.xie@linaro.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit fcbefc3b2bfb4dd1a230b3082b68bc7cf7c081e7
Author: Tiezhu Yang <kernelpatch@126.com>
Date:   Sat Jun 25 12:35:22 2016 +0800

    scsi: ufs: remove unnecessary goto label
    
    When buff_ascii kmalloc failed, there is no need to call kfree, it
    should return -ENOMEM directly, this patch fixes it.
    
    Signed-off-by: Tiezhu Yang <kernelpatch@126.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 757f9d7a801236a9c49468af9e64cd7c447c2f8e
Author: Manjunath M B <Manjunath.MB@synopsys.com>
Date:   Tue Jul 12 19:25:36 2016 +0530

    scsi: ufs: tc-dwc-g210 driver fix for 20-bit RMMI
    
    The code was checking on PA_CONNECTEDRXLANES and PA_CONNECTEDTXLANES
    attributes to program the Lane#1 attributes. The correct attributes are
    PA_AVAILRXDATALANES and PA_AVAILTXDATALANES respectively.
    
    Signed-off-by: Manjunath M B <manjumb@synopsys.com>
    Tested-by: Joao Pinto <jpinto@synopsys.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 87ee3ab928dc4a3723005c5b553775e9acf479c1
Author: Joao Pinto <Joao.Pinto@synopsys.com>
Date:   Mon May 23 10:18:07 2016 +0100

    ufs: Adding license info do tc-dwc-g210 and ufshcd-dwc to enable loadable module
    
    This patch adds license info to the tc-dwc-g210 and ufshcd-dwc files in
    order for them to have access to some ufshcd symbols when all are built
    as modules.
    
    Signed-off-by: Joao Pinto <jpinto@synopsys.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit ec658ea0c548f4c5cb5a6efad692bae571382f05
Author: Joao Pinto <Joao.Pinto@synopsys.com>
Date:   Wed May 11 12:21:33 2016 +0100

    ufs: add TC G210 pci driver
    
    This patch adds a glue pci driver for the Synopsys G210 Test Chip.
    
    [mkp: Fixed Kconfig depends and module name]
    
    Signed-off-by: Joao Pinto <jpinto@synopsys.com>
    Reviewed-by: Hannes Reinicke <hare@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit fc040a3fc47cad038f774275ea61fe6d5b57d7cc
Author: Joao Pinto <Joao.Pinto@synopsys.com>
Date:   Wed May 11 12:21:32 2016 +0100

    ufs: add TC G210 platform driver
    
    This patch adds a glue platform driver for the Synopsys G210 Test Chip.
    
    Signed-off-by: Joao Pinto <jpinto@synopsys.com>
    Reviewed-by: Hannes Reinicke <hare@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 947e7013c7b99549c0771b38277327e68dab4709
Author: Joao Pinto <Joao.Pinto@synopsys.com>
Date:   Wed May 11 12:21:31 2016 +0100

    ufs: add support for Synopsys G210 Test Chip
    
    This patch adds support for Synopsys G210 Test Chip.
    
    Signed-off-by: Joao Pinto <jpinto@synopsys.com>
    Reviewed-by: Hannes Reinicke <hare@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 4b9ffb5a353bdee49f1f477ffe2b95ab3f9cbc0c
Author: Joao Pinto <Joao.Pinto@synopsys.com>
Date:   Wed May 11 12:21:30 2016 +0100

    ufs: add support for DesignWare Controller
    
    This patch has the goal to add support for DesignWare UFS Controller
    specific operations.
    
    Signed-off-by: Joao Pinto <jpinto@synopsys.com>
    Reviewed-by: Hannes Reinicke <hare@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 79fcc03349b5766dbd15b169c762b442296fbf6b
Author: Joao Pinto <Joao.Pinto@synopsys.com>
Date:   Wed May 11 12:21:29 2016 +0100

    ufs: add link status to ufshci
    
    Add link status to ufshci.
    
    Signed-off-by: Joao Pinto <jpinto@synopsys.com>
    Acked-by: Tomas Winkler <tomas.winkler@intel.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 87ee1a81644b4602fcf9618ab851ad514b139be8
Author: Joao Pinto <Joao.Pinto@synopsys.com>
Date:   Wed May 11 12:21:28 2016 +0100

    ufs: add unipro attributes
    
    Add unipro attributes.
    
    Signed-off-by: Joao Pinto <jpinto@synopsys.com>
    Acked-by: Tomas Winkler <tomas.winkler@intel.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 300bb13f5c7b1d6b970d32232d0462ae36d50b9d
Author: Joao Pinto <Joao.Pinto@synopsys.com>
Date:   Wed May 11 12:21:27 2016 +0100

    ufs: add UFS 2.0 capabilities
    
    Add UFS 2.0 support to the UFS core driver.
    
    Signed-off-by: Joao Pinto <jpinto@synopsys.com>
    Acked-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Tomas Winkler <tomas.winkler@intel.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit cc4959c11abc9a41860b0eac11921fcd19b1a1ca
Author: Joao Pinto <Joao.Pinto@synopsys.com>
Date:   Wed May 11 12:21:25 2016 +0100

    ufs: fixed typo in ufshcd-pltfrm
    
    Fixed typo in ufshcd-pltfrm.
    
    Signed-off-by: Joao Pinto <jpinto@synopsys.com>
    Acked-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Tomas Winkler <tomas.winkler@intel.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit c80fa12e6d4ab07b6aff9be1b3be7df265b9497b
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Mar 17 13:29:52 2016 +0100

    scsi: ufs: select CONFIG_NLS
    
    A recent change to ufshcd introduced a call to utf16s_to_utf8s, a
    function that is provided by the NLS module, so we get a link error when
    that is not present:
    
    drivers/scsi/built-in.o: In function `ufshcd_read_string_desc':
    :(.text+0x124d0): undefined reference to `utf16s_to_utf8s'
    
    This adds a Kconfig 'select' statement to avoid the build error.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Fixes: b573d484e4ff ("scsi: ufs: add support to read device and string descriptors")
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit eba5ed3539071b0185084e429f17805bcc7f2419
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Thu Mar 10 17:37:21 2016 +0200

    scsi: ufs-qcom: add printouts of testbus debug registers
    
    This change adds printouts of testbus and debug registers.
    
    Reviewed-by: Gilad Broner <gbroner@codeaurora.org>
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit f37aabcf58202e65db3035b1b360d856dd378ee2
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Thu Mar 10 17:37:20 2016 +0200

    scsi: ufs-qcom: enable/disable the device ref clock
    
    This change enables the device ref clock before changing to HS mode
    and disables it if entered to PWM mode.
    
    Reviewed-by: Gilad Broner <gbroner@codeaurora.org>
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 4b9ad0b88c3e8400f23aac63ac7709d4cd972392
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Thu Mar 10 17:37:19 2016 +0200

    scsi: ufs-qcom: set PA_Local_TX_LCC_Enable before link startup
    
    Some UFS devices (and may be host) have issues if LCC is
    enabled. So we are setting PA_Local_TX_LCC_Enable to 0
    before link startup which will make sure that both host
    and device TX LCC are disabled once link startup is
    completed.
    
    Reviewed-by: Gilad Broner <gbroner@codeaurora.org>
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit b799fdf754b5c6c4dad0016826fb6b3e79bccaea
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Thu Mar 10 17:37:18 2016 +0200

    scsi: ufs: add device quirk delay before putting UFS rails in LPM
    
    We put the UFS device in sleep state & UFS link in hibern8 state during
    runtime suspend. After this we put all the UFS rails in low power
    modes immediately but it seems some devices may still draw more than
    sleep current from UFS rails (especially from VCCQ rail) at-least for
    500us.
    To avoid this situation, this change adds 2ms delay before putting
    these UFS rails in LPM mode.
    
    Reviewed-by: Gilad Broner <gbroner@codeaurora.org>
    Reviewed-by: Hannes Reinecke <hare@suse.de>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit f3099fbd9b90f94849bd155ebf690dd5a8cfa477
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Thu Mar 10 17:37:17 2016 +0200

    scsi: ufs: fix leakage during link off state
    
    Currently when we try to put the link in off/disabled state during
    suspend, it seems link is not being kept in low power mode.
    This patch fixes the issue by putting the link in hibern8 first
    (so device also puts the link in low power mode) and then stop the
    host controller.
    
    Reviewed-by: Hannes Reinecke <hare@suse.de>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 371131065de99b57d39620ac159d94e0d3773f13
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Thu Mar 10 17:37:16 2016 +0200

    scsi: ufs: tune UniPro parameters to optimize hibern8 exit time
    
    Optimal values of local UniPro parameters like PA_Hibern8Time &
    PA_TActivate can help reduce the hibern8 exit latency. If both host and
    device supports UniPro ver1.6 or later, these parameters will be
    automatically tuned during link startup itself. But if either host or
    device doesn't support UniPro ver 1.6 or later, we have to manually
    tune them. But to keep manual tuning logic simple, we will only do
    manual tuning if local unipro version doesn't support ver1.6 or later.
    
    Reviewed-by: Hannes Reinecke <hare@suse.de>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit afdfff59a0e0c5527610d3bc5d338a0da03dd23d
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Thu Mar 10 17:37:15 2016 +0200

    scsi: ufs: handle non spec compliant bkops behaviour by device
    
    We are seeing that some devices are raising the urgent bkops exception
    events even when BKOPS status doesn't indicate performace impacted or
    critical. Handle these device by determining their urgent bkops status
    at runtime.
    
    Reviewed-by: Hannes Reinecke <hare@suse.de>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit a70e91b8bbaa3924d6598f9b4d1d468d2c88e6d3
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Thu Mar 10 17:37:14 2016 +0200

    scsi: ufs: add retry for query descriptors
    
    Query commands have 100ms timeout and it may timeout if they are
    issued in parallel to ongoing read/write SCSI commands, this change
    adds the retry (max: 10) in case command timeouts.
    
    Reviewed-by: Hannes Reinecke <hare@suse.de>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 583fa62d082483412715af9ab4f528fcf00e4c38
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Thu Mar 10 17:37:13 2016 +0200

    scsi: ufs: add error recovery after DL NAC error
    
    Some vendor's UFS device sends back to back NACs for the DL data frames
    causing the host controller to raise the DFES error status. Sometimes
    such UFS devices send back to back NAC without waiting for new
    retransmitted DL frame from the host and in such cases it might be
    possible the Host UniPro goes into bad state without raising the DFES
    error interrupt. If this happens then all the pending commands would
    timeout only after respective SW command (which is generally too
    large).
    
    This change workarounds such device behaviour like this:
    - As soon as SW sees the DL NAC error, it would schedule the error
      handler
    - Error handler would sleep for 50ms to see if there any fatal errors
      raised by UFS controller.
       - If there are fatal errors then SW does normal error recovery.
       - If there are no fatal errors then SW sends the NOP command to
         device to check if link is alive.
           - If NOP command times out, SW does normal error recovery
           - If NOP command succeed, skip the error handling.
    
    If DL NAC error is seen multiple times with some vendor's UFS devices
    then enable this quirk to initiate quick error recovery and also
    silence related error logs to reduce spamming of kernel logs.
    
    Reviewed-by: Hannes Reinecke <hare@suse.de>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 9a47ec7c390e819d2ca61f7a55d16412f168b674
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Thu Mar 10 17:37:12 2016 +0200

    scsi: ufs: make error handling bit faster
    
    UFS driver's error handler forcefully tries to clear all the pending
    requests. For each pending request in the queue, it waits 1 sec for it
    to get cleared. If we have multiple requests in the queue then it's
    possible that we might end up waiting for those many seconds before
    resetting the host. But note that resetting host would any way clear
    all the pending requests from the hardware. Hence this change skips
    the forceful clear of the pending requests if we are anyway going to
    reset the host (for fatal errors).
    
    Reviewed-by: Hannes Reinecke <hare@suse.de>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 60f0187031c05e04cbadffb62f557d0ff3564490
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Thu Mar 10 17:37:11 2016 +0200

    scsi: ufs: disable vccq if it's not needed by UFS device
    
    Some UFS devices don't require VCCQ rail for device operations hence
    this change adds support to recognize such devices and remove vote for
    the unused VCCQ rail.
    
    Reviewed-by: Hannes Reinecke <hare@suse.de>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit c58ab7aab71e2c783087115f0ce1623c2fdcf0b2
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Thu Mar 10 17:37:10 2016 +0200

    scsi: ufs: separate device and host quirks
    
    Currently we use the host quirks mechanism in order to
    handle both device and host controller quirks.
    In order to support various of UFS devices we should separate
    handling the device quirks from the host controller's.
    
    Reviewed-by: Gilad Broner <gbroner@codeaurora.org>
    Reviewed-by: Hannes Reinecke <hare@suse.de>
    Signed-off-by: Raviv Shvili <rshvili@codeaurora.org>
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit b573d484e4ff33b60b1ef95ca30f199e749ff7c9
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Thu Mar 10 17:37:09 2016 +0200

    scsi: ufs: add support to read device and string descriptors
    
    This change adds support to read device descriptor and string descriptor
    from a UFS device
    
    Reviewed-by: Gilad Broner <gbroner@codeaurora.org>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Raviv Shvili <rshvili@codeaurora.org>
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 596585a285a41993f26efab686e1ef20fc16a04a
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Thu Mar 10 17:37:08 2016 +0200

    scsi: ufs: verify hba controller hce reg value
    
    Sometimes due to hw issues it takes some time to the
    host controller register to update. In order to verify the register
    has updated, a polling is done until its value is set.
    
    In addition the functions ufshcd_hba_stop() and
    ufshcd_wait_for_register() was updated with an additional input
    parameter, indicating the timeout between reads will
    be done by sleeping or spinning the cpu.
    
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Raviv Shvili <rshvili@codeaurora.org>
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit f550c65b543b4d3fa55201084b1a16432b748365
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Thu Mar 10 17:37:07 2016 +0200

    scsi: ufs: implement scsi host timeout handler
    
    A race condition exists between request requeueing and scsi layer
    error handling:
    When UFS driver queuecommand returns a busy status for a request,
    it will be requeued and its tag will be freed and set to -1.
    At the same time it is possible that the request will timeout and
    scsi layer will start error handling for it. The scsi layer reuses
    the request and its tag to send error related commands to the device,
    however its tag is no longer valid.
    As this request was never really sent to the device, there is no
    point to start error handling with the device.
    Implement the scsi error handling timeout callback and bypass SCSI
    error handling for request that were not actually sent to the device.
    For such requests simply reset the block layer timer. Otherwise, let
    SCSI layer perform the usual error handling.
    
    Reviewed-by: Hannes Reinecke <hare@suse.de>
    Signed-off-by: Gilad Broner <gbroner@codeaurora.org>
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 199ef13cac7d43f20d92ca077a25c3cbf91427ca
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Thu Mar 10 17:37:06 2016 +0200

    scsi: ufs: avoid spurious UFS host controller interrupts
    
    When control reaches to Linux UFS driver during UFS boot mode, UFS host
    controller interrupt status/enable registers may have left over
    settings.
    In order to avoid any spurious interrupts due to these left overs,
    it's important to clear these interrupt status/enable registers before
    enabling UFS interrupt handling.
    
    Reviewed-by: Hannes Reinecke <hare@suse.de>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 54b879b76ea253105505f840bd842c1927c9e380
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Thu Mar 10 17:37:05 2016 +0200

    scsi: ufs-qcom: add number of lanes per direction
    
    Different platform may have different number of lanes
    for the UFS link.
    Add parameter to device tree specifying how many lanes
    should be configured for the UFS link.
    
    Reviewed-by: Hannes Reinecke <hare@suse.de>
    Acked-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Gilad Broner <gbroner@codeaurora.org>
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit a230c2f6363c3fee8b6280b0732d7eb17554a4ca
Author: Tomas Winkler <tomas.winkler@intel.com>
Date:   Tue Feb 9 10:25:41 2016 +0200

    scsi: ufs: fix typo in comment
    
    [mkp: Only one typo remained]
    
    Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 1ce21794f9958136ffba797f3e25d9052921b885
Author: Tomas Winkler <tomas.winkler@intel.com>
Date:   Tue Feb 9 10:25:40 2016 +0200

    ufs: fix typo: MAZ to MAX
    
    QUERY_DESC_GEOMETRY_MAZ_SIZE
    QUERY_DESC_GEOMETRY_MAX_SIZE
    
    Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 5e86ae441c73839fe4be0d7d9288951518c187ae
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Mon Feb 1 15:02:50 2016 +0200

    scsi: ufs: add wrapper for retrying sending query attribute
    
    Sometimes queries from the device might return a failure so it is
    recommended to retry sending the query, before giving up.  This change
    adds a wrapper to retry sending a query attribute, in cases where we
    need to wait longer, before we continue, or before reporting a failure.
    
    Reviewed-by: Gilad Broner <gbroner@codeaurora.org>
    Reviewed-by: Dolev Raviv <draviv@codeaurora.org>
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit e3dfdc532d5c68f343733b5315488763153ede2c
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Mon Feb 1 15:02:49 2016 +0200

    scsi: ufs: commit descriptors before setting the doorbell
    
    Add a write memory barrier to make sure descriptors prepared are
    actually written to memory before ringing the doorbell. We have also
    added the write memory barrier after ringing the doorbell register so
    that controller sees the new request immediately.
    
    Reviewed-by: Dolev Raviv <draviv@codeaurora.org>
    Signed-off-by: Gilad Broner <gbroner@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 897efe628d7e0da76c7b20833a7efbd6a4f082d6
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Mon Feb 1 15:02:48 2016 +0200

    scsi: ufs: add missing memory barriers
    
    Performing several writes to UFS host controller registers has no
    guarantee of ordering, so we must make sure register writes to setup
    request list base address etc. are performed before the run/stop
    register is enabled.  In addition, when setting up a task request, we
    must make sure the updating of descriptors takes places before ringing
    the doorbell, similarly to setting up a transfer request.
    
    Reviewed-by: Dolev Raviv <draviv@codeaurora.org>
    Signed-off-by: Gilad Broner <gbroner@codeaurora.org>
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit d75f7fe495cf57501c83b8ea5d0d799d2c2ff841
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Mon Feb 1 15:02:47 2016 +0200

    scsi: ufs: reduce the interrupts for power mode change requests
    
    DME commands such as Hibern8 enter/exit and gear switch generate 2
    completion interrupts, one for confirmation that command is received by
    local UniPro and 2nd one is the final confirmation after communication
    with remote UniPro. Currently both of these completions are registered
    as interrupt events which is not quite necessary and instead we can just
    wait for the interrupt of 2nd completion, this should reduce the number
    of interrupts and could reduce the unnecessary CPU wakeups to handle
    extra interrupts.
    
    Reviewed-by: Gilad Broner <gbroner@codeaurora.org>
    Reviewed-by: Dolev Raviv <draviv@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit dc3c8d3a7d455859c58de8ccfaea5def6b512079
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Mon Feb 1 15:02:46 2016 +0200

    scsi: ufs: retry failed query flag requests
    
    UFS flag query requests may fail sometimes due to timeouts etc.  Add a
    wrapper function to retry up to 10 times in case of such failure,
    similar to retries being made for attribute queries.
    
    Reviewed-by: Dolev Raviv <draviv@codeaurora.org>
    Signed-off-by: Gilad Broner <gbroner@codeaurora.org>
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 53c12d0ef6fcb77aaaa4640f3e17ffe2fd9cffa0
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Mon Feb 1 15:02:45 2016 +0200

    scsi: ufs: fix error recovery after the hibern8 exit failure
    
    Hibern8 exit can be called from 3 different contexts:
        - ufshcd_hibern8_exit_work
        - ufshcd_ungate_work
        - runtime/system resume
    
    If hibern8 exit fails for some reason then we try to bring the link to
    active state by link startup but this recovery mechanism results into
    deadlock or errors from first 2 context listed above. This change fixes
    the recovery by adding proper error handling mechanism.
    
    Reviewed-by: Gilad Broner <gbroner@codeaurora.org>
    Reviewed-by: Dolev Raviv <draviv@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 87d0b4a6da338464efdb9d20b94572ff60ee1f95
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Mon Feb 1 15:02:44 2016 +0200

    scsi: ufs: add retries for hibern8 enter
    
    If hibern8 enter command fails then UFS link state may be unknown which
    may result into timeout of all the commands issued after failure.
    
    This change does 2 things (for pre-defined number of retry counts) after
    hibern8 enter failure:
    
    1. Recovers the UFS link to active state
    
    2. If link is recovered to active state, tries to put the UFS link in
       hibern8 enter again until retry count expires.
    
    Reviewed-by: Gilad Broner <gbroner@codeaurora.org>
    Reviewed-by: Dolev Raviv <draviv@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 64238fbd15ea58fc9e33a4fa35a9ee8a96d064f4
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Mon Feb 1 15:02:43 2016 +0200

    scsi: ufs: add retries to dme_peer get and set attribute
    
    The dme_peer get/set attribute commands are prone to errors, therefore
    we add three retries for the UIC command sending.  Error code returned
    from ufshcd_send_uic_cmd() is checked, and unless it was successful or
    the retries have finished, another command will be sent.
    
    Reviewed-by: Gilad Broner <gbroner@codeaurora.org>
    Reviewed-by: Dolev Raviv <draviv@codeaurora.org>
    Signed-off-by: Lee Susman <lsusman@codeaurora.org>
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit f05ac2e5930506c980817a59a47f903e25f91429
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Mon Feb 1 15:02:42 2016 +0200

    scsi: ufs: avoid exception event handler racing with PM callbacks
    
    If device raises the exception event in the response to the commands
    sent during the runtime/system PM callbacks, exception event handler
    might run in parallel with PM callbacks and may see unclocked register
    accesses. This change fixes this issue by not scheduling the exception
    event handler while PM callbacks are running.
    
    Reviewed-by: Gilad Broner <gbroner@codeaurora.org>
    Reviewed-by: Dolev Raviv <draviv@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit e5ad406cecc3a13bd1e6242d3e24aaeae32ff972
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Mon Feb 1 15:02:41 2016 +0200

    scsi: ufs: increase fDeviceInit query response timeout
    
    fDeviceInit query response time for some devices is too long that
    default query request timeout of 100ms may not be enough. Experiments
    show that fDeviceInit response sometimes takes 500ms so to be on safer
    side this change sets the timeout to 600ms. Without this change, we
    might unnecessarily have to retry fDeviceInit query requests multiple
    times and each query request timeout prints one error message.
    
    Reviewed-by: Gilad Broner <gbroner@codeaurora.org>
    Reviewed-by: Dolev Raviv <draviv@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit a48353f6d5054f2d01d62e56a0d87bd606527cc3
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Mon Feb 1 15:02:40 2016 +0200

    scsi: ufs: clear outstanding_request bit in case query timeout
    
    When sending a query to the device returns with a timeout error, we
    clear the corresponding bit in the DOORBELL register but we don't clear
    the outstanding_request field as we should.  This patch fixes this bug.
    
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Reviewed-by: Gilad Broner <gbroner@codeaurora.org>
    Reviewed-by: Dolev Raviv <draviv@codeaurora.org>
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 14497328b6a628cedafdd2df1bb8d3e9d1d5338f
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Mon Feb 1 15:02:39 2016 +0200

    scsi: ufs: verify command tag validity
    
    A race condition appear to exist between request completion when
    scsi_done() is called to end the request and set the tag back to -1 (at
    blk_queue_end_tag() scsi_end_request), and scsi layer error handling
    which aborts the command and reuses it to request sense data. Sending
    the request sense is done with tag which was set to -1 and so it is
    invalid.  Assert command tag passed from scsi layer is valid.
    
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Reviewed-by: Dolev Raviv <draviv@codeaurora.org>
    Signed-off-by: Gilad Broner <gbroner@codeaurora.org>
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 51047266f7a8f513418a387474be47a3ff2c1718
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Mon Feb 1 15:02:38 2016 +0200

    scsi: ufs: clear fields UTRD, UPIU req and rsp before new transfers
    
    Some of the data structures (like response UPIU) and/or its elements
    (unused fields) should be cleared before sending out the respective
    command to UFS device.
    
    This change clears the UPIU response data structure for query commands
    and NOP command before sending out the command. We also initialize the
    PRDT table length to zero which should take care of commands which
    doesn't have any data associated with it. We are also clearing the
    unused fields in request UPIU for NOP command.
    
    Reviewed-by: Gilad Broner <gbroner@codeaurora.org>
    Reviewed-by: Dolev Raviv <draviv@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Tested-by: Tomas Winkler <tomas.winkler@intel.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 52ac95fe06edd660a6414fd6aa3165c3437ac4be
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Mon Feb 1 15:02:37 2016 +0200

    scsi: ufs: clear UTRD, UPIU req and rsp before new transfers
    
    Clear the UFS data structures before sending new request.
    
    The SCSI command is sent to the device within the UFS UPIU request.
    As part of the transfer UPIU preparation, the SCSI command is copied
    to the UPIU structure according to the SCSI command size.
    As different SCSI commands differ in size from each other, we need
    to clear the whole SCSI command field to prevent sending uninitialized
    data to the device.
    
    The UPIU response doesn't always include the sense data and can differ
    in size.
    Hence, the UPIU response should also be cleared before the transfer.
    
    Reviewed-by: Gilad Broner <gbroner@codeaurora.org>
    Reviewed-by: Dolev Raviv <draviv@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Maya Erez <merez@codeaurora.org>
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit bad9764cfaaa15bc4263824b33956f15267442c6
Author: Colin Ian King <colin.king@canonical.com>
Date:   Sat Nov 28 16:33:56 2015 +0000

    scsi: ufs: fix spelling mistake in error message
    
    Minor issue, fix spelling mistake, Intialization -> Initialization
    
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit febdfbd2137a5727f70dfbf920105c07e6c2a21e
Merge: 0da3968 2c5d16d
Author: James Bottomley <JBottomley@Odin.com>
Date:   Thu Nov 12 07:06:18 2015 -0500

    Merge tag '4.4-scsi-mkp' into misc
    
    SCSI queue for 4.4.
    
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 64d513ac31bd02a3c9b69ef04444f36c196f9a9d
Author: Christoph Hellwig <hch@lst.de>
Date:   Thu Oct 8 09:28:04 2015 +0100

    scsi: use host wide tags by default
    
    This patch changes the !blk-mq path to the same defaults as the blk-mq
    I/O path by always enabling block tagging, and always using host wide
    tags.  We've had blk-mq available for a few releases so bugs with
    this mode should have been ironed out, and this ensures we get better
    coverage of over tagging setup over different configs.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Acked-by: Jens Axboe <axboe@kernel.dk>
    Reviewed-by: Hannes Reinecke <hare@suse.de>
    Signed-off-by: James Bottomley <JBottomley@Odin.com>

commit f06fcc7155dcbcd9b697d499595a2c1a3945bda2
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Wed Oct 28 13:15:51 2015 +0200

    scsi: ufs-qcom: add QUniPro hardware support and power optimizations
    
    New revisions of UFS host controller supports the new UniPro
    hardware controller (referred as QUniPro). This patch adds
    the support to enable this new UniPro controller hardware.
    
    This change also adds power optimization for bus scaling feature,
    as well as support for HS-G3 power mode.
    
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Reviewed-by: Gilad Broner <gbroner@codeaurora.org>
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Reviewed-by: Hannes Reinecke <hare@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 6e3fd44d7b7638e0f7e3331eaf7f90f3a629f3e7
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Wed Oct 28 13:15:50 2015 +0200

    scsi: ufs-qcom: add debug prints for test bus
    
    Adds support for configuring and reading the test bus and debug
    registers. This change also adds another vops in order to print the
    debug registers.
    
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Reviewed-by: Gilad Broner <gbroner@codeaurora.org>
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Reviewed-by: Hannes Reinecke <hare@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 47555a5c8a11a423e6767f942941c745766c99a2
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Wed Oct 28 13:15:49 2015 +0200

    scsi: ufs: make the UFS variant a platform device
    
    This change turns the UFS variant (SCSI_UFS_QCOM) into a UFS
    a platform device.
    In order to do so a few additional changes are required:
    1. The ufshcd-pltfrm is no longer serves as a platform device.
       Now it only serves as a group of platform APIs such as PM APIs
       (runtime suspend/resume, system suspend/resume etc), parsers of
       clocks, regulators and pm_levels from DT.
    2. What used to be the old platform "probe" is now "only"
       a pltfrm_init() routine, that does exactly the same, but only
       being called by the new probe function of the UFS variant.
    
    Reviewed-by: Rob Herring <robherring2@gmail.com>
    Reviewed-by: Gilad Broner <gbroner@codeaurora.org>
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Tested-by: Alim Akhtar <alim.akhtar@samsung.com>
    Reviewed-by: Hannes Reinecke <hare@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 0263bcd0e8319642440fa29c184b0d7f4b2d5857
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Wed Oct 28 13:15:48 2015 +0200

    scsi: ufs: creates wrapper functions for vops
    
    In order to simplify the code a set of wrapper functions is created
    to test and call each of the variant operations.
    
    Reviewed-by: Akinobu Mita <akinobu.mita@gmail.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Reviewed-by: Gilad Broner <gbroner@codeaurora.org>
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Tested-by: Alim Akhtar <alim.akhtar@samsung.com>
    Reviewed-by: Hannes Reinecke <hare@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 1ce5898af55e23e933f6a68d102d4be730e9b503
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Wed Oct 28 13:15:47 2015 +0200

    scsi: ufs: add ufshcd_get_variant ufshcd_set_variant
    
    This patch adds ufshcd_get_variant() and ufshcd_set_variant()
    routines in order to get/set the variant specific data.
    
    Reviewed-by: Akinobu Mita <akinobu.mita@gmail.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Reviewed-by: Gilad Broner <gbroner@codeaurora.org>
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Tested-by: Alim Akhtar <alim.akhtar@samsung.com>
    Reviewed-by: Hannes Reinecke <hare@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 9bac5db4b229977054c9936e859dc41e1cd64c59
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Wed Oct 28 13:15:46 2015 +0200

    scsi: ufs-qcom: update configuration option of SCSI_UFS_QCOM component
    
    This change is required in order to be able to build the component
    as a module.
    
    Reviewed-by: Akinobu Mita <akinobu.mita@gmail.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Reviewed-by: Gilad Broner <gbroner@codeaurora.org>
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Reviewed-by: Hannes Reinecke <hare@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit fb819ee85e4281821b26f1e5b1812bb43ab5c41a
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Wed Oct 28 13:15:45 2015 +0200

    scsi: ufs-qcom: fix compilation warning if compiled as a module
    
    This change fixes a compilation warning that happens if SCSI_UFS_QCOM is
    compiled as a module.  Also this patch fixes an error happens when
    insmod the module: "ufs_qcom: module license 'unspecified' taints
    kernel."
    
    Reviewed-by: Akinobu Mita <akinobu.mita@gmail.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Reviewed-by: Gilad Broner <gbroner@codeaurora.org>
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Reviewed-by: Hannes Reinecke <hare@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit acd53127c4adbd34570b221e7ea1f7fc94aea923
Merge: f9d1b5a c8806b6
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Jun 23 15:55:44 2015 -0700

    Merge tag 'scsi-misc' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi
    
    Pull SCSI updates from James Bottomley:
     "This is the usual grab bag of driver updates (lpfc, hpsa,
      megaraid_sas, cxgbi, be2iscsi) plus an assortment of minor updates.
    
      There is also one new driver: the Cisco snic.  The advansys driver has
      been rewritten to get rid of the warning about converting it to the
      DMA API, the tape statistics patch got in and finally, there's a
      resuffle of SCSI header files to separate more cleanly initiator from
      target mode (and better share the common definitions)"
    
    * tag 'scsi-misc' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi: (156 commits)
      snic: driver for Cisco SCSI HBA
      qla2xxx: Fix indentation
      qla2xxx: Comment out unreachable code
      fusion: remove dead MTRR code
      advansys: fix compilation errors and warnings when CONFIG_PCI is not set
      mptsas: fix depth param in scsi_track_queue_full
      megaraid: fix irq setup process regression
      lpfc: Update version to 10.7.0.0 for upstream patch set.
      lpfc: Fix to drop PLOGIs from fabric node till LOGO processing completes
      lpfc: Fix scsi task management error message.
      lpfc: Fix cq_id masking problem.
      lpfc: Fix scsi prep dma buf error.
      lpfc: Add support for using block multi-queue
      lpfc: Devices are not discovered during takeaway/giveback testing
      lpfc: Fix vport deletion failure.
      lpfc: Check for active portpeerbeacon.
      lpfc: Update driver version for upstream patch set 10.6.0.1.
      lpfc: Change buffer pool empty message to miscellaneous category
      lpfc: Fix incorrect log message reported for empty FCF record.
      lpfc: Fix rport leak.
      ...

commit e144cd045e123757b6b5f732c420b94dd5544407
Author: Suthikulpanit, Suravee <Suravee.Suthikulpanit@amd.com>
Date:   Wed Jun 10 11:08:58 2015 -0500

    ufs: fix TRUE and FALSE re-define build error
    
    Signed-off-by: Suravee Suthikulpanit <Suravee.Suthikulpanit@amd.com>
    Cc: Vinayak Holikatti <vinholikatti@gmail.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

commit ae977587da4ca9f34dbbae24e5479a3e8da166d0
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Sun May 17 18:55:06 2015 +0300

    scsi: ufs-qcom: enable UFSHCD_QUIRK_BROKEN_UFS_HCI_VERSION
    
    Newer revisions of QUALCOMM Technologies UFS host controller may not
    advertise the correct version information in UFS HCI VER register.
    To handle this, enable UFSHCD_QUIRK_BROKEN_UFS_HCI_VERSION to let
    UFS standard host controller driver call into vendor specific
    operation to get right UFS HCI VER register value.
    
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Reviewed-by: Akinobu Mita <akinobu.mita@gmail.com>
    Signed-off-by: James Bottomley <JBottomley@Odin.com>

commit 9949e702e69718965f3c3c6787eb17d420daa7df
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Sun May 17 18:55:05 2015 +0300

    scsi: ufs: add quirk to handle broken UFS HCI version
    
    Some host controller hardware controllers may not advertise correct
    version in UFS HCI VER register. To workaround this, add new quirk
    and call the host controller hardware vendor specific callback to
    get the correct UFS HCI version register value.
    
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Reviewed-by: Akinobu Mita <akinobu.mita@gmail.com>
    Signed-off-by: James Bottomley <JBottomley@Odin.com>

commit 2c0cc2e2693b3c13cf007cfd25b6ea43a1eceb45
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Sun May 17 18:55:04 2015 +0300

    scsi: ufs-qcom: enable UFSHCD_QUIRK_DME_PEER_ACCESS_AUTO_MODE quirk
    
    Current version of host controller on QUALCOMM Technologies requires
    this quirk to be enabled, as DME commands to device must be sent
    only in AUTO mode (SLOW AUTO or FAST AUTO).
    
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Reviewed-by: Akinobu Mita <akinobu.mita@gmail.com>
    Signed-off-by: James Bottomley <JBottomley@Odin.com>

commit 874237f7f2aae61d166613cc191238d8335087f8
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Sun May 17 18:55:03 2015 +0300

    scsi: ufs: introduce UFSHCD_QUIRK_DME_PEER_ACCESS_AUTO_MODE quirk
    
    Some UFS host controllers may only allow accessing the peer DME attribute
    in AUTO mode (FAST AUTO or SLOW AUTO) hence we had added a quirk for
    switching to AUTO power mode before accessing the peer DME attribute.
    
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Reviewed-by: Akinobu Mita <akinobu.mita@gmail.com>
    Signed-off-by: James Bottomley <JBottomley@Odin.com>

commit 8163743e23035dd2e2ab531878517137033d62bf
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Sun May 17 18:55:02 2015 +0300

    scsi: ufs-qcom: enable quirk to fix gear change to HS
    
    With the G3 UFS devices, changing gear into HS is failing in UFS host
    controllers of version 0x2.
    The quirk solves the problem of changing gear into HS by enabling
    the attribute that specifies whether or not the inbound Link supports
    unterminated line in HS mode.
    
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Reviewed-by: Akinobu Mita <akinobu.mita@gmail.com>
    Signed-off-by: James Bottomley <JBottomley@Odin.com>

commit c3a2f9ee93cf2d074dbf0234c2ef5dcdbf84a7d0
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Sun May 17 18:55:01 2015 +0300

    scsi: ufs: introduce a broken PA_RXHSUNTERMCAP quirk
    
    The attribute PA_RXHSUNTERMCAP specifies whether or not the
    inbound Link supports unterminated line in HS mode. enabling this
    attribute to 1 fixes moving to HS gear.
    
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Reviewed-by: Akinobu Mita <akinobu.mita@gmail.com>
    Signed-off-by: James Bottomley <JBottomley@Odin.com>

commit 2f0183781a77e84bf58b1b375d49f73d3a96d4ee
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Sun May 17 18:55:00 2015 +0300

    scsi: ufs-qcom: enable UFSHCD_QUIRK_BROKEN_LCC
    
    LCC (Line Control Command) are being used for communication between
    UFS host and UFS device. But UFS host controller on QUALCOMM
    Technologies have an issue with issuing the LCC commands to
    UFS device and hence this quirk is enabled in order to to disable
    LCC from the host side.
    
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Reviewed-by: Akinobu Mita <akinobu.mita@gmail.com>
    Signed-off-by: James Bottomley <JBottomley@Odin.com>

commit 7ca38cf300eb7fba9010d847baa6a4f5c458dd4e
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Sun May 17 18:54:59 2015 +0300

    scsi: ufs: provide a quirk to disable the LCC
    
    LCC (Line Control Command) are being used for communication between
    UFS host and UFS device.
    New commercial UFS devices don't have the issues with LCC processing
    but UFS host controller might still have the issue with LCC processing,
    hence, added a routine to disable TX LCC on the device.
    
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Reviewed-by: Akinobu Mita <akinobu.mita@gmail.com>
    Signed-off-by: James Bottomley <JBottomley@Odin.com>

commit 81c7e06a5ffcca8ac8bbaa2422051bf1d7a87a46
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Sun May 17 18:54:58 2015 +0300

    scsi: ufs-qcom: don't enable interrupt aggregation
    
    Current versions of UFS host controllers on QUALCOMM Technologies
    have interrupt aggregation logic broken.
    Interrupt aggregation may not work if both threshold count and timeout
    is enabled. Hence disable interrupt aggregation by enabling
    UFSHCD_QUIRK_BROKEN_INTR_AGGR quirk until its fixed in the newer
    UFS host controller revisions.
    
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Reviewed-by: Akinobu Mita <akinobu.mita@gmail.com>
    Signed-off-by: James Bottomley <JBottomley@Odin.com>

commit b852190e589abe8ad4891251424a636872960f56
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Sun May 17 18:54:57 2015 +0300

    scsi: ufs: introduce the capability and quirk for interrupt aggregation
    
    UFS HCI (Host Controller Interface) allows the transfer requests
    interrupts to be aggregated to generate the single interrupt but
    this can impact the performance. Hence introduce the capability which
    gives choice to use the interrupt aggregation capability or not.
    By default interrupt aggregation capability is kept disabled.
    
    This change also introduces a quirk for broken interrupt aggregation
    feature, as in some UFS controllers, this feature may not work.
    
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Reviewed-by: Akinobu Mita <akinobu.mita@gmail.com>
    Signed-off-by: James Bottomley <JBottomley@Odin.com>

commit 0d143c69a32d062ee859b75cab982a926ef79817
Author: Stephen Boyd <sboyd@codeaurora.org>
Date:   Fri Apr 10 16:11:06 2015 -0700

    ufs-qcom: Switch dependency to ARCH_QCOM
    
    This device only exists on platforms under ARCH_QCOM, not
    ARCH_MSM.
    
    Signed-off-by: Stephen Boyd <sboyd@codeaurora.org>
    Reviewed-by: Yaniv Gardi <ygardi@codeaurora.org>
    Signed-off-by: James Bottomley <JBottomley@Odin.com>

commit 7d69cff26ceadce8638cb65191285932a3de3d4c
Merge: 8fa6f49 0351b8f
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Apr 16 19:02:04 2015 -0400

    Merge tag 'scsi-misc' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi
    
    Pull SCSI updates from James Bottomley:
     "This is the usual grab bag of driver updates (lpfc, qla2xxx, storvsc,
      aacraid, ipr) plus an assortment of minor updates.  There's also a
      major update to aic1542 which moves the driver into this millenium"
    
    * tag 'scsi-misc' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi: (106 commits)
      change SCSI Maintainer email
      sd, mmc, virtio_blk, string_helpers: fix block size units
      ufs: add support to allow non standard behaviours (quirks)
      ufs-qcom: save controller revision info in internal structure
      qla2xxx: Update driver version to 8.07.00.18-k
      qla2xxx: Restore physical port WWPN only, when port down detected for FA-WWPN port.
      qla2xxx: Fix virtual port configuration, when switch port is disabled/enabled.
      qla2xxx: Prevent multiple firmware dump collection for ISP27XX.
      qla2xxx: Disable Interrupt handshake for ISP27XX.
      qla2xxx: Add debugging info for MBX timeout.
      qla2xxx: Add serdes read/write support for ISP27XX
      qla2xxx: Add udev notification to save fw dump for ISP27XX
      qla2xxx: Add message for sucessful FW dump collected for ISP27XX.
      qla2xxx: Add support to load firmware from file for ISP 26XX/27XX.
      qla2xxx: Fix beacon blink for ISP27XX.
      qla2xxx: Increase the wait time for firmware to be ready for P3P.
      qla2xxx: Fix crash due to wrong casting of reg for ISP27XX.
      qla2xxx: Fix warnings reported by static checker.
      lpfc: Update version to 10.5.0.0 for upstream patch set
      lpfc: Update copyright to 2015
      ...

commit cad2e03d8607793fd71a830b4b41fc8e9e9995ea
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Tue Mar 31 17:37:14 2015 +0300

    ufs: add support to allow non standard behaviours (quirks)
    
    Some implementation of UFS host controller HW might have some non-standard
    behaviours (quirks) when compared to behaviour specified by UFSHCI
    specification. This patch add support to allow specifying all such quirks
    to standard UFS host controller driver so standard driver takes them into
    account.
    
    In this change a UFSHCD_QUIRK_DELAY_BEFORE_DME_CMDS is introduced,
    where a minimum delay of 1ms is required before DME commands for
    stability purposes.
    
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Reviewed-by: Gilad Broner <gbroner@codeaurora.org>
    Signed-off-by: James Bottomley <JBottomley@Odin.com>

commit bfdbe8ba21291c024afcec95b7bd515b5bf69689
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Tue Mar 31 17:37:13 2015 +0300

    ufs-qcom: save controller revision info in internal structure
    
    Sometimes, specific information about the UFS controller revision is
    required in order to determine certain operations or execute
    controller dependent quirks.
    In order to avoid reading the controller revision multiple times,
    we simply read it once and save this information in internal structure.
    
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Reviewed-by: Gilad Broner <gbroner@codeaurora.org>
    Signed-off-by: James Bottomley <JBottomley@Odin.com>

commit 7b16a07c32935ea7f59f4408b7c9200d9cd0cced
Author: Bjorn Andersson <bjorn.andersson@sonymobile.com>
Date:   Wed Feb 11 19:35:28 2015 -0800

    ufs: Rename of regulator_set_optimum_mode
    
    The function regulator_set_optimum_mode() is changing name to
    regulator_set_load(), so update the code accordingly. Also cleaned up
    ufshcd_config_vreg_load() while touching the code.
    
    Signed-off-by: Bjorn Andersson <bjorn.andersson@sonymobile.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

commit 81c0fc51b7a790ebe05a35de2c9176bd2f5bfe46
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Thu Jan 15 16:32:37 2015 +0200

    ufs-qcom: add support for Qualcomm Technologies Inc platforms
    
    This change adds support for Qualcomm Technologies Inc platforms that
    use UFS driver. for example, it adds :
    - PM specific operations during hibern8, suspend, resume, clock setup
    - qcom-ufs generic phy driver initialization, calibration,
      power-on/off sequence, etc.
    - UFS Controller specific configuration
    - Rate, Gear, Mode negotiation between device and controller
    
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Reviewed-by: Dov Levenglick <dovl@codeaurora.org>
    Signed-off-by: Christoph Hellwig <hch@lst.de>

commit 2104551969e8011e72788dc5674609d437448cf6
Author: Hannes Reinecke <hare@suse.de>
Date:   Thu Jan 8 07:43:46 2015 +0100

    scsi: use per-cpu buffer for formatting sense
    
    Convert sense buffer logging to use the per-cpu buffer to avoid line
    breakup.
    
    Tested-by: Robert Elliott <elliott@hp.com>
    Reviewed-by: Robert Elliott <elliott@hp.com>
    Signed-off-by: Hannes Reinecke <hare@suse.de>
    Signed-off-by: Christoph Hellwig <hch@lst.de>

commit c0f486fde3f353232c1cc2fd4d62783ac782a467
Merge: 385336e 2ec1c17
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Dec 18 20:28:33 2014 -0800

    Merge tag 'pm+acpi-3.19-rc1-2' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm
    
    Pull more ACPI and power management updates from Rafael Wysocki:
     "These are regression fixes (leds-gpio, ACPI backlight driver,
      operating performance points library, ACPI device enumeration
      messages, cpupower tool), other bug fixes (ACPI EC driver, ACPI device
      PM), some cleanups in the operating performance points (OPP)
      framework, continuation of CONFIG_PM_RUNTIME elimination, a couple of
      minor intel_pstate driver changes, a new MAINTAINERS entry for it and
      an ACPI fan driver change needed for better support of thermal
      management in user space.
    
      Specifics:
    
       - Fix a regression in leds-gpio introduced by a recent commit that
         inadvertently changed the name of one of the properties used by the
         driver (Fabio Estevam).
    
       - Fix a regression in the ACPI backlight driver introduced by a
         recent fix that missed one special case that had to be taken into
         account (Aaron Lu).
    
       - Drop the level of some new kernel messages from the ACPI core
         introduced by a recent commit to KERN_DEBUG which they should have
         used from the start and drop some other unuseful KERN_ERR messages
         printed by ACPI (Rafael J Wysocki).
    
       - Revert an incorrect commit modifying the cpupower tool (Prarit
         Bhargava).
    
       - Fix two regressions introduced by recent commits in the OPP library
         and clean up some existing minor issues in that code (Viresh
         Kumar).
    
       - Continue to replace CONFIG_PM_RUNTIME with CONFIG_PM throughout the
         tree (or drop it where that can be done) in order to make it
         possible to eliminate CONFIG_PM_RUNTIME (Rafael J Wysocki, Ulf
         Hansson, Ludovic Desroches).
    
         There will be one more "CONFIG_PM_RUNTIME removal" batch after this
         one, because some new uses of it have been introduced during the
         current merge window, but that should be sufficient to finally get
         rid of it.
    
       - Make the ACPI EC driver more robust against race conditions related
         to GPE handler installation failures (Lv Zheng).
    
       - Prevent the ACPI device PM core code from attempting to disable
         GPEs that it has not enabled which confuses ACPICA and makes it
         report errors unnecessarily (Rafael J Wysocki).
    
       - Add a "force" command line switch to the intel_pstate driver to
         make it possible to override the blacklisting of some systems in
         that driver if needed (Ethan Zhao).
    
       - Improve intel_pstate code documentation and add a MAINTAINERS entry
         for it (Kristen Carlson Accardi).
    
       - Make the ACPI fan driver create cooling device interfaces witn
         names that reflect the IDs of the ACPI device objects they are
         associated with, except for "generic" ACPI fans (PNP ID "PNP0C0B").
    
         That's necessary for user space thermal management tools to be able
         to connect the fans with the parts of the system they are supposed
         to be cooling properly.  From Srinivas Pandruvada"
    
    * tag 'pm+acpi-3.19-rc1-2' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm: (32 commits)
      MAINTAINERS: add entry for intel_pstate
      ACPI / video: update the skip case for acpi_video_device_in_dod()
      power / PM: Eliminate CONFIG_PM_RUNTIME
      NFC / PM: Replace CONFIG_PM_RUNTIME with CONFIG_PM
      SCSI / PM: Replace CONFIG_PM_RUNTIME with CONFIG_PM
      ACPI / EC: Fix unexpected ec_remove_handlers() invocations
      Revert "tools: cpupower: fix return checks for sysfs_get_idlestate_count()"
      tracing / PM: Replace CONFIG_PM_RUNTIME with CONFIG_PM
      x86 / PM: Replace CONFIG_PM_RUNTIME in io_apic.c
      PM: Remove the SET_PM_RUNTIME_PM_OPS() macro
      mmc: atmel-mci: use SET_RUNTIME_PM_OPS() macro
      PM / Kconfig: Replace PM_RUNTIME with PM in dependencies
      ARM / PM: Replace CONFIG_PM_RUNTIME with CONFIG_PM
      sound / PM: Replace CONFIG_PM_RUNTIME with CONFIG_PM
      phy / PM: Replace CONFIG_PM_RUNTIME with CONFIG_PM
      video / PM: Replace CONFIG_PM_RUNTIME with CONFIG_PM
      tty / PM: Replace CONFIG_PM_RUNTIME with CONFIG_PM
      spi: Replace CONFIG_PM_RUNTIME with CONFIG_PM
      ACPI / PM: Do not disable wakeup GPEs that have not been enabled
      ACPI / utils: Drop error messages from acpi_evaluate_reference()
      ...

commit 4f7ad5211eb4d331a54f3cc6832883e5e7e95eea
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Sun Dec 14 23:13:55 2014 +0100

    SCSI / PM: Replace CONFIG_PM_RUNTIME with CONFIG_PM
    
    After commit b2b49ccbdd54 (PM: Kconfig: Set PM_RUNTIME if PM_SLEEP is
    selected) PM_RUNTIME is always set if PM is set, so #ifdef blocks
    depending on CONFIG_PM_RUNTIME may now be changed to depend on
    CONFIG_PM.
    
    Replace CONFIG_PM_RUNTIME with CONFIG_PM everywhere under
    drivers/scsi/ and in include/scsi/scsi_device.h.
    
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Reviewed-by: Aaron Lu <aaron.lu@intel.com>
    Acked-by: Christoph Hellwig <hch@lst.de>

commit e6b5be2be4e30037eb551e0ed09dd97bd00d85d3
Merge: 37da7bb f1c488a
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sun Dec 14 16:10:09 2014 -0800

    Merge tag 'driver-core-3.19-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/driver-core
    
    Pull driver core update from Greg KH:
     "Here's the set of driver core patches for 3.19-rc1.
    
      They are dominated by the removal of the .owner field in platform
      drivers.  They touch a lot of files, but they are "simple" changes,
      just removing a line in a structure.
    
      Other than that, a few minor driver core and debugfs changes.  There
      are some ath9k patches coming in through this tree that have been
      acked by the wireless maintainers as they relied on the debugfs
      changes.
    
      Everything has been in linux-next for a while"
    
    * tag 'driver-core-3.19-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/driver-core: (324 commits)
      Revert "ath: ath9k: use debugfs_create_devm_seqfile() helper for seq_file entries"
      fs: debugfs: add forward declaration for struct device type
      firmware class: Deletion of an unnecessary check before the function call "vunmap"
      firmware loader: fix hung task warning dump
      devcoredump: provide a one-way disable function
      device: Add dev_<level>_once variants
      ath: ath9k: use debugfs_create_devm_seqfile() helper for seq_file entries
      ath: use seq_file api for ath9k debugfs files
      debugfs: add helper function to create device related seq_file
      drivers/base: cacheinfo: remove noisy error boot message
      Revert "core: platform: add warning if driver has no owner"
      drivers: base: support cpu cache information interface to userspace via sysfs
      drivers: base: add cpu_device_create to support per-cpu devices
      topology: replace custom attribute macros with standard DEVICE_ATTR*
      cpumask: factor out show_cpumap into separate helper function
      driver core: Fix unbalanced device reference in drivers_probe
      driver core: fix race with userland in device_add()
      sysfs/kernfs: make read requests on pre-alloc files use the buffer.
      sysfs/kernfs: allow attributes to request write buffer be pre-allocated.
      fs: sysfs: return EGBIG on write if offset is larger than file size
      ...

commit 096cbc35eaecf5865a3274f21eae26955b32861b
Merge: dc843ef 79855d1
Author: James Bottomley <JBottomley@Parallels.com>
Date:   Mon Dec 8 07:42:02 2014 -0800

    Merge remote-tracking branch 'scsi-queue/drivers-for-3.19' into for-linus
    
    Conflicts:
    	drivers/scsi/scsi_debug.c
    
    Agreed and tested resolution to a merge problem between a fix in scsi_debug
    and a driver update
    
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>

commit dc843ef00e79ef0466d4d66bb20beeccda92e003
Merge: 009d043 249b15b
Author: James Bottomley <JBottomley@Parallels.com>
Date:   Mon Dec 8 07:40:20 2014 -0800

    Merge remote-tracking branch 'scsi-queue/core-for-3.19' into for-linus

commit 3e660fbef96f53d01ba022b1b75b72759a02983e
Author: Akinobu Mita <akinobu.mita@gmail.com>
Date:   Tue Nov 18 23:02:46 2014 +0900

    ufs: fix NULL dereference when no regulators are defined
    
    If no voltage supply regulators are defined for the UFS devices (assumed
    they are always-on), ufshcd_config_vreg_load() can be called on
    suspend/resume paths with vreg == NULL as hba->vreg_info.vcc* equal to
    NULL, and it causes NULL pointer dereference.
    
    This fixes it by making ufshcd_config_vreg_{h,l}pm noop when no regulators
    are defined.
    
    Signed-off-by: Akinobu Mita <mita@fixstars.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Christoph Hellwig <hch@lst.de>

commit 97cd6805acf0d6b1b06b439cbc8c25586d73dcfc
Author: Akinobu Mita <akinobu.mita@gmail.com>
Date:   Mon Nov 24 14:24:18 2014 +0900

    ufs: ensure clk gating work is finished before module unloading
    
    When dynamic clk gating feature is enabled, delayed workqueue machanism
    is used in order to detect certain period of inactivity.  But there is no
    guarantee that scheduled gating work is completed before module unloading.
    So it can cause kernel crash by accessing memory after it was freed.
    
    Fix it by cancelling clk gating and ungating works and ensure that its
    execution is finished before module unloading.
    
    Signed-off-by: Akinobu Mita <mita@fixstars.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Christoph Hellwig <hch@lst.de>

commit db5ed4dfd5dd0142ec36ff7b335e0ec3b836b3e6
Author: Christoph Hellwig <hch@lst.de>
Date:   Thu Nov 13 15:08:42 2014 +0100

    scsi: drop reason argument from ->change_queue_depth
    
    Drop the now unused reason argument from the ->change_queue_depth method.
    Also add a return value to scsi_adjust_queue_depth, and rename it to
    scsi_change_queue_depth now that it can be used as the default
    ->change_queue_depth implementation.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Mike Christie <michaelc@cs.wisc.edu>
    Reviewed-by: Hannes Reinecke <hare@suse.de>

commit c40ecc12cfdb630332198a04e2832ae8218a61f1
Author: Christoph Hellwig <hch@lst.de>
Date:   Thu Nov 13 14:25:11 2014 +0100

    scsi: avoid ->change_queue_depth indirection for queue full tracking
    
    All drivers use the implementation for ramping the queue up and down, so
    instead of overloading the change_queue_depth method call the
    implementation diretly if the driver opts into it by setting the
    track_queue_depth flag in the host template.
    
    Note that a few drivers validated the new queue depth in their
    change_queue_depth method, but as we never go over the queue depth
    set during slave_configure or the sysfs file this isn't nessecary
    and can safely be removed.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Mike Christie <michaelc@cs.wisc.edu>
    Reviewed-by: Hannes Reinecke <hare@suse.de>
    Reviewed-by: Venkatesh Srinivas <venkateshs@google.com>

commit e8cb64db81e8c88c5c824ca74c2e57b4c6919ca6
Author: Dolev Raviv <draviv@codeaurora.org>
Date:   Thu Oct 23 13:25:17 2014 +0300

    scsi: ufs: fix static checker warning in ufshcd_parse_clock_info
    
    This patch fixes newly introduced static checker warning in
    ufshcd_parse_clock_info, introduced by UFS power management series.
    
    Warning:
    drivers/scsi/ufs/ufshcd-pltfrm.c:138 ufshcd_parse_clock_info()
    warn: passing devm_ allocated variable to kfree. 'clkfreq'
    
    To fix it we remove the kfree(clkfreq) statement.
    In addition we removed the redundant goto label.
    
    Signed-off-by: Dolev Raviv <draviv@codeaurora.org>
    Reviewed-by: Maya Erez <merez@codeaurora.org>
    Signed-off-by: Christoph Hellwig <hch@lst.de>

commit eda910e4d03af878482055ce511a522d9bbda0e8
Author: Dolev Raviv <draviv@codeaurora.org>
Date:   Thu Oct 23 13:25:16 2014 +0300

    scsi: ufs: fix static checker warning in __ufshcd_setup_clocks
    
    This patch fixes newly introduced static checker warning in
    __ufshcd_setup_clocks, introduced by UFS power management series.
    
    Warning:
    drivers/scsi/ufs/ufshcd.c:4474 __ufshcd_setup_clocks()
    warn: we tested 'ret' before and it was 'false'
    
    To fix it we remove the (!ret) from the condition.
    
    Signed-off-by: Dolev Raviv <draviv@codeaurora.org>
    Reviewed-by: Maya Erez <merez@codeaurora.org>
    Signed-off-by: Christoph Hellwig <hch@lst.de>

commit 758581b929ce50ae3a5cf80735e3e58ef45c31b5
Author: Dolev Raviv <draviv@codeaurora.org>
Date:   Thu Oct 23 13:25:15 2014 +0300

    scsi: ufs: fix static checker warning in ufshcd_populate_vreg
    
    This patch fixes newly introduced static checker warning in
    ufshcd_populate_vreg, introduced by UFS power management series.
    
    Warning:
    drivers/scsi/ufs/ufshcd-pltfrm.c:167 ufshcd_populate_vreg()
    warn: missing error code here? 'devm_kzalloc()' failed. 'ret' = '0'
    
    To fix it we return -ENOMEM and skip the message print.
    
    Signed-off-by: Dolev Raviv <draviv@codeaurora.org>
    Reviewed-by: Maya Erez <merez@codeaurora.org>
    Signed-off-by: Christoph Hellwig <hch@lst.de>

commit 233b594bdf6d846f03816eec1c19ccbd7e4618c0
Author: Dolev Raviv <draviv@codeaurora.org>
Date:   Thu Oct 23 13:25:14 2014 +0300

    scsi: ufs: fix static checker errors in ufshcd_system_suspend
    
    This patch fixes newly introduced sparse warning in
    ufshcd_system_suspend, introduced by UFS power management series.
    
    Sparse warning:
    drivers/scsi/ufs/ufshcd.c:5118 ufshcd_system_suspend()
    error: we previously assumed 'hba' could be null (see line 5089)
    
    To fix it, we return 0 in case HBA is not initialized or is
    not powered.
    
    Signed-off-by: Dolev Raviv <draviv@codeaurora.org>
    Reviewed-by: Maya Erez <merez@codeaurora.org>
    Signed-off-by: Christoph Hellwig <hch@lst.de>

commit 5064636c759628caee3b855048be25a9a33cc8ad
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Thu Oct 23 13:25:13 2014 +0300

    ufs: fix power info after link start-up
    
    After link start-up power mode will always be PWM G1. This is not
    reflected in the pwr_info struct which will keep the previous values.
    Since ufshcd_change_power_mode() tries to avoid unnecessary power mode
    change if the requested power mode and current power mode are same,
    power mode change won't execute again after driver initialization.
    
    This patch solves the problem by setting pwr_info to PWM G1 after link
    start-up.
    
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Signed-off-by: Dolev Raviv <draviv@codeaurora.org>
    Reviewed-by: Maya Erez <merez@codeaurora.org>
    Signed-off-by: Christoph Hellwig <hch@lst.de>

commit 7c48bfd038e570cd12b33d6ab13316f3a0b0d1a7
Author: Akinobu Mita <akinobu.mita@gmail.com>
Date:   Thu Oct 23 13:25:12 2014 +0300

    ufs: fix reference counting of W-LUs
    
    UFS driver adds three well known LUs in the initialization, but those
    reference counts are not decremented, so it makes ufshcd module
    impossible to unload.
    
    This fixes it by putting scsi_device_put() in the initalization, and in
    order to protect concurrent access to hba->sdev_ufs_device (UFS Device
    W-LU) from manual delete, increment the reference count while requesting
    device power mode setting.
    
    The rest of W-LUs (hba->sdev_boot and hba->sdev_rpmb) are not directly
    used from driver, so these references in struct ufs_hba are removed.
    
    Signed-off-by: Akinobu Mita <mita@fixstars.com>
    Reviewed-by: Maya Erez <merez@codeaurora.org>
    Reviewed-by: Dolev Raviv <draviv@codeaurora.org>
    Signed-off-by: Christoph Hellwig <hch@lst.de>

commit d7cb71ec3a28e525c4f523ca52d5389407b7aea0
Author: Christoph Hellwig <hch@lst.de>
Date:   Mon Nov 3 20:43:28 2014 +0100

    ufs: remove spurious scsi_set_tag_type call
    
    ufs never looks at the tag type, so there is no need to set it either.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Mike Christie <michaelc@cs.wisc.edu>
    Reviewed-by: Hannes Reinecke <hare@suse.de>

commit ee11560f3ad150a1108d261cbff4fd617cc3fa09
Author: Christoph Hellwig <hch@lst.de>
Date:   Mon Nov 3 20:40:56 2014 +0100

    scsi: don't force tagged_supported in drivers
    
    Now that we also get proper values in cmd->request->tag for untagged
    commands, there is no need to force tagged_supported to on in drivers
    that need host-wide tags.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Mike Christie <michaelc@cs.wisc.edu>
    Reviewed-by: Hannes Reinecke <hare@suse.de>

commit c8b09f6fb67df7fc1b51ced1037fa9b677428149
Author: Christoph Hellwig <hch@lst.de>
Date:   Mon Nov 3 20:15:14 2014 +0100

    scsi: don't set tagging state from scsi_adjust_queue_depth
    
    Remove the tagged argument from scsi_adjust_queue_depth, and just let it
    handle the queue depth.  For most drivers those two are fairly separate,
    given that most modern drivers don't care about the SCSI "tagged" status
    of a command at all, and many old drivers allow queuing of multiple
    untagged commands in the driver.
    
    Instead we start out with the ->simple_tags flag set before calling
    ->slave_configure, which is how all drivers actually looking at
    ->simple_tags except for one worke anyway.  The one other case looks
    broken, but I've kept the behavior as-is for now.
    
    Except for that we only change ->simple_tags from the ->change_queue_type,
    and when rejecting a tag message in a single driver, so keeping this
    churn out of scsi_adjust_queue_depth is a clear win.
    
    Now that the usage of scsi_adjust_queue_depth is more obvious we can
    also remove all the trivial instances in ->slave_alloc or ->slave_configure
    that just set it to the cmd_per_lun default.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Mike Christie <michaelc@cs.wisc.edu>
    Reviewed-by: Hannes Reinecke <hare@suse.de>
    Reviewed-by: Martin K. Petersen <martin.petersen@oracle.com>

commit 2ecb204d07ac8debe3893c362415919bc78bebd6
Author: Christoph Hellwig <hch@lst.de>
Date:   Mon Nov 3 14:09:02 2014 +0100

    scsi: always assign block layer tags if enabled
    
    Allow a driver to ask for block layer tags by setting .use_blk_tags in the
    host template, in which case it will always see a valid value in
    request->tag, similar to the behavior when using blk-mq.  This means even
    SCSI "untagged" commands will now have a tag, which is especially useful
    when using a host-wide tag map.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Mike Christie <michaelc@cs.wisc.edu>
    Reviewed-by: Martin K. Petersen <martin.petersen@oracle.com>
    Reviewed-by: Hannes Reinecke <hare@suse.de>

commit ef61329db7b8b4326b1c4e603806b2754fd2a692
Author: Hannes Reinecke <hare@suse.de>
Date:   Fri Oct 24 14:27:00 2014 +0200

    scsi: remove scsi_show_result()
    
    Open-code scsi_print_result in sd.c, and cleanup logging to
    not print duplicate informations.
    Also remove the call to scsi_show_result() in ufshcd.c
    to be consistent with other callers of scsi_execute().
    
    With that we can remove scsi_show_result in constants.c
    
    Signed-off-by: Hannes Reinecke <hare@suse.de>
    Reviewed-by: Robert Elliott <elliott@hp.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>

commit d811b848ebb78a1135658aa20a80e31994df47f7
Author: Hannes Reinecke <hare@suse.de>
Date:   Fri Oct 24 14:26:45 2014 +0200

    scsi: use sdev as argument for sense code printing
    
    We should be using the standard dev_printk() variants for
    sense code printing.
    
    [hch: remove __scsi_print_sense call in xen-scsiback, Acked by Juergen]
    [hch: folded bracing fix from Dan Carpenter]
    Signed-off-by: Hannes Reinecke <hare@suse.de>
    Reviewed-by: Robert Elliott <elliott@hp.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>

commit 37b6fea57b4fcc03689368b7aab1a897f6e9e6b7
Author: Wolfram Sang <wsa@the-dreams.de>
Date:   Mon Oct 20 16:21:34 2014 +0200

    scsi: ufs: drop owner assignment from platform_drivers
    
    A platform_driver does not need to set an owner, it will be populated by the
    driver core.
    
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>

commit e785060ea3a1c8e37a8bc1449c79e36bff2b5b13
Author: Dolev Raviv <draviv@codeaurora.org>
Date:   Thu Sep 25 15:32:36 2014 +0300

    ufs: definitions for phy interface
    
    - Adding some of the definitions missing in unipro.h, including power
      enumeration.
    - Read Modify Write Line helper function
    - Indication for the type of suspend
    
    Signed-off-by: Dolev Raviv <draviv@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Signed-off-by: Christoph Hellwig <hch@lst.de>

commit 374a246e4ebda1fc55d537877bf2412e511ecc7b
Author: Subhash Jadavani <subhashj@codeaurora.org>
Date:   Thu Sep 25 15:32:35 2014 +0300

    ufs: tune bkops while power managment events
    
    Add capability to control the auto bkops during suspend.
    If host explicitly enables the auto bkops (background operation) on device
    then only device would perform the bkops on its own. If auto bkops is not
    enabled explicitly and if the device reaches to state where it must do
    background operation, device would raise the urgent bkops exception event
    to host and then host will enable the auto bkops on device. This patch
    adds the option to choose whether auto bkops should be enabled during
    runtime suspend or not. Since we don't want to keep the device active to
    perform the non critical bkops, host will enable urgent bkops only.
    
    Keep auto-bkops enabled after resume if urgent bkops needed.
    If device bkops status shows that its in critical need of executing
    background operations, host should allow the device to continue doing
    background operations.
    
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Dolev Raviv <draviv@codeaurora.org>
    Signed-off-by: Christoph Hellwig <hch@lst.de>

commit 856b348305c98d4e0c8e5eafa97c61443197f8d3
Author: Sahitya Tummala <stummala@codeaurora.org>
Date:   Thu Sep 25 15:32:34 2014 +0300

    ufs: Add support for clock scaling using devfreq framework
    
    The clocks for UFS device will be managed by generic DVFS (Dynamic
    Voltage and Frequency Scaling) framework within kernel. This devfreq
    framework works with different governors to scale the clocks. By default,
    UFS devices uses simple_ondemand governor which scales the clocks up if
    the load is more than upthreshold and scales down if the load is less than
    downthreshold.
    
    Signed-off-by: Sahitya Tummala <stummala@codeaurora.org>
    Signed-off-by: Dolev Raviv <draviv@codeaurora.org>
    Signed-off-by: Christoph Hellwig <hch@lst.de>

commit 4cff6d991e4a291cf50fe2659da2ea9ad46620bf
Author: Sahitya Tummala <stummala@codeaurora.org>
Date:   Thu Sep 25 15:32:33 2014 +0300

    ufs: Add freq-table-hz property for UFS device
    
    Add freq-table-hz propery for UFS device to keep track of
    <min max> frequencies supported by UFS clocks.
    
    Signed-off-by: Sahitya Tummala <stummala@codeaurora.org>
    Signed-off-by: Dolev Raviv <draviv@codeaurora.org>
    Signed-off-by: Christoph Hellwig <hch@lst.de>

commit 1ab27c9cf8b63dd8dec9e17b5c17721c7f3b6cc7
Author: Sahitya Tummala <stummala@codeaurora.org>
Date:   Thu Sep 25 15:32:32 2014 +0300

    ufs: Add support for clock gating
    
    The UFS controller clocks can be gated after certain period of
    inactivity, which is typically less than runtime suspend timeout.
    In addition to clocks the link will also be put into Hibern8 mode
    to save more power.
    
    The clock gating can be turned on by enabling the capability
    UFSHCD_CAP_CLK_GATING. To enable entering into Hibern8 mode as part of
    clock gating, set the capability UFSHCD_CAP_HIBERN8_WITH_CLK_GATING.
    
    The tracing events for clock gating can be enabled through debugfs as:
    echo 1 > /sys/kernel/debug/tracing/events/ufs/ufshcd_clk_gating/enable
    cat /sys/kernel/debug/tracing/trace_pipe
    
    Signed-off-by: Sahitya Tummala <stummala@codeaurora.org>
    Signed-off-by: Dolev Raviv <draviv@codeaurora.org>
    Signed-off-by: Christoph Hellwig <hch@lst.de>

commit 7eb584db73bebbc9852a14341431ed6935419bec
Author: Dolev Raviv <draviv@codeaurora.org>
Date:   Thu Sep 25 15:32:31 2014 +0300

    ufs: refactor configuring power mode
    
    Sometimes, the device shall report its maximum power and speed
    capabilities, but we might not wish to configure it to use those
    maximum capabilities.
    This change adds support for the vendor specific host driver to
    implement power change notify callback.
    
    To enable configuring different power modes (number of lanes,
    gear number and fast/slow modes) it is necessary to split the
    configuration stage from the stage that reads the device max power mode.
    In addition, it is not required to read the configuration more than
    once, thus the configuration is stored after reading it once.
    
    Signed-off-by: Dolev Raviv <draviv@codeaurora.org>
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Signed-off-by: Christoph Hellwig <hch@lst.de>

commit 57d104c153d3d6d7bea60089e80f37501851ed2c
Author: Subhash Jadavani <subhashj@codeaurora.org>
Date:   Thu Sep 25 15:32:30 2014 +0300

    ufs: add UFS power management support
    
    This patch adds support for UFS device and UniPro link power management
    during runtime/system PM.
    
    Main idea is to define multiple UFS low power levels based on UFS device
    and UFS link power states. This would allow any specific platform or pci
    driver to choose the best suited low power level during runtime and
    system suspend based on their power goals.
    
    bkops handlig:
    To put the UFS device in sleep state when bkops is disabled, first query
    the bkops status from the device and enable bkops on device only if
    device needs time to perform the bkops.
    
    START_STOP handling:
    Before sending START_STOP_UNIT to the device well-known logical unit
    (w-lun) to make sure that the device w-lun unit attention condition is
    cleared.
    
    Write protection:
    UFS device specification allows LUs to be write protected, either
    permanently or power on write protected. If any LU is power on write
    protected and if the card is power cycled (by powering off VCCQ and/or
    VCC rails), LU's write protect status would be lost. So this means those
    LUs can be written now. To ensures that UFS device is power cycled only
    if the power on protect is not set for any of the LUs, check if power on
    write protect is set and if device is in sleep/power-off state & link in
    inactive state (Hibern8 or OFF state).
    If none of the Logical Units on UFS device is power on write protected
    then all UFS device power rails (VCC, VCCQ & VCCQ2) can be turned off if
    UFS device is in power-off state and UFS link is in OFF state. But current
    implementation would disable all device power rails even if UFS link is
    not in OFF state.
    
    Low power mode:
    If UFS link is in OFF state then UFS host controller can be power collapsed
    to avoid leakage current from it. Note that if UFS host controller is power
    collapsed, full UFS reinitialization will be required on resume to
    re-establish the link between host and device.
    
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Dolev Raviv <draviv@codeaurora.org>
    Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>
    Signed-off-by: Christoph Hellwig <hch@lst.de>

commit 0ce147d48a3e3352859f0c185e98e8392bee7a25
Author: Subhash Jadavani <subhashj@codeaurora.org>
Date:   Thu Sep 25 15:32:29 2014 +0300

    ufs: introduce well known logical unit in ufs
    
    UFS device may have standard LUs and LUN id could be from 0x00 to 0x7F.
    UFS device specification use "Peripheral Device Addressing Format"
    (SCSI SAM-5) for standard LUs.
    
    UFS device may also have the Well Known LUs (also referred as W-LU) which
    again could be from 0x00 to 0x7F. For W-LUs, UFS device specification only
    allows the "Extended Addressing Format" (SCSI SAM-5) which means the W-LUNs
    would start from 0xC100 onwards.
    
    This means max. LUN number reported from UFS device could be 0xC17F hence
    this patch advertise the "max_lun" as 0xC17F which will allow SCSI mid
    layer to detect the W-LUs as well.
    
    But once the W-LUs are detected, UFSHCD driver may get the commands with
    SCSI LUN id upto 0xC17F but UPIU LUN id field is only 8-bit wide so it
    requires the mapping of SCSI LUN id to UPIU LUN id. This patch also add
    support for this mapping.
    
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Dolev Raviv <draviv@codeaurora.org>
    Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>
    Signed-off-by: Christoph Hellwig <hch@lst.de>

commit 2a8fa600445c45222632810a4811ce820279d106
Author: Subhash Jadavani <subhashj@codeaurora.org>
Date:   Thu Sep 25 15:32:28 2014 +0300

    ufs: manually add well known logical units
    
    UFS device specification requires the UFS devices to support 4 well known
    logical units:
    	"REPORT_LUNS" (address: 01h)
    	"UFS Device" (address: 50h)
    	"RPMB" (address: 44h)
    	"BOOT" (address: 30h)
    
    UFS device's power management needs to be controlled by "POWER CONDITION"
    field of SSU (START STOP UNIT) command. But this "power condition" field
    will take effect only when its sent to "UFS device" well known logical unit
    hence we require the scsi_device instance to represent this logical unit in
    order for the UFS host driver to send the SSU command for power management.
    
    We also require the scsi_device instance for "RPMB" (Replay Protected
    Memory Block) LU so user space process can control this LU. User space may
    also want to have access to BOOT LU.
    
    This patch adds the scsi device instances for each of all well known LUs
    (except "REPORT LUNS" LU).
    
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Dolev Raviv <draviv@codeaurora.org>
    Signed-off-by: Christoph Hellwig <hch@lst.de>

commit 3a4bf06d1f6d7de17528b962bc91fcbb2e568b4e
Author: Yaniv Gardi <ygardi@codeaurora.org>
Date:   Thu Sep 25 15:32:27 2014 +0300

    ufs: Active Power Mode - configuring bActiveICCLevel
    
    The maximum power consumption in active is determined by bActiveICCLevel.
    The configuration is done by reading max current supported by the
    regulators connected to VCC, VCCQ and VCCQ2 rails on the boards, and
    reading the current consumption levels from the device for each rails
    (vcc/vccq/vccq2) using power descriptor.
    We configure the bActiveICCLevel attribute, with the max value that
    correspond to the minimum-of(VCC-current-level,VCCQ-current-level,
    VCCQ2-current-level).
    In order to minimize resume latency, pre-fetch icc levels and reference
    clock during initialization and avoid reading them each link startup
    during resume.
    
    Signed-off-by: Raviv Shvili <rshvili@codeaurora.org>
    Signed-off-by: Yaniv Gardi <ygardi@codeaurora.org>
    Signed-off-by: Dolev Raviv <draviv@codeaurora.org>
    Signed-off-by: Christoph Hellwig <hch@lst.de>

commit 1d337ec2f35e69a046dab0cc77e64e68d1cdcd8b
Author: Sujit Reddy Thumma <sthumma@codeaurora.org>
Date:   Thu Sep 25 15:32:26 2014 +0300

    ufs: improve init sequence
    
    In ->hce_enable_notify() callback the vendor specific initialization
    may carry out additional DME configuration using UIC commands and
    hence the UIC command completion interrupt enable bit should be set
    before the post reset notification.
    Add retries if the link-startup fails. This is required since due to
    hardware timing issues, the Uni-Pro link-startup might fail. The UFS
    HCI recovery procedure contradicts the Uni-Pro sequence. The UFS HCI
    specifies to resend DME_LINKSTARTUP command after IS.ULLS (link-lost
    interrupt) is received. The Uni-Pro specifies that if link-startup
    fails the link is in "down" state. The link-lost is indicated to the
    DME user only when the link is up. Hence, the UFS HCI recovery procedure
    of waiting for IS.ULLS and retrying link-startup may not work properly.
    
    At the end, if detection fails, power off (disable clocks, regulators,
    phy) if the UFS device detection fails. This saves power while UFS device
    is not embedded into the system.
    
    Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>
    Signed-off-by: Dolev Raviv <draviv@codeaurora.org>
    Signed-off-by: Christoph Hellwig <hch@lst.de>

commit da461cec9a1ff0a074cd1db47598ba36a1686ef4
Author: Subhash Jadavani <subhashj@codeaurora.org>
Date:   Thu Sep 25 15:32:25 2014 +0300

    ufs: refactor query descriptor API support
    
    Currently reading query descriptor is more tightened to each
    descriptor type. This patch generalize the approach and allows
    reading any parameter from any query descriptor.
    
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Dolev Raviv <draviv@codeaurora.org>
    Signed-off-by: Christoph Hellwig <hch@lst.de>

commit 6a771a656041f404fae143e5d753d37f5c0688e7
Author: Raviv Shvili <rshvili@codeaurora.org>
Date:   Thu Sep 25 15:32:24 2014 +0300

    ufs: add voting support for host controller power
    
    Add the support for voting of the regulator powering the
    host controller logic.
    
    Signed-off-by: Raviv Shvili <rshvili@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Dolev Raviv <draviv@codeaurora.org>
    Signed-off-by: Christoph Hellwig <hch@lst.de>

commit c6e79dacd86fd7ddd452fa52b3f4ca996db31e49
Author: Sujit Reddy Thumma <sthumma@codeaurora.org>
Date:   Thu Sep 25 15:32:23 2014 +0300

    ufs: Add clock initialization support
    
    Add generic clock initialization support for UFSHCD platform
    driver. The clock info is read from device tree using standard
    clock bindings. A generic max-clock-frequency-hz property is
    defined to save information on maximum operating clock frequency
    the h/w supports.
    
    Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>
    Signed-off-by: Dolev Raviv <draviv@codeaurora.org>
    Signed-off-by: Christoph Hellwig <hch@lst.de>

commit aa497613093412ee26ef4bfa4ffec8391553dfca
Author: Sujit Reddy Thumma <sthumma@codeaurora.org>
Date:   Thu Sep 25 15:32:22 2014 +0300

    ufs: Add regulator enable support
    
    UFS devices are powered by at most three external power supplies -
    - VCC - The flash memory core power supply, 2.7V to 3.6V or 1.70V to 1.95V
    - VCCQ - The controller and I/O power supply, 1.1V to 1.3V
    - VCCQ2 - Secondary controller and/or I/O power supply, 1.65V to 1.95V
    
    For some devices VCCQ or VCCQ2 are optional as they can be
    generated using internal LDO inside the UFS device.
    
    Add DT bindings for voltage regulators that can be controlled
    from host driver.
    
    Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>
    Signed-off-by: Dolev Raviv <draviv@codeaurora.org>
    Signed-off-by: Christoph Hellwig <hch@lst.de>

commit 5c0c28a84af9f9b6061bb4855a30e13d289b4ae1
Author: Sujit Reddy Thumma <sthumma@codeaurora.org>
Date:   Thu Sep 25 15:32:21 2014 +0300

    ufs: Allow vendor specific initialization
    
    Some vendor specific controller versions might need to configure
    vendor specific - registers, clocks, voltage regulators etc. to
    initialize the host controller UTP layer and Uni-Pro stack.
    Provide some common initialization operations that can be used
    to configure vendor specifics. The methods can be extended in
    future, for example, for power mode transitions.
    
    The operations are vendor/board specific and hence determined with
    the help of compatible property in device tree.
    
    Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>
    Signed-off-by: Dolev Raviv <draviv@codeaurora.org>
    Signed-off-by: Christoph Hellwig <hch@lst.de>

commit 9baa3c34ac4e27f7e062f266f50cc5dbea26a6c1
Author: Benoit Taine <benoit.taine@lip6.fr>
Date:   Fri Aug 8 15:56:03 2014 +0200

    PCI: Remove DEFINE_PCI_DEVICE_TABLE macro use
    
    We should prefer `struct pci_device_id` over `DEFINE_PCI_DEVICE_TABLE` to
    meet kernel coding style guidelines.  This issue was reported by checkpatch.
    
    A simplified version of the semantic patch that makes this change is as
    follows (http://coccinelle.lip6.fr/):
    
    // <smpl>
    
    @@
    identifier i;
    declarer name DEFINE_PCI_DEVICE_TABLE;
    initializer z;
    @@
    
    - DEFINE_PCI_DEVICE_TABLE(i)
    + const struct pci_device_id i[]
    = z;
    
    // </smpl>
    
    [bhelgaas: add semantic patch]
    Signed-off-by: Benoit Taine <benoit.taine@lip6.fr>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>

commit ea2aab2401576a7a2921f656d4184a0225aa138f
Author: Sujit Reddy Thumma <sthumma@codeaurora.org>
Date:   Wed Jul 23 09:31:12 2014 +0300

    scsi: ufs: fix endianness sparse warnings
    
    Fix many warnings with incorrect endian assumptions
    which makes the code unportable to new architectures.
    
    The UFS specification defines the byte order as big-endian
    for UPIU structure and little-endian for the host controller
    transfer/task management descriptors.
    
    Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>
    Signed-off-by: Dolev Raviv <draviv@codeaurora.org>
    Signed-off-by: Christoph Hellwig <hch@lst.de>

commit 7289f983548b24822971d7c3c2997734ff07b2f3
Author: Sujit Reddy Thumma <sthumma@codeaurora.org>
Date:   Wed Jul 23 09:31:11 2014 +0300

    scsi: ufs: make undeclared functions static
    
    Make undeclared functions static to suppress warnings
    from sparse tool.
    
    Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>
    Signed-off-by: Dolev Raviv <draviv@codeaurora.org>
    Signed-off-by: Christoph Hellwig <hch@lst.de>

commit ca3d7bf9c646e976d33027d65dfd60124e3dc7e9
Author: Akinobu Mita <akinobu.mita@gmail.com>
Date:   Sun Jul 13 21:24:46 2014 +0900

    ufs: fix DMA mask setting
    
    If the controller doesn't support 64-bit addressing mode, it must not
    set the DMA mask to 64-bit.  But it's unconditionally trying to set to
    64-bit without checking 64-bit addressing support in the controller
    capabilities.
    
    It was correctly checked before commit 3b1d05807a9a68c6d0580e9248247a774a4d3be6
    ("[SCSI] ufs: Segregate PCI Specific Code"), this aims to restores
    the correct behaviour.
    
    To achieve this in a generic way, firstly we should push down the DMA
    mask setting routine ufshcd_set_dma_mask() from PCI glue driver to core
    driver in order to do it for both PCI glue driver and Platform glue
    driver.  Secondly, we should change pci_ DMA mapping API to dma_ DMA
    mapping API because core driver is independent of glue drivers.
    
    Signed-off-by: Akinobu Mita <mita@fixstars.com>
    Acked-by: Santosh Y <santoshsy@gmail.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>

commit eeda47499f01878d60b3db8883fbbafc3c6a2a54
Author: Akinobu Mita <akinobu.mita@gmail.com>
Date:   Tue Jul 1 23:00:32 2014 +0900

    ufs: adjust queue settings to PRDT limitations
    
    The data byte count field of PRDT indicates the length of data block
    which is a segment of data transfer for SCSI commands.  The value of
    this field shall have Dword granularity and the the maximum of length
    is 256KB.
    
    This adjusts dma pad mask and max segment size to the above-mentioned
    PRDT limitations.
    
    Signed-off-by: Akinobu Mita <mita@fixstars.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Tested-by: Dolev Raviv <draviv@codeaurora.org>
    Acked-by: Vinayak Holikatti <vinholikatti@gmail.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>

commit b2a6c5223c1e1fe293e965685a8373a6a7aca5fe
Author: Sujit Reddy Thumma <sthumma@codeaurora.org>
Date:   Tue Jul 1 12:22:38 2014 +0300

    ufs: Fix sending unsupported SCSI command
    
    UFS 1.1 specification does not support MAINTENANCE IN(0xA3) SCSI
    command and hence it doesn't support REPORT SUPPORTED OPERATION CODES
    as well.
    
    Change-Id: Ic09c5b46b2511b1c28db478023c32b898ac69e6d
    Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>
    Signed-off-by: Dolev Raviv <draviv@codeaurora.org>
    Signed-off-by: Christoph Hellwig <hch@lst.de>

commit e9d501b154ff62030670f7a210ed00d4cc2cae26
Author: Dolev Raviv <draviv@codeaurora.org>
Date:   Tue Jul 1 12:22:37 2014 +0300

    ufs: read door bell register after clearing interrupt aggregation
    
    In interrupt context, after reading and comparing the UTRLDBR to
    hba->outstanding_request and before resetting the interrupt aggregation,
    there might be completion of another transfer request (TR). Such TRs might
    get stuck, pending, until the next interrupt is generated (if any).
    Changing the sequence of resetting the interrupt aggregation first and
    then reading UTRLDBR status, will assure that completed TRs won't get
    stuck pending.
    
    Signed-off-by: Dolev Raviv <draviv@codeaurora.org>
    Signed-off-by: Christoph Hellwig <hch@lst.de>

commit 4264fd613a6a4b9c1c91d9291653d0fdaf4fd288
Author: Sujit Reddy Thumma <sthumma@codeaurora.org>
Date:   Sun Jun 29 09:40:20 2014 +0300

    ufs: Fix queue depth handling for best effort cases
    
    Some UFS devices may expose bLUQueueDepth field as zero indicating
    that the queue depth depends on the number of resources available
    for LUN at a particular instant to handle the outstanding transfer
    requests. Currently, when response for SCSI command is TASK_FULL
    the LLD decrements the queue depth but fails to increment when the
    resources are available. The scsi mid-layer handles the change in
    queue depth heuristically and offers simple interface with
    ->change_queue_depth.
    
    Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>
    Signed-off-by: Dolev Raviv <draviv@codeaurora.org>
    Acked-by: Santosh Y <santoshsy@gmail.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>

commit 1b3e89563119f1e0422230915dcaf23a262628b7
Author: Dolev Raviv <draviv@codeaurora.org>
Date:   Sun Jun 29 09:40:19 2014 +0300

    ufs: Logical Unit (LU) command queue depth
    
    Some of the UFS devices may support different number of commands
    that can be queued per LU. At the current implementation,
    SW configure each of the UFS devices LU's according to the
    controller capability.
    
    In this patch the queue depth available per LU is read and updated in
    the LU's SW structure.
    
    Signed-off-by: Dolev Raviv <draviv@codeaurora.org>
    Signed-off-by: Raviv Shvili <rshvili@codeaurora.org>
    Acked-by: Santosh Y <santoshsy@gmail.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>

commit c6d4a83177d1c45ec42d65ff48d85fb5b74cb526
Author: Dolev Raviv <draviv@codeaurora.org>
Date:   Sun Jun 29 09:40:18 2014 +0300

    ufs: device query status and size check
    
    Check query response status before copying the response.
    Add descriptor query response size check, before copying it to buffer.
    
    Signed-off-by: Dolev Raviv <draviv@codeaurora.org>
    Signed-off-by: Raviv Shvili <rshvili@codeaurora.org>
    Acked-by: Santosh Y <santoshsy@gmail.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>

commit d44a5f98bb49b2c15348fa65cee73df4a157bfbf
Author: Dolev Raviv <draviv@codeaurora.org>
Date:   Sun Jun 29 09:40:17 2014 +0300

    ufs: query descriptor API
    
    Introduces the API for sending queries with descriptors.
    A descriptor is a block or page of parameters that describe the device.
    The descriptors are classified into types and can range in size
    from 2 bytes through 255 bytes.
    All descriptors have a length value as their first element, and a type
    identification element as their second byte.
    All descriptors are readable and some may be write once.
    They are accessed using their type, index and selector.
    
    Signed-off-by: Dolev Raviv <draviv@codeaurora.org>
    Signed-off-by: Raviv Shvili <rshvili@codeaurora.org>
    Acked-by: Santosh Y <santoshsy@gmail.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>

commit e8e7f27139d5ba5b9f05fdee3f6224116ce8427c
Author: Sujit Reddy Thumma <sthumma@codeaurora.org>
Date:   Mon May 26 10:59:15 2014 +0530

    scsi: ufs: Improve UFS fatal error handling
    
    Error handling in UFS driver is broken and resets the host controller
    for fatal errors without re-initialization. Correct the fatal error
    handling sequence according to UFS Host Controller Interface (HCI)
    v1.1 specification.
    
    o Processed requests which are completed w/wo error are reported to
      SCSI layer and any pending commands that are not started are aborted
      in the controller and re-queued into scsi mid-layer queue.
    
    o Upon determining fatal error condition the host controller may hang
      forever until a reset is applied. Block SCSI layer for sending new
      requests and apply reset in a separate error handling work.
    
    o SCSI is informed about the expected Unit-Attention exception from the
      device for the immediate command after a reset so that the SCSI layer
      take necessary steps to establish communication with the device.
    
    Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>
    Reviewed-by: Yaniv Gardi <ygardi@codeaurora.org>
    Tested-by: Dolev Raviv <draviv@codeaurora.org>
    Acked-by: Vinayak Holikatti <vinholikatti@gmail.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>

commit 3441da7ddbdedf91bfd5cc8609c571ffc24942dd
Author: Sujit Reddy Thumma <sthumma@codeaurora.org>
Date:   Mon May 26 10:59:14 2014 +0530

    scsi: ufs: Fix device and host reset methods
    
    As of now SCSI initiated error handling is broken because,
    the reset APIs don't try to bring back the device initialized and
    ready for further transfers.
    
    In case of timeouts, the scsi error handler takes care of handling aborts
    and resets. Improve the error handling in such scenario by resetting the
    device and host and re-initializing them in proper manner.
    
    Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>
    Reviewed-by: Yaniv Gardi <ygardi@codeaurora.org>
    Tested-by: Dolev Raviv <draviv@codeaurora.org>
    Acked-by: Vinayak Holikatti <vinholikatti@gmail.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>

commit f20810d8d0bbe70dc6bb526213c31171f7e54751
Author: Sujit Reddy Thumma <sthumma@codeaurora.org>
Date:   Mon May 26 10:59:13 2014 +0530

    scsi: ufs: Fix hardware race conditions while aborting a command
    
    There is a possible race condition in the hardware when the abort
    command is issued to terminate the ongoing SCSI command as described
    below:
    
    - A bit in the door-bell register is set in the controller for a
      new SCSI command.
    - In some rare situations, before controller get a chance to issue
      the command to the device, the software issued an abort command.
    - If the device recieves abort command first then it returns success
      because the command itself is not present.
    - Now if the controller commits the command to device it will be
      processed.
    - Software thinks that command is aborted and proceed while still
      the device is processing it.
    - The software, controller and device may go out of sync because of
      this race condition.
    
    To avoid this, query task presence in the device before sending abort
    task command so that after the abort operation, the command is guaranteed
    to be non-existent in both controller and the device.
    
    Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>
    Reviewed-by: Yaniv Gardi <ygardi@codeaurora.org>
    Tested-by: Dolev Raviv <draviv@codeaurora.org>
    Acked-by: Vinayak Holikatti <vinholikatti@gmail.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>

commit e293313262d3c780632f7888878c982fa0a9bf7e
Author: Sujit Reddy Thumma <sthumma@codeaurora.org>
Date:   Mon May 26 10:59:12 2014 +0530

    scsi: ufs: Fix broken task management command implementation
    
    Currently, sending Task Management (TM) command to the card might
    be broken in some scenarios as listed below:
    
    Problem: If there are more than 8 TM commands the implementation
             returns error to the caller.
    Fix:     Wait for one of the slots to be emptied and send the command.
    
    Problem: Sometimes it is necessary for the caller to know the TM service
             response code to determine the task status.
    Fix:     Propogate the service response to the caller.
    
    Problem: If the TM command times out no proper error recovery is
             implemented.
    Fix:     Clear the command in the controller door-bell register, so that
             further commands for the same slot don't fail.
    
    Problem: While preparing the TM command descriptor, the task tag used
             should be unique across SCSI/NOP/QUERY/TM commands and not the
    	 task tag of the command which the TM command is trying to manage.
    Fix:     Use a unique task tag instead of task tag of SCSI command.
    
    Problem: Since the TM command involves H/W communication, abruptly ending
             the request on kill interrupt signal might cause h/w malfunction.
    Fix:     Wait for hardware completion interrupt with TASK_UNINTERRUPTIBLE
             set.
    
    Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>
    Reviewed-by: Yaniv Gardi <ygardi@codeaurora.org>
    Tested-by: Dolev Raviv <draviv@codeaurora.org>
    Acked-by: Vinayak Holikatti <vinholikatti@gmail.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>

commit bdbe5d2fe67031bf51777afbfa91585efcf9dbf5
Author: Sujit Reddy Thumma <sthumma@codeaurora.org>
Date:   Mon May 26 10:59:11 2014 +0530

    scsi: ufs: make undeclared functions static
    
    Make undeclared functions static and declare exported symbols
    to suppress warnings from sparse tool.
    
    Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>
    Acked-by: Vinayak Holikatti <vinholikatti@gmail.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>

commit e8c8e82ae96c68cb03e0e877b5a226633d999549
Author: Sujit Reddy Thumma <sthumma@codeaurora.org>
Date:   Mon May 26 10:59:10 2014 +0530

    scsi: ufs: fix endianness sparse warnings
    
    Fix many warnings with incorrect endian assumptions
    which makes the code unportable to new architectures.
    
    The UFS specification defines the byte order as big-endian
    for UPIU structure and little-endian for the host controller
    transfer/task management descriptors.
    
    Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>
    Acked-by: Vinayak Holikatti <vinholikatti@gmail.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>

commit 9073e1a804c3096eda84ee7cbf11d1f174236c75
Merge: 4937e2a 2bb9936
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Nov 15 16:47:22 2013 -0800

    Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/trivial
    
    Pull trivial tree updates from Jiri Kosina:
     "Usual earth-shaking, news-breaking, rocket science pile from
      trivial.git"
    
    * 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/trivial: (23 commits)
      doc: usb: Fix typo in Documentation/usb/gadget_configs.txt
      doc: add missing files to timers/00-INDEX
      timekeeping: Fix some trivial typos in comments
      mm: Fix some trivial typos in comments
      irq: Fix some trivial typos in comments
      NUMA: fix typos in Kconfig help text
      mm: update 00-INDEX
      doc: Documentation/DMA-attributes.txt fix typo
      DRM: comment: `halve' -> `half'
      Docs: Kconfig: `devlopers' -> `developers'
      doc: typo on word accounting in kprobes.c in mutliple architectures
      treewide: fix "usefull" typo
      treewide: fix "distingush" typo
      mm/Kconfig: Grammar s/an/a/
      kexec: Typo s/the/then/
      Documentation/kvm: Update cpuid documentation for steal time and pv eoi
      treewide: Fix common typo in "identify"
      __page_to_pfn: Fix typo in comment
      Correct some typos for word frequency
      clk: fixed-factor: Fix a trivial typo
      ...

commit 08b7e10716a518af01b07915dbb1938868bbf878
Author: Jingoo Han <jg1.han@samsung.com>
Date:   Tue Sep 24 10:16:20 2013 +0900

    SCSI: remove unnecessary pci_set_drvdata()
    
    Since commit 0998d0631001288a5974afc0b2a5f568bcdecb4d
    (device-core: Ensure drvdata = NULL when no driver is bound),
    the driver core clears the driver data to NULL after device_release
    or on probe failure. Thus, it is not needed to manually clear the
    device driver data to NULL.
    
    Signed-off-by: Jingoo Han <jg1.han@samsung.com>
    Cc: James Bottomley <JBottomley@parallels.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>

commit d3e89bac7155341d3cfe58e76842a2a9729e6e41
Author: Seungwon Jeon <tgih.jun@samsung.com>
Date:   Sat Aug 31 21:40:24 2013 +0530

    [SCSI] ufs: configure the attribute for power mode
    
    UIC attributes can be set with using DME_SET command for
    power mode change. For configuration the link capability
    attributes are used, which is updated after successful
    link startup.
    
    Signed-off-by: Seungwon Jeon <tgih.jun@samsung.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Santosh Y <santoshsy@gmail.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>

commit 53b3d9c3fdda94d14392dd221c67e24700b1fed6
Author: Seungwon Jeon <tgih.jun@samsung.com>
Date:   Sat Aug 31 21:40:22 2013 +0530

    [SCSI] ufs: add operation for the uic power mode change
    
    Setting PA_PWRMode using DME_SET triggers the power mode
    change. And then the result will be given by the HCS.UPMCRS.
    This operation should be done atomically.
    
    Signed-off-by: Seungwon Jeon <tgih.jun@samsung.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Tested-by: Yaniv Gardi <ygardi@codeaurora.org>
    Signed-off-by: Santosh Y <santoshsy@gmail.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>

commit 12b4fdb4f6bccb5459a2f75fbe0eab253bfceab4
Author: Seungwon Jeon <tgih.jun@samsung.com>
Date:   Sat Aug 31 21:40:21 2013 +0530

    [SCSI] ufs: add dme configuration primitives
    
    Implements to support GET and SET operations of the DME.
    These operations are used to configure the behavior of
    the UNIPRO. Along with basic operation, {Peer/AttrSetType}
    can be mixed.
    
    Signed-off-by: Seungwon Jeon <tgih.jun@samsung.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Tested-by: Yaniv Gardi <ygardi@codeaurora.org>
    Signed-off-by: Santosh Y <santoshsy@gmail.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>

commit 7d568652d3abc81a6d684d4760571a3ccb6f68d9
Author: Seungwon Jeon <tgih.jun@samsung.com>
Date:   Sat Aug 31 21:40:20 2013 +0530

    [SCSI] ufs: fix the setting interrupt aggregation counter
    
    IACTH(Interrupt aggregation counter threshold) value is allowed
    up to 0x1F and current setting value is the maximum.
    This value is related with NUTRS(max:0x20) of HCI's capability.
    Considering HCI controller doesn't support the maximum, IACTH
    setting should be adjusted with possible value.
    For that, existing 'ufshcd_config_int_aggr' is split into two part
    [reset, configure].
    
    Signed-off-by: Seungwon Jeon <tgih.jun@samsung.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Tested-by: Yaniv Gardi <ygardi@codeaurora.org>
    Signed-off-by: Santosh Y <santoshsy@gmail.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>

commit 1c2623c50dfd38c823a62c57af2ca9551a861b21
Author: Seungwon Jeon <tgih.jun@samsung.com>
Date:   Sat Aug 31 21:40:19 2013 +0530

    [SCSI] ufs: find out sense data over scsi status values
    
    Unlike 'GOOD' and 'CHECK CONDITION', other status values in
    Response UPIU may or may not contain sense data. That is returning
    sense data isn't obvious. So, in this case the Data Segment Length
    field should be checked. If a non-zero value, it means that UPIU
    has Sense Data in the Data Segment area.
    
    Signed-off-by: Seungwon Jeon <tgih.jun@samsung.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Tested-by: Yaniv Gardi <ygardi@codeaurora.org>
    Signed-off-by: Santosh Y <santoshsy@gmail.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>

commit 11f08ca8113d237d4cc732b4f091271c3fd0fc62
Author: Wolfram Sang <wsa@the-dreams.de>
Date:   Tue Jul 30 00:36:05 2013 +0530

    [SCSI] ufs: don't check resource with devm_ioremap_resource
    
    devm_ioremap_resource does sanity checks on the given resource. No need to
    duplicate this in the driver.
    
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Signed-off-by: Santosh Y <santoshsy@gmail.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>

commit 6fae39003811e11f10481f43f13ff611ad18c831
Author: Wei Yongjun <yongjun_wei@trendmicro.com.cn>
Date:   Tue Jul 30 00:36:04 2013 +0530

    [SCSI] ufshcd-pltfrm: remove redundant dev_err call in ufshcd_pltfrm_probe()
    
    There is a error message within devm_ioremap_resource
    already, so remove the dev_err call to avoid redundant
    error message.
    
    Signed-off-by: Wei Yongjun <yongjun_wei@trendmicro.com.cn>
    Signed-off-by: Santosh Y <santoshsy@gmail.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>

commit cfdf9c9103e4b80feb222c2ec1dbec6b8fe9edbf
Author: Akinobu Mita <mita@fixstars.com>
Date:   Tue Jul 30 00:36:03 2013 +0530

    [SCSI] ufs: don't stop controller before scsi_remove_host()
    
    scsi_remove_host() sends SYNCHRONIZE CACHE commands for write cache
    enabled scsi disk devices.  So stopping controller working shouldn't
    be done before scsi_remove_host().
    
    Signed-off-by: Akinobu Mita <mita@fixstars.com>
    Signed-off-by: Santosh Y <santoshsy@gmail.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>

commit e0f4b7c5acbac65d2f56ed5e1d2d8036f9db936e
Author: Akinobu Mita <mita@fixstars.com>
Date:   Tue Jul 30 00:36:02 2013 +0530

    [SCSI] ufs: don't disable_irq() if the IRQ can be shared among devices
    
    When removing the UFS driver, disable_irq() is called and the IRQ is
    not enabled again.  Unfortunately, the IRQ is requested with IRQF_SHARED
    and it can be shared among several devices.  So disabling the IRQ in
    this way is just breaking other devices which are sharing the IRQ.
    
    Signed-off-by: Akinobu Mita <mita@fixstars.com>
    Signed-off-by: Santosh Y <santoshsy@gmail.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>

commit 36f4f3b672748e7d9786ef1e0ae5caefd337b668
Author: Akinobu Mita <mita@fixstars.com>
Date:   Tue Jul 30 00:36:01 2013 +0530

    [SCSI] ufshcd-pci: release ioremapped region during removing driver
    
    Before commit 2953f850c3b80bdca004967c83733365d8aa0aa2 ("[SCSI] ufs:
    use devres functions for ufshcd"), UFSHCI register was ioremapped by
    each glue-driver (ufshcd-pltfrm and ufshcd-pci) during probing and it
    was iounmapped by core-driver during removing driver.  The commit
    converted ufshcd-pltfrm to use devres functions, but it didn't convert
    ufshcd-pci.
    
    Therefore, the change causes ufshcd-pci driver not to iounmap UFSHCI
    register region during removing driver.  This fixes it by converting
    ufshcd-pci to use devres functions.
    
    Signed-off-by: Akinobu Mita <mita@fixstars.com>
    Signed-off-by: Santosh Y <santoshsy@gmail.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>

commit 62694735ca95c74dac4eb9068d59801ac0ddebaf
Author: Sujit Reddy Thumma <sthumma@codeaurora.org>
Date:   Tue Jul 30 00:36:00 2013 +0530

    [SCSI] ufs: Add runtime PM support for UFS host controller driver
    
    Add runtime PM helpers to suspend/resume UFS controller at runtime.
    Enable runtime PM by default for pci and platform drivers as the
    initialized hardware can suspend if it is not used after bootup.
    
    Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>
    Signed-off-by: Santosh Y <santoshsy@gmail.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>

commit 66ec6d59407baf7c7a1f99c79d632403c1064266
Author: Sujit Reddy Thumma <sthumma@codeaurora.org>
Date:   Tue Jul 30 00:35:59 2013 +0530

    [SCSI] ufs: Add support for host assisted background operations
    
    Background operations in the UFS device can be disabled by
    the host to reduce the response latency of transfer requests.
    Add support for enabling/disabling the background operations
    during runtime suspend/resume of the device.
    
    If the device is in critical need of BKOPS it will raise an
    URGENT_BKOPS exception which should be handled by the host to
    make sure the device performs as expected.
    
    During bootup, the BKOPS is enabled in the device by default.
    The disable of BKOPS is supported only when the driver supports
    runtime suspend/resume operations as the runtime PM framework
    provides a way to determine the device idleness and hence BKOPS
    can be managed effectively. During runtime resume the BKOPS is
    disabled to reduce latency and during runtime suspend the BKOPS
    is enabled to allow device to carry out idle time BKOPS.
    
    In some cases where the BKOPS is disabled during runtime resume
    and due to continuous data transfers the runtime suspend is not
    triggered, the BKOPS is enabled when the device raises a level-2
    exception (outstanding operations - performance impact).
    
    Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>
    Signed-off-by: Santosh Y <santoshsy@gmail.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>

commit 68078d5cc1a59b2ddfc6982c67308f20f991426a
Author: Dolev Raviv <draviv@codeaurora.org>
Date:   Tue Jul 30 00:35:58 2013 +0530

    [SCSI] ufs: Set fDeviceInit flag to initiate device initialization
    
    Allow UFS device to complete its initialization and accept
    SCSI commands by setting fDeviceInit flag. The device may take
    time for this operation and hence the host should poll until
    fDeviceInit flag is toggled to zero. This step is mandated by
    UFS device specification for device initialization completion.
    
    Signed-off-by: Dolev Raviv <draviv@codeaurora.org>
    Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>
    Signed-off-by: Santosh Y <santoshsy@gmail.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>

commit 5a0b0cb9bee767ef10ff9ce2fb4141af06416288
Author: Sujit Reddy Thumma <sthumma@codeaurora.org>
Date:   Tue Jul 30 00:35:57 2013 +0530

    [SCSI] ufs: Add support for sending NOP OUT UPIU
    
    As part of device initialization sequence, sending NOP OUT UPIU and
    waiting for NOP IN UPIU response is mandatory. This confirms that the
    device UFS Transport (UTP) layer is functional and the host can configure
    the device with further commands. Add support for sending NOP OUT UPIU to
    check the device connection path and test whether the UTP layer on the
    device side is functional during initialization.
    
    A tag is acquired from the SCSI tag map space in order to send the device
    management command. When the tag is acquired by internal command the scsi
    command is rejected with host busy flag in order to requeue the request.
    To avoid frequent collisions between internal commands and scsi commands
    the device management command tag is allocated in the opposite direction
    w.r.t block layer tag allocation.
    
    Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>
    Signed-off-by: Dolev Raviv <draviv@codeaurora.org>
    Signed-off-by: Santosh Y <santoshsy@gmail.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>

commit aca898f5d7ddcd0e7cc358a613338b009a88af80
Author: Akinobu Mita <mita@fixstars.com>
Date:   Wed Jun 26 22:39:34 2013 +0530

    [SCSI] ufshcd-pltfrm: remove unnecessary dma_set_coherent_mask() call
    
    Changing the device coherent dma mask to the value that currently set
    has no effect.
    
    Signed-off-by: Akinobu Mita <mita@fixstars.com>
    Signed-off-by: Santosh Y <santoshsy@gmail.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>

commit cf9f4b59c52bd12c850c20435eef9f196976f541
Author: Akinobu Mita <mita@fixstars.com>
Date:   Wed Jun 26 22:39:33 2013 +0530

    [SCSI] ufs: fix register address in UIC error interrupt handling
    
    In UIC error interrupt handling, it checks if UIC data link layer error
    code indicates PA_INIT_ERROR in order to determine whether a fatal error
    handling is needed or not.
    
    But the code tries to read UIC data link layer error code from wrong
    REG_UIC_ERROR_CODE_PHY_ADAPTER_LAYER, it should be
    REG_UIC_ERROR_CODE_DATA_LINK_LAYER.
    
    Signed-off-by: Akinobu Mita <mita@fixstars.com>
    Signed-off-by: Santosh Y <santoshsy@gmail.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>

commit 2e2930a3449f1fe3806e26c4391a71097cae43f3
Author: Akinobu Mita <mita@fixstars.com>
Date:   Wed Jun 26 22:39:32 2013 +0530

    [SCSI] ufshcd-pltfrm: add missing empty slot in ufs_of_match[]
    
    of_match_table member in struct device_driver must be terminated by
    empty slot as a sentinel.
    
    Signed-off-by: Akinobu Mita <mita@fixstars.com>
    Signed-off-by: Santosh Y <santoshsy@gmail.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>

commit 2953f850c3b80bdca004967c83733365d8aa0aa2
Author: Seungwon Jeon <tgih.jun@samsung.com>
Date:   Thu Jun 27 13:31:54 2013 +0900

    [SCSI] ufs: use devres functions for ufshcd
    
    This patch replaces normal calls for resource allocation with devm_*()
    derivative functions. It makes resource freeing simpler.
    
    Signed-off-by: Seungwon Jeon <tgih.jun@samsung.com>
    Signed-off-by: Santosh Y <santoshsy@gmail.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>

commit 3ca316c582ddf11944806a27e460e7bd8f61a968
Author: Sujit Reddy Thumma <sthumma@codeaurora.org>
Date:   Wed Jun 26 22:39:30 2013 +0530

    [SCSI] ufs: Fix the response UPIU length setting
    
    The response UPIU length should be in DWORD and not in bytes.
    
    Signed-off-by: Maya Erez <merez@codeaurora.org>
    Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>
    Signed-off-by: Santosh Y <santoshsy@gmail.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>

commit 6ccf44fe4cd7c45a33f571788890a299d8bca448
Author: Seungwon Jeon <tgih.jun@samsung.com>
Date:   Wed Jun 26 22:39:29 2013 +0530

    [SCSI] ufs: rework link start-up process
    
    Link start-up requires long time with multiphase handshakes
    between UFS host and device. This affects driver's probe time.
    This patch let link start-up run asynchronously. Link start-up
    will be executed at the end of prove separately.
    Along with this change, the following is worked.
    
    Defined completion time of uic command to avoid a permanent wait.
    Added mutex to guarantee of uic command at a time.
    Adapted some sequence of controller initialization after link statup
    according to HCI standard.
    
    Signed-off-by: Seungwon Jeon <tgih.jun@samsung.com>
    Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>
    Tested-by: Maya Erez <merez@codeaurora.org>
    Signed-off-by: Santosh Y <santoshsy@gmail.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>

commit 261ea452037471b7cab6a3913d308acba54f7933
Author: Seungwon Jeon <tgih.jun@samsung.com>
Date:   Wed Jun 26 22:39:28 2013 +0530

    [SCSI] ufs: remove version check before IS reg clear
    
    There is no need to check the version to clear
    the interrupt status. And the order is changed
    prior to actual handling.
    
    Signed-off-by: Seungwon Jeon <tgih.jun@samsung.com>
    Tested-by: Maya Erez <merez@codeaurora.org>
    Signed-off-by: Santosh Y <santoshsy@gmail.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>

commit 2fbd009b40967fc54b7eb3580372736862291a06
Author: Seungwon Jeon <tgih.jun@samsung.com>
Date:   Wed Jun 26 22:39:27 2013 +0530

    [SCSI] ufs: amend interrupt configuration
    
    It makes interrupt setting more flexible especially
    for disabling. And wrong bit mask is fixed for ver 1.0.
    [17:16] is added for mask.
    
    Signed-off-by: Seungwon Jeon <tgih.jun@samsung.com>
    Tested-by: Maya Erez <merez@codeaurora.org>
    Signed-off-by: Santosh Y <santoshsy@gmail.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>

commit b873a27538dff59e77c15eaf23bdf7e6be7d36e9
Author: Seungwon Jeon <tgih.jun@samsung.com>
Date:   Wed Jun 26 22:39:26 2013 +0530

    [SCSI] ufs: wrap the i/o access operations
    
    Simplify operations with hiding mmio_base.
    
    Signed-off-by: Seungwon Jeon <tgih.jun@samsung.com>
    Tested-by: Maya Erez <merez@codeaurora.org>
    Signed-off-by: Santosh Y <santoshsy@gmail.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>

commit a4bfbcba691b2870d81218814267c6add885ac47
Author: Geert Uytterhoeven <geert@linux-m68k.org>
Date:   Tue May 14 21:34:14 2013 +0530

    [SCSI] ufs: SCSI_UFSHCD should depend on SCSI_DMA
    
    If NO_DMA=y:
    
    drivers/built-in.o: In function `ufshcd_transfer_req_compl':
    drivers/scsi/ufs/ufshcd.c:1182: undefined reference to `scsi_dma_unmap'
    drivers/built-in.o: In function `ufshcd_map_sg':
    drivers/scsi/ufs/ufshcd.c:377: undefined reference to `scsi_dma_map'
    drivers/built-in.o: In function `ufshcd_do_reset':
    drivers/scsi/ufs/ufshcd.c:912: undefined reference to `scsi_dma_unmap'
    drivers/built-in.o: In function `ufshcd_memory_alloc':
    drivers/scsi/ufs/ufshcd.c:565: undefined reference to `dma_alloc_coherent'
    drivers/built-in.o: In function `ufshcd_free_hba_memory':
    drivers/scsi/ufs/ufshcd.c:185: undefined reference to `dma_free_coherent'
    drivers/scsi/ufs/ufshcd.c:192: undefined reference to `dma_free_coherent'
    drivers/scsi/ufs/ufshcd.c:199: undefined reference to `dma_free_coherent'
    drivers/scsi/ufs/ufshcd.c:185: undefined reference to `dma_free_coherent'
    drivers/scsi/ufs/ufshcd.c:192: undefined reference to `dma_free_coherent'
    drivers/built-in.o:drivers/scsi/ufs/ufshcd.c:199: more undefined references to `dma_free_coherent' follow
    drivers/built-in.o: In function `ufshcd_abort':
    drivers/scsi/ufs/ufshcd.c:1498: undefined reference to `scsi_dma_unmap'
    drivers/built-in.o: In function `ufshcd_device_reset':
    drivers/scsi/ufs/ufshcd.c:1436: undefined reference to `scsi_dma_unmap'
    
    Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Santosh Y <santoshsy@gmail.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>

commit 123f87758658285f5f844d7e8a8b974ce88d1ffc
Author: Sachin Kamat <sachin.kamat@linaro.org>
Date:   Tue May 14 21:34:13 2013 +0530

    [SCSI] ufs: Remove redundant platform_set_drvdata()
    
    Commit 0998d06310 (device-core: Ensure drvdata = NULL when no
    driver is bound) removes the need to set driver data field to
    NULL.
    
    Signed-off-by: Sachin Kamat <sachin.kamat@linaro.org>
    Signed-off-by: Santosh Y <santoshsy@gmail.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>

commit 98b8e179edb768c57b8b18e4d61d4b02d1b82b37
Author: Vinayak Holikatti <vinholikatti@gmail.com>
Date:   Tue Feb 26 18:04:46 2013 +0530

    [SCSI] ufs: Correct the expected data transfersize
    
    This patch corrects the expected data transfer size of the
    command UPIU. The current implementation of cmd->transfersize
    is wrong as it probably equal to sector size. With this
    implementation the transfer size is updated correctly
    
    Reported-by: KOBAYASHI Yoshitake <yoshitake.kobayashi@toshiba.co.jp>
    Reviewed-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Namjae Jeon <linkinjeon@gmail.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Tested-by: Maya Erez <merez@codeaurora.org>
    Signed-off-by: Santosh Yaraganavi <santoshsy@gmail.com>
    Signed-off-by: Vinayak Holikatti <vinholikatti@gmail.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>

commit 03b1781aa978aab345b5a85d8596f8615281ba89
Author: Vinayak Holikatti <vinholikatti@gmail.com>
Date:   Tue Feb 26 18:04:45 2013 +0530

    [SCSI] ufs: Add Platform glue driver for ufshcd
    
    This patch adds Platform glue driver for ufshcd.
    
    Reviewed-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Namjae Jeon <linkinjeon@gmail.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Reviewed-by: Sujit Reddy Thumma <sthumma@codeaurora.org>
    Tested-by: Maya Erez <merez@codeaurora.org>
    Signed-off-by: Vinayak Holikatti <vinholikatti@gmail.com>
    Signed-off-by: Santosh Yaraganavi <santoshsy@gmail.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>

commit e0eca63e342124cff4307eafb43908cab5b3cf88
Author: Vinayak Holikatti <vinholikatti@gmail.com>
Date:   Mon Feb 25 21:44:33 2013 +0530

    [SCSI] ufs: Separate PCI code into glue driver
    
    This patch separates PCI code from ufshcd.c and makes it as a
    core driver module and adds a new file ufshcd-pci.c as PCI glue
    driver.
    
    [jejb: strip __devinit and devexit_p()]
    Reviewed-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Namjae Jeon <linkinjeon@gmail.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Tested-by: Maya Erez <merez@codeaurora.org>
    Signed-off-by: Vinayak Holikatti <vinholikatti@gmail.com>
    Signed-off-by: Santosh Yaraganavi <santoshsy@gmail.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>

commit 3b1d05807a9a68c6d0580e9248247a774a4d3be6
Author: Vinayak Holikatti <vinholikatti@gmail.com>
Date:   Mon Feb 25 21:44:32 2013 +0530

    [SCSI] ufs: Segregate PCI Specific Code
    
    This patch segregates the PCI specific code in ufshcd.c to make it
    ready for splitting into core ufs driver and PCI glue driver. Also
    copyright header modification to remove extra warranty disclaim.
    
    Reviewed-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Namjae Jeon <linkinjeon@gmail.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Tested-by: Maya Erez <merez@codeaurora.org>
    Signed-off-by: Vinayak Holikatti <vinholikatti@gmail.com>
    Signed-off-by: Santosh Yaraganavi <santoshsy@gmail.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>

commit 6f039790510fd630ff348efe8c4802dbaa041fba
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Dec 21 13:08:55 2012 -0800

    Drivers: scsi: remove __dev* attributes.
    
    CONFIG_HOTPLUG is going away as an option.  As a result, the __dev*
    markings need to be removed.
    
    This change removes the use of __devinit, __devexit_p, __devinitdata,
    __devinitconst, and __devexit from these drivers.
    
    Based on patches originally written by Bill Pemberton, but redone by me
    in order to handle some of the coding style issues better, by hand.
    
    Cc: Bill Pemberton <wfp5p@virginia.edu>
    Cc: Adam Radford <linuxraid@lsi.com>
    Cc: "James E.J. Bottomley" <JBottomley@parallels.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 94c122ab01f84332c371dc4ae0f5b70e879173d6
Author: Namjae Jeon <linkinjeon@gmail.com>
Date:   Tue Jul 10 20:41:54 2012 +0530

    [SCSI] ufs: fix incorrect return value about SUCCESS and FAILED
    
    Currently the UFS host driver has returned incorrect values for SUCCESS
    and FAILED.  Fix it to return the correct value to the upper layer.
    
    Signed-off-by: Namjae Jeon <linkinjeon@gmail.com>
    Acked-by: Santosh Y <santoshsy@gmail.com>
    Signed-off-by: Venkatraman S <svenkatr@ti.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>

commit 73ec513a3b1fa89d3cbaf0bc7dcc3a2b67936f2a
Author: Venkatraman S <svenkatr@ti.com>
Date:   Tue Jul 10 19:39:23 2012 +0530

    [SCSI] ufs: reverse the ufshcd_is_device_present logic
    
    Otherwise it counter intuitively returns 0 if device is present.
    
    Signed-off-by: Venkatraman S <svenkatr@ti.com>
    Reviewed-by: Namjae Jeon <linkinjeon@gmail.com>
    Acked-by: Santosh Y <santoshsy@gmail.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>

commit 17ccafc4ef00716d022cac9ff64cef0aafe7c02a
Author: Venkatraman S <svenkatr@ti.com>
Date:   Tue Jul 10 19:39:22 2012 +0530

    [SCSI] ufs: use module_pci_driver
    
    Use macro module_pci_driver and get rid of boilerplate code.  No
    functional changes.
    
    Signed-off-by: Venkatraman S <svenkatr@ti.com>
    Acked-by: Santosh Y <santoshsy@gmail.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>

commit 4886b1afee5aaccc2fb3202620a5608caf0c9284
Author: Namjae Jeon <linkinjeon@gmail.com>
Date:   Sun May 20 03:08:01 2012 -0400

    [SCSI] ufs: fix potential NULL pointer dereferencing error in ufshcd_prove.
    
    Avoid dereferencing a NULL pointer if scsi_host_alloc is failed.
    
    Signed-off-by: Namjae Jeon <linkinjeon@gmail.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>

commit 85bb4457ef47db81afef98f97de524199e139433
Author: Santosh Yaraganavi <santoshsy@gmail.com>
Date:   Mon Apr 23 18:52:11 2012 +0530

    [SCSI] ufs: Assign UTRLBAU = upper_32_ bits(UTRLD base address)
    
    UTP Transfer request list base registers UTRLBA and UTRLBAU
    must be assigned, lower-32 and upper-32 bits of UTRLD list
    physical base addresses respectively.
    
    Currently UTRLBAU is being assigned lower-32 bits of UTRLD
    physical base address. This will cause an issue with
    controllers that can support 64-bit addressing.
    
    This patch correctly assigns upper-32 bits of UTRLD physical
    base address to UTRLBAU.
    
    Reported-by: Rene De Jong <rene.dejong@arm.com>
    Signed-off-by: Santosh Yaraganavi <santoshsy@gmail.com>
    Reviewed-by: Vinayak Holikatti <vinholikatti@gmail.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>

commit fd0f8370c8a8400da5195e183ce1ef4f407cec21
Author: Venkatraman S <svenkatr@ti.com>
Date:   Thu Apr 19 11:46:22 2012 +0530

    [SCSI] ufs: Fix evaluation of UTP task completion code
    
    While interpreting the result of UTP task completion status,
    by using boolean &&, the evaluation would fail when the
    UPIU_TASK_MANAGEMENT_FUNC_SUCCEEDED was received.
    
    Either UPIU_TASK_MANAGEMENT_FUNC_COMPL or
    UPIU_TASK_MANAGEMENT_FUNC_SUCCEEDED should be
    considered as a success result.
    
    Reported-by: Joe Perches <joe@perches.com>
    Signed-off-by: Venkatraman S <svenkatr@ti.com>
    Reviewed-by: Namjae Jeon <linkinjeon@gmail.com>
    Acked-by: Santosh Y <santoshsy@gmail.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>

commit 7a3e97b0dc4bbac2ba7803564ab0057722689921
Author: Santosh Yaraganavi <santoshsy@gmail.com>
Date:   Wed Feb 29 12:11:50 2012 +0530

    [SCSI] ufshcd: UFS Host controller driver
    
    This patch adds support for Universal Flash Storage(UFS)
    host controllers. The UFS host controller driver
    includes host controller initialization method.
    
    The Initialization process involves following steps:
     - Initiate UFS Host Controller initialization process by writing
       to Host controller enable register
     - Configure UFS Host controller registers with host memory space
       datastructure offsets.
     - Unipro link startup procedure
     - Check for connected device
     - Configure UFS host controller to process requests
     - Enable required interrupts
     - Configure interrupt aggregation
    
    [jejb: fix warnings in 32 bit compile]
    Signed-off-by: Santosh Yaraganavi <santoshsy@gmail.com>
    Signed-off-by: Vinayak Holikatti <vinholikatti@gmail.com>
    Reviewed-by: Arnd Bergmann <arnd@linaro.org>
    Reviewed-by: Vishak G <vishak.g@samsung.com>
    Reviewed-by: Girish K S <girish.shivananjappa@linaro.org>
    Reviewed-by: Namjae Jeon <linkinjeon@gmail.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>
